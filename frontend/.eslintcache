[{"F:\\aabea\\project\\aabea\\frontend\\src\\index.js":"1","F:\\aabea\\project\\aabea\\frontend\\src\\store.js":"2","F:\\aabea\\project\\aabea\\frontend\\src\\App.js":"3","F:\\aabea\\project\\aabea\\frontend\\src\\reportWebVitals.js":"4","F:\\aabea\\project\\aabea\\frontend\\src\\reducers\\userReducers.js":"5","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\DashboardScreen.js":"6","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Footer.js":"7","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\HomeScreen.js":"8","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Header.js":"9","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\LoginScreen.js":"10","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserListScreen.js":"11","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\RegisterScreen.js":"12","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserEditScreen.js":"13","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Message.js":"14","F:\\aabea\\project\\aabea\\frontend\\src\\components\\FormContainer.js":"15","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Loader.js":"16","F:\\aabea\\project\\aabea\\frontend\\src\\constants\\userConstants.js":"17","F:\\aabea\\project\\aabea\\frontend\\src\\actions\\userActions.js":"18","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\index.js":"19","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\store.js":"20","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reportWebVitals.js":"21","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.js":"22","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\LoginScreen.js":"23","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Footer.js":"24","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserEditScreen.js":"25","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserListScreen.js":"26","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\userReducers.js":"27","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Message.js":"28","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\FormContainer.js":"29","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Loader.js":"30","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\userActions.js":"31","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\userConstants.js":"32","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HomeScreen\\HomeScreen.js":"33","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.styles.js":"34","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar.js":"35","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar\\Sidebar.js":"36","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.js":"37","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.styles.js":"38","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.Styles.js":"39","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.js":"40","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonateScreen\\DonateScreen.js":"41","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\TrainingScreen\\TrainingScreen.js":"42","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteesScreen.js":"43","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\Routes.js":"44","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.js":"45","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.Styles.js":"46","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.js":"47","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.Styles.js":"48","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.js":"49","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\EmailActivationScreen.js":"50","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\Section.js":"51","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\PageTitle.js":"52","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\[hash].js":"53","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\chapterReducers.js":"54","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\chapterConstants.js":"55","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.js":"56","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.Styles.js":"57","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\chapterActions.js":"58","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserPendingApproveScreen\\UserPendingApproveScreen.js":"59","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\paymentTypeReducers.js":"60","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\paymentTypeConstants.js":"61","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.js":"62","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.Styles.js":"63","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.js":"64","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.Styles.js":"65","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\paymentTypeActions.js":"66","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.js":"67","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.Styles.js":"68","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\PaymentDropdown.js":"69","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\DatePicker.js":"70","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.js":"71","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.Styles.js":"72","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.js":"73","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.js":"74","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.js":"75","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.Styles.js":"76","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.Styles.js":"77","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.Styles.js":"78","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegisterScreen.js":"79","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.js":"80","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.Styles.js":"81","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.js":"82","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.Styles.js":"83","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\vissionReducers.js":"84","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\announcementReducers.js":"85","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\missionReducers.js":"86","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\historyReducers.js":"87","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\historyConstants.js":"88","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\vissionConstants.js":"89","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\missionConstants.js":"90","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\announcementConstants.js":"91","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\announcementAction.js":"92","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\missionActions.js":"93","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js":"94"},{"size":597,"mtime":1611348613797,"results":"95","hashOfConfig":"96"},{"size":1051,"mtime":1611373294914,"results":"97","hashOfConfig":"96"},{"size":1137,"mtime":1611775129043,"results":"98","hashOfConfig":"96"},{"size":362,"mtime":499162500000,"results":"99","hashOfConfig":"96"},{"size":3625,"mtime":1611434427903,"results":"100","hashOfConfig":"96"},{"size":1045,"mtime":1611775040016,"results":"101","hashOfConfig":"96"},{"size":446,"mtime":1611772949677,"results":"102","hashOfConfig":"96"},{"size":5147,"mtime":1611261050924,"results":"103","hashOfConfig":"96"},{"size":4289,"mtime":1611443754148,"results":"104","hashOfConfig":"96"},{"size":2277,"mtime":1611444019672,"results":"105","hashOfConfig":"96"},{"size":4113,"mtime":1611859105296,"results":"106","hashOfConfig":"96"},{"size":3340,"mtime":1611847398274,"results":"107","hashOfConfig":"96"},{"size":4701,"mtime":1611851104005,"results":"108","hashOfConfig":"96"},{"size":256,"mtime":1603458280349,"results":"109","hashOfConfig":"96"},{"size":352,"mtime":1611368948725,"results":"110","hashOfConfig":"96"},{"size":410,"mtime":1603387806125,"results":"111","hashOfConfig":"96"},{"size":1593,"mtime":1611432914339,"results":"112","hashOfConfig":"96"},{"size":6154,"mtime":1611460368070,"results":"113","hashOfConfig":"96"},{"size":597,"mtime":1614170116794,"results":"114","hashOfConfig":"115"},{"size":4042,"mtime":1616273721942,"results":"116","hashOfConfig":"115"},{"size":362,"mtime":499162500000,"results":"117","hashOfConfig":"115"},{"size":3956,"mtime":1616700363424,"results":"118","hashOfConfig":"115"},{"size":5645,"mtime":1616699536192,"results":"119","hashOfConfig":"115"},{"size":467,"mtime":1613297424983,"results":"120","hashOfConfig":"115"},{"size":13959,"mtime":1615660272176,"results":"121","hashOfConfig":"115"},{"size":5880,"mtime":1613516249153,"results":"122","hashOfConfig":"115"},{"size":11704,"mtime":1616581331322,"results":"123","hashOfConfig":"115"},{"size":256,"mtime":1603458280349,"results":"124","hashOfConfig":"115"},{"size":349,"mtime":1614383733812,"results":"125","hashOfConfig":"115"},{"size":410,"mtime":1603387806125,"results":"126","hashOfConfig":"115"},{"size":20686,"mtime":1616686766825,"results":"127","hashOfConfig":"115"},{"size":5548,"mtime":1616581279076,"results":"128","hashOfConfig":"115"},{"size":5887,"mtime":1616780693730,"results":"129","hashOfConfig":"115"},{"size":191,"mtime":1613507729017,"results":"130","hashOfConfig":"115"},{"size":2400,"mtime":1613352800838,"results":"131","hashOfConfig":"132"},{"size":6738,"mtime":1616777531919,"results":"133","hashOfConfig":"115"},{"size":245,"mtime":1613615151045,"results":"134","hashOfConfig":"115"},{"size":330,"mtime":1613515675147,"results":"135","hashOfConfig":"115"},{"size":272,"mtime":1616638090353,"results":"136","hashOfConfig":"115"},{"size":12606,"mtime":1616690630624,"results":"137","hashOfConfig":"115"},{"size":17923,"mtime":1616688068075,"results":"138","hashOfConfig":"115"},{"size":1172,"mtime":1615640719604,"results":"139","hashOfConfig":"115"},{"size":1181,"mtime":1615640277401,"results":"140","hashOfConfig":"115"},{"size":710,"mtime":1613520803905,"results":"141","hashOfConfig":"115"},{"size":301,"mtime":1613524691788,"results":"142","hashOfConfig":"115"},{"size":758,"mtime":1613526042009,"results":"143","hashOfConfig":"115"},{"size":14067,"mtime":1616616720504,"results":"144","hashOfConfig":"115"},{"size":253,"mtime":1613613566640,"results":"145","hashOfConfig":"115"},{"size":4528,"mtime":1616638012523,"results":"146","hashOfConfig":"115"},{"size":3387,"mtime":1615915454477,"results":"147","hashOfConfig":"115"},{"size":156,"mtime":1614366800255,"results":"148","hashOfConfig":"115"},{"size":247,"mtime":1614366889834,"results":"149","hashOfConfig":"115"},{"size":602,"mtime":1614374668618,"results":"150","hashOfConfig":"115"},{"size":1605,"mtime":1614899458024,"results":"151","hashOfConfig":"115"},{"size":1205,"mtime":1616259644880,"results":"152","hashOfConfig":"115"},{"size":19366,"mtime":1616686973707,"results":"153","hashOfConfig":"115"},{"size":253,"mtime":1614899146910,"results":"154","hashOfConfig":"115"},{"size":2828,"mtime":1616686498377,"results":"155","hashOfConfig":"115"},{"size":10721,"mtime":1616780029602,"results":"156","hashOfConfig":"115"},{"size":1752,"mtime":1615078826899,"results":"157","hashOfConfig":"115"},{"size":849,"mtime":1615068453267,"results":"158","hashOfConfig":"115"},{"size":12469,"mtime":1615663171006,"results":"159","hashOfConfig":"115"},{"size":253,"mtime":1615070536282,"results":"160","hashOfConfig":"115"},{"size":10392,"mtime":1615075945664,"results":"161","hashOfConfig":"115"},{"size":253,"mtime":1615071884178,"results":"162","hashOfConfig":"115"},{"size":2989,"mtime":1616569674424,"results":"163","hashOfConfig":"115"},{"size":11133,"mtime":1615639989550,"results":"164","hashOfConfig":"115"},{"size":253,"mtime":1615071884178,"results":"165","hashOfConfig":"115"},{"size":3004,"mtime":1615512010247,"results":"166","hashOfConfig":"115"},{"size":901,"mtime":1615521123450,"results":"167","hashOfConfig":"115"},{"size":12107,"mtime":1616805687725,"results":"168","hashOfConfig":"115"},{"size":253,"mtime":1615630905796,"results":"169","hashOfConfig":"115"},{"size":2175,"mtime":1615640786390,"results":"170","hashOfConfig":"115"},{"size":10581,"mtime":1616805777799,"results":"171","hashOfConfig":"115"},{"size":2175,"mtime":1615640447921,"results":"172","hashOfConfig":"115"},{"size":253,"mtime":1615631295699,"results":"173","hashOfConfig":"115"},{"size":253,"mtime":1615631368581,"results":"174","hashOfConfig":"115"},{"size":253,"mtime":1615631214574,"results":"175","hashOfConfig":"115"},{"size":15023,"mtime":1616699585143,"results":"176","hashOfConfig":"115"},{"size":3158,"mtime":1616240862439,"results":"177","hashOfConfig":"115"},{"size":1118,"mtime":1616218420594,"results":"178","hashOfConfig":"115"},{"size":3643,"mtime":1616244374130,"results":"179","hashOfConfig":"115"},{"size":1118,"mtime":1616241271921,"results":"180","hashOfConfig":"115"},{"size":1915,"mtime":1616261768939,"results":"181","hashOfConfig":"115"},{"size":2886,"mtime":1616801590511,"results":"182","hashOfConfig":"115"},{"size":2633,"mtime":1616805757821,"results":"183","hashOfConfig":"115"},{"size":2227,"mtime":1616261823981,"results":"184","hashOfConfig":"115"},{"size":947,"mtime":1616463915059,"results":"185","hashOfConfig":"115"},{"size":947,"mtime":1616463960613,"results":"186","hashOfConfig":"115"},{"size":1134,"mtime":1616805711449,"results":"187","hashOfConfig":"115"},{"size":1323,"mtime":1616801554789,"results":"188","hashOfConfig":"115"},{"size":4477,"mtime":1616798015699,"results":"189","hashOfConfig":"115"},{"size":4174,"mtime":1616804976795,"results":"190","hashOfConfig":"115"},{"size":9293,"mtime":1616703123759,"results":"191","hashOfConfig":"115"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"1shrj8b",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"194"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"194"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"194"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"194"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},"4o7zxk",{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"235"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"235"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"235"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"235"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"235"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"235"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l0jjdi",{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"235"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"235"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"235"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"235"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"235"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"235"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"235"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"235"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"235"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"235"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"235"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"235"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"235"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"235"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"235"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"235"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"235"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"235"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"235"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"235"},"F:\\aabea\\project\\aabea\\frontend\\src\\index.js",[],["414","415"],"F:\\aabea\\project\\aabea\\frontend\\src\\store.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\App.js",["416"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          {/* <Route path='/dashboard' component={DashboardScreen} /> */}\n          <Route path='/dashboard' component={UserListScreen} />\n          <Route path='/users/:id/edit' component={UserEditScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","F:\\aabea\\project\\aabea\\frontend\\src\\reportWebVitals.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\reducers\\userReducers.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\DashboardScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\Footer.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\HomeScreen.js",["417","418","419"],"import React from 'react';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Button,\r\n  Carousel,\r\n} from 'react-bootstrap';\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6} lg={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Announcements</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore\r\n                officiis facilis beatae consequatur reiciendis dicta quia\r\n                voluptatem, ab, voluptatum eligendi ullam libero facere impedit\r\n                molestiae repudiandae ipsa, necessitatibus numquam velit?\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>Events:</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore\r\n                officiis facilis beatae consequatur reiciendis dicta quia\r\n                voluptatem, ab, voluptatum eligendi ullam libero facere impedit\r\n                molestiae repudiandae ipsa, necessitatibus numquam velit?\r\n              </Card.Text>\r\n            </Card.Body>\r\n\r\n            <Card.Body>\r\n              <Card.Link href='#'>Card Link</Card.Link>\r\n              <Card.Link href='#'>Another Link</Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={6}>\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Mission</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Special title treatment</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Vission</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Vission title </Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>History</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>History Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Any other Main Topic</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Topic Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={6} lg={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Quick Links</Card.Title>\r\n              <Card.Link href='#'>Link 1</Card.Link>\r\n              <Card.Link href='#'>Link 2</Card.Link>\r\n              <Card.Link href='#'>Link 3</Card.Link>\r\n              <Card.Link href='#'>Link 4</Card.Link>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>Current Committee:</Card.Title>\r\n\r\n              <Carousel controls={false} indicators={false}>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?building'\r\n                    alt='First slide'\r\n                  />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?nature'\r\n                    alt='Third slide'\r\n                  />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?people'\r\n                    alt='Third slide'\r\n                  />\r\n                </Carousel.Item>\r\n              </Carousel>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Header.js",["420"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      {/* First */}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} href='/' className='text-center'>\r\n            <h1>Logo</h1>\r\n          </Col>\r\n          <Col>\r\n            <Carousel controls={false} indicators={false}>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='First slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Second */}\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        expand='lg'\r\n        sticky='top'\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AABEA</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='mr-auto'>\r\n              <LinkContainer to='/'>\r\n                <Nav.Link>Home</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <LinkContainer to='/dashboard'>\r\n                  <Nav.Link>Dashboard</Nav.Link>\r\n                </LinkContainer>\r\n              ) : (\r\n                <LinkContainer to='/about'>\r\n                  <Nav.Link>About</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n            <Nav className='ml-auto'>\r\n              {userInfo && (\r\n                <>\r\n                  <LinkContainer to='/committees'>\r\n                    <Nav.Link>Committees</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n\r\n              <LinkContainer to='/donate'>\r\n                <Nav.Link>Donate</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                  <NavDropdown title={userInfo.username} id='username'>\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to='/register'>\r\n                    <Nav.Link>Registration</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'></i>\r\n                      Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>{' '}\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\RegisterScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserEditScreen.js",["421"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [username, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/dashboard');\r\n    } else {\r\n      if (!user.username || user.id != userId) {\r\n        console.log(userId);\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.username);\r\n        setEmail(user.email);\r\n        setImage(user.image);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, user, userId, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUser({ id: userId, username, email, image, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        className='btn btn-light my-3 btn-sm btn-outline-success'\r\n        to='/dashboard'\r\n      >\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='username'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='username'\r\n                placeholder='Enter Name..'\r\n                value={username}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email..'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image :</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url..'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              {/* <Form.Label>Admin</Form.Label> */}\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Message.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\FormContainer.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\Loader.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\constants\\userConstants.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\actions\\userActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\index.js",[],["422","423"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\store.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reportWebVitals.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.js",["424","425"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport * as S from './App.styles';\nimport Footer from './components/Footer';\nimport Header from './components/Header/Header';\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegistrationScreen/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen/DashboardScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\n// imort for sidebar experiment\n// import Sidebar from './components/Sidebar/Sidebar';\n// import MainScreen from './screens/MainScreen';\nimport PaymentScreen from './screens/PaymentScreen/PaymentScreen';\nimport DonateScreen from './screens/DonateScreen/DonateScreen';\nimport TrainingScreen from './screens/TrainingScreen/TrainingScreen';\nimport CommittieesScreen from './screens/CommitteesScreen/CommitteesScreen';\n// import Navbar from './components/Navbar/Navbar';\nimport EmailActivationScreen from './screens/EmailActivationScreen/EmailActivationScreen';\nimport verifyUserEmail from './screens/EmailActivationScreen/[hash]';\nimport SystemAdminScreen from './screens/SystemAdminScreen/SystemAdminScreen';\nimport UserPendingApproveScreen from './screens/UserPendingApproveScreen/UserPendingApproveScreen';\nimport ChapterScreen from './screens/ChapterScreen/ChapterScreen';\nimport PaymentTypeScreen from './screens/PaymentTypeScreen/PaymentTypeScreen';\nimport AnnouncementScreen from './screens/AnnouncementScreen/AnnouncementScreen';\nimport MissionScreen from './screens/MissionScreen/MissionScreen';\nimport VissionScreen from './screens/VissionScreen/VissionScreen';\nimport HistoryScreen from './screens/HistoryScreen/HistoryScreen';\nimport PasswordResetScreen from './screens/PasswordResetScreen/PasswordResetScreen';\nimport PasswordUpdateScreen from './screens/PasswordUpdateScreen/PasswordUpdateScreen';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Header />\n        <main className='py-3'>\n          <Container>\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/password/recover' component={PasswordResetScreen} />\n            <Route\n              path='/password/reset/:id/:token'\n              component={PasswordUpdateScreen}\n            />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/activate/:hash' component={EmailActivationScreen} />\n            <Route path='/dashboardScreen' component={UserListScreen} />\n            <Route path='/dashboard' component={DashboardScreen} />\n            <Route path='/systemAdmin' component={SystemAdminScreen} />\n            <Route path='/chapter' component={ChapterScreen} />\n            <Route path='/announcement' component={AnnouncementScreen} />\n            <Route path='/mission' component={MissionScreen} />\n            <Route path='/vission' component={VissionScreen} />\n            <Route path='/history' component={HistoryScreen} />\n            <Route path='/paymentType' component={PaymentTypeScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/donate' component={DonateScreen} />\n            <Route path='/training' component={TrainingScreen} />\n            <Route path='/committiees' component={CommittieesScreen} />\n            <Route\n              path='/users/:id/pending'\n              component={UserPendingApproveScreen}\n            />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/users/:id/edit' component={UserEditScreen} />\n            <Route path='/' component={HomeScreen} exact />\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\LoginScreen.js",["426","427","428"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login, logout, resendVerifyEmail } from '../actions/userActions';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport swal from 'sweetalert';\r\nimport {\r\n  USER_LOGOUT,\r\n  USER_PASSWORD_RESET_RESET,\r\n  USER_VERIFY_EMAIL_RESEND_RESET,\r\n} from '../constants/userConstants';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [userRole, setUserRole] = useState('member');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error: errorLogin, userInfo } = userLogin;\r\n\r\n  const userVerifyEmailResend = useSelector(\r\n    (state) => state.userVerifyEmailResend\r\n  );\r\n  const {\r\n    loading: veResendLoading,\r\n    error: veResendError,\r\n    success,\r\n  } = userVerifyEmailResend;\r\n\r\n  const redirect = location.search\r\n    ? location.search.split('=')[1]\r\n    : '/dashboard';\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: USER_PASSWORD_RESET_RESET });\r\n\r\n    if (userInfo && userInfo.userRole !== 'systemAdmin') {\r\n      history.push(redirect);\r\n    } else if (userInfo && userInfo.userRole === 'systemAdmin') {\r\n      history.push('/systemAdmin');\r\n    } else if (errorLogin) {\r\n      // console.log(errorLogin);\r\n      if (errorLogin === 'Invalid User' || errorLogin === 'Invalid Password!') {\r\n        swal('Error!', errorLogin, 'error');\r\n        dispatch({ type: USER_LOGOUT });\r\n      } else if (\r\n        errorLogin ===\r\n        'Your application is under review. You will be notified once it is reviewed!'\r\n      ) {\r\n        swal('Error!', errorLogin, 'error');\r\n        dispatch({ type: USER_LOGOUT });\r\n      } else if (success) {\r\n        console.log(success);\r\n        swal('Success!', success, 'success').then(() => {\r\n          dispatch(logout());\r\n        });\r\n      } else if (veResendError) {\r\n        console.log(veResendError);\r\n        swal('Error!', veResendError, 'error').then(() => {\r\n          dispatch(logout());\r\n        });\r\n      } else {\r\n        swal('Error!', errorLogin, {\r\n          buttons: {\r\n            catch: {\r\n              text: 'Resend Verification Link',\r\n              value: 'resend',\r\n            },\r\n\r\n            ok: true,\r\n          },\r\n        }).then((value) => {\r\n          switch (value) {\r\n            case 'ok':\r\n              swal.close();\r\n              dispatch(logout());\r\n              break;\r\n\r\n            case 'resend':\r\n              dispatch(resendVerifyEmail(email, password));\r\n\r\n              console.log(email);\r\n              console.log(password);\r\n\r\n              break;\r\n\r\n            default:\r\n              swal.close();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [history, userInfo, success, redirect, errorLogin, veResendError]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Dispatch Login\r\n    dispatch(login(userRole, email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      {/* Card start */}\r\n      <Card border='success'>\r\n        <Card.Header\r\n          className='text-center'\r\n          as='h2'\r\n          style={{ color: '#033c73' }}\r\n        >\r\n          LOGIN\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {errorLogin && <Message variant='danger'>{errorLogin}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email..'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password..'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='userRole'>\r\n              <Form.Label>Sign In As: </Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                // onChange={qtyChangeHandler}\r\n                onChange={(e) => setUserRole(e.target.value)}\r\n              >\r\n                <option value='member'>Member</option>\r\n                <option value='admin'>Admin</option>\r\n                <option value='systemAdmin'>System Admin</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='info' block>\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer className='text-muted'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              New ?{' '}\r\n              <Link\r\n                to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Link to={'/password/recover'}>Forgot your password?</Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      {/* card above */}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Footer.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserEditScreen.js",["429"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {\r\n  getUserDetails,\r\n  getUserDetailsById,\r\n  updateUser,\r\n} from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const memberId = match.params.id;\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [address2, setAddress2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [alternatePhone, setAlternatePhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [alternateEmail, setAlternateEmail] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [userRole, setUserRole] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/dashboard');\r\n    } else {\r\n      if (!user.memberId) {\r\n        console.log(memberId);\r\n        dispatch(getUserDetailsById(memberId));\r\n      } else {\r\n        setFirstName(user.firstName);\r\n        setMInit(user.mInit);\r\n        setLastName(user.lastName);\r\n        setAddress1(user.address1);\r\n        setAddress2(user.address2);\r\n        setCity(user.city);\r\n        setState(user.state);\r\n        setZipcode(user.zipcode);\r\n        setPrimaryPhone(user.primaryPhone);\r\n        setAlternatePhone(user.alternatePhone);\r\n        setDegree(user.degree);\r\n        setDegreeYear(user.degreeYear);\r\n        setMajor(user.major);\r\n        setCollegeName(user.collegeName);\r\n        setEmail(user.primaryEmail);\r\n        setAlternateEmail(user.alternateEmail);\r\n        setImage(user.image);\r\n        setUserRole(user.userRole);\r\n        setStatus(user.status);\r\n      }\r\n    }\r\n  }, [dispatch, history, user, memberId, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      updateUser({\r\n        id: memberId,\r\n        image,\r\n        userRole,\r\n        firstName,\r\n        mInit,\r\n        lastName,\r\n        address1,\r\n        address2,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        alternateEmail,\r\n        primaryPhone,\r\n        alternatePhone,\r\n        degree,\r\n        degreeYear,\r\n        major,\r\n        collegeName,\r\n        status,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userInfo.userRole === 'systemAdmin' ? (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/systemAdmin'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      ) : (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/dashboard'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      <FormContainer>\r\n        <Card border='primary'>\r\n          <Card.Header className='text-center' as='h2'>\r\n            Edit User\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='firstName'>\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control\r\n                    type='firstName'\r\n                    placeholder='Please Enter Your First Name..'\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='mInit'>\r\n                  <Form.Label>M. Initial</Form.Label>\r\n                  <Form.Control\r\n                    type='mInit'\r\n                    placeholder=' Please Enter Your M. Initial: Mr / Ms'\r\n                    value={mInit}\r\n                    onChange={(e) => setMInit(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='lastName'>\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control\r\n                    type='lastName'\r\n                    placeholder='Please Enter Your Last Name..'\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address1'>\r\n                  <Form.Label>Primary Address</Form.Label>\r\n                  <Form.Control\r\n                    type='address1'\r\n                    placeholder='Please Enter Address..'\r\n                    value={address1}\r\n                    onChange={(e) => setAddress1(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address2'>\r\n                  <Form.Label>Alternative Address</Form.Label>\r\n                  <Form.Control\r\n                    type='address2'\r\n                    placeholder='Please Enter Address..'\r\n                    value={address2}\r\n                    onChange={(e) => setAddress2(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  <Form.Control\r\n                    type='city'\r\n                    placeholder='Enter City..'\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='state'>\r\n                  <Form.Label>State</Form.Label>\r\n                  <Form.Control\r\n                    type='state'\r\n                    placeholder='Enter State..'\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='zipcode'>\r\n                  <Form.Label>Zipcode</Form.Label>\r\n                  <Form.Control\r\n                    type='zipcode'\r\n                    placeholder='Enter Zipcode..'\r\n                    value={zipcode}\r\n                    onChange={(e) => setZipcode(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='primaryPhone'>\r\n                  <Form.Label>Primary Phone Number</Form.Label>\r\n                  <Form.Control\r\n                    type='primaryPhone'\r\n                    placeholder='Enter Your Phone Number..'\r\n                    value={primaryPhone}\r\n                    onChange={(e) => setPrimaryPhone(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='alternatePhone'>\r\n                  <Form.Label>Alternate Phone Number</Form.Label>\r\n                  <Form.Control\r\n                    type='alternatePhone'\r\n                    placeholder='Enter additional Phone Number..'\r\n                    value={alternatePhone}\r\n                    onChange={(e) => setAlternatePhone(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='degree'>\r\n                  <Form.Label>Degree</Form.Label>\r\n                  <Form.Control\r\n                    type='degree'\r\n                    placeholder='Enter Your Last Degree Received..'\r\n                    value={degree}\r\n                    onChange={(e) => setDegree(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='degreeYear'>\r\n                  <Form.Label>Degree Year</Form.Label>\r\n                  <Form.Control\r\n                    type='degreeYear'\r\n                    placeholder='Enter The Year of Degree Awarded..'\r\n                    value={degreeYear}\r\n                    onChange={(e) => setDegreeYear(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='major'>\r\n                  <Form.Label>Major</Form.Label>\r\n                  <Form.Control\r\n                    type='major'\r\n                    placeholder='Enter Your Major..'\r\n                    value={major}\r\n                    onChange={(e) => setMajor(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='collegeName'>\r\n                  <Form.Label>College Name</Form.Label>\r\n                  <Form.Control\r\n                    type='collegeName'\r\n                    placeholder='Enter Your University/College Name..'\r\n                    value={collegeName}\r\n                    onChange={(e) => setCollegeName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email..'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    readOnly\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='alternateEmail'>\r\n                  <Form.Label>Alternate Email Address</Form.Label>\r\n                  <Form.Control\r\n                    type='alternateEmail'\r\n                    placeholder='Enter another Email..'\r\n                    value={alternateEmail}\r\n                    onChange={(e) => setAlternateEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image'>\r\n                  <Form.Label>Image :</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter image url..'\r\n                    value={image}\r\n                    onChange={(e) => setImage(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.File\r\n                    id='image-file'\r\n                    label='Choose File'\r\n                    custom\r\n                    onChange={uploadFileHandler}\r\n                  ></Form.File>\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='status'>\r\n                  <Form.Label>Member Status</Form.Label>\r\n                  <Form.Control\r\n                    type='status'\r\n                    placeholder='Member Status: active/inactive/pending'\r\n                    value={status}\r\n                    onChange={(e) => setStatus(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='userRole'>\r\n                  <Form.Label>Member Type</Form.Label>\r\n                  <Form.Control\r\n                    type='userRole'\r\n                    placeholder='User Role: admin/member/systemAdmin'\r\n                    value={userRole}\r\n                    onChange={(e) => setUserRole(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId='isAdmin'> */}\r\n                {/* <Form.Label>Admin</Form.Label> */}\r\n                {/* <Form.Check */}\r\n                {/* type='checkbox' */}\r\n                {/* label='Is Admin' */}\r\n                {/* checked={isAdmin} */}\r\n                {/* onChange={(e) => setIsAdmin(e.target.checked)} */}\r\n                {/* ></Form.Check> */}\r\n                {/* </Form.Group> */}\r\n\r\n                <Button type='submit' variant='primary' block>\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Card.Body>\r\n          <Card.Footer className='text-muted'>2 days ago</Card.Footer>\r\n        </Card>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserListScreen.js",["430"],"import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          // id='sidebar-wrapper'\r\n        >\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/'>\r\n                    <Nav.Link>Dashboard</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/dashboardScreen'>\r\n                    <Nav.Link>DashboardScreen</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/dashboard'>\r\n                    <Nav.Link>Dashboard</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  Committiees\r\n                </Button>\r\n              </Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer className='text-muted'>\r\n              <Link\r\n                className='btn btn-outline-warning btn-sm btn-block my-5 rounded'\r\n                to=''\r\n              >\r\n                another button\r\n              </Link>\r\n            </Card.Footer>\r\n          </Card>{' '}\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Header as='h2'>Users</Card.Header>\r\n\r\n            <Card.Body>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n              ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>ID</th>\r\n                      <th>IMAGE</th>\r\n                      <th>NAME</th>\r\n                      <th>EMAIL</th>\r\n                      <th>ADMIN</th>\r\n                      {userInfo && userInfo.userRole === 'admin' && (\r\n                        <th>EDIT/DELETE</th>\r\n                      )}\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {users.map((user) => (\r\n                      <tr key={user.userId}>\r\n                        <td>{user.userId}</td>\r\n                        <td>\r\n                          {' '}\r\n                          <Image src={user.image} thumbnail />\r\n                        </td>\r\n                        <td> {user.userName}</td>\r\n                        <td>\r\n                          <a href={`mailto: ${user.email}`}> {user.email}</a>\r\n                        </td>\r\n                        <td>\r\n                          {user.userRole === 'admin' ? (\r\n                            <i\r\n                              className='fas fa-check'\r\n                              style={{ color: 'green' }}\r\n                            ></i>\r\n                          ) : (\r\n                            <i\r\n                              className='fas fa-times'\r\n                              style={{ color: 'red' }}\r\n                            ></i>\r\n                          )}\r\n                        </td>\r\n                        {userInfo.userRole === 'admin' && (\r\n                          <td>\r\n                            <LinkContainer to={`/users/${user.userId}/edit`}>\r\n                              <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'></i>\r\n                              </Button>\r\n                            </LinkContainer>\r\n\r\n                            <Button\r\n                              variant='danger'\r\n                              className='btn-sm'\r\n                              onClick={() => deleteHandler(user.id)}\r\n                            >\r\n                              <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\userReducers.js",["431"],"import {\r\n  USER_APPROVE_FAIL,\r\n  USER_APPROVE_REQUEST,\r\n  USER_APPROVE_RESET,\r\n  USER_APPROVE_SUCCESS,\r\n  USER_CREATE_ADMIN_FAIL,\r\n  USER_CREATE_ADMIN_REQUEST,\r\n  USER_CREATE_ADMIN_RESET,\r\n  USER_CREATE_ADMIN_SUCCESS,\r\n  USER_DELETE_ADMIN_FAIL,\r\n  USER_DELETE_ADMIN_REQUEST,\r\n  USER_DELETE_ADMIN_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DONATE_FAIL,\r\n  USER_DONATE_REQUEST,\r\n  USER_DONATE_RESET,\r\n  USER_DONATE_SUCCESS,\r\n  USER_DONATION_DETAILS_FAIL,\r\n  USER_DONATION_DETAILS_REQUEST,\r\n  USER_DONATION_DETAILS_RESET,\r\n  USER_DONATION_DETAILS_SUCCESS,\r\n  USER_EMAIL_VERIFY_FAIL,\r\n  USER_EMAIL_VERIFY_REQUEST,\r\n  USER_EMAIL_VERIFY_RESET,\r\n  USER_EMAIL_VERIFY_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_RESET,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_PASSWORD_RESET_FAIL,\r\n  USER_PASSWORD_RESET_REQUEST,\r\n  USER_PASSWORD_RESET_RESET,\r\n  USER_PASSWORD_RESET_SUCCESS,\r\n  USER_PASSWORD_UPDATE_FAIL,\r\n  USER_PASSWORD_UPDATE_REQUEST,\r\n  USER_PASSWORD_UPDATE_RESET,\r\n  USER_PASSWORD_UPDATE_SUCCESS,\r\n  USER_PAYMENT_DETAILS_FAIL,\r\n  USER_PAYMENT_DETAILS_REQUEST,\r\n  USER_PAYMENT_DETAILS_RESET,\r\n  USER_PAYMENT_DETAILS_SUCCESS,\r\n  USER_PAY_FAIL,\r\n  USER_PAY_REQUEST,\r\n  USER_PAY_RESET,\r\n  USER_PAY_SUCCESS,\r\n  USER_PENDING_DELETE_FAIL,\r\n  USER_PENDING_DELETE_REQUEST,\r\n  USER_PENDING_DELETE_SUCCESS,\r\n  USER_PENDING_DETAILS_FAIL,\r\n  USER_PENDING_DETAILS_REQUEST,\r\n  USER_PENDING_DETAILS_RESET,\r\n  USER_PENDING_DETAILS_SUCCESS,\r\n  USER_PENDING_LIST_FAIL,\r\n  USER_PENDING_LIST_REQUEST,\r\n  USER_PENDING_LIST_RESET,\r\n  USER_PENDING_LIST_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_RESET,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_VERIFY_EMAIL_RESEND_FAIL,\r\n  USER_VERIFY_EMAIL_RESEND_REQUEST,\r\n  USER_VERIFY_EMAIL_RESEND_RESET,\r\n  USER_VERIFY_EMAIL_RESEND_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_REGISTER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUptadeReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPaymentDetailsReducer = (state = { payments: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_PAYMENT_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case USER_PAYMENT_DETAILS_SUCCESS:\r\n      return { loading: false, payments: action.payload };\r\n\r\n    case USER_PAYMENT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PAYMENT_DETAILS_RESET:\r\n      return {\r\n        payments: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case USER_PAY_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n\r\n    case USER_PAY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userEmailVerificationReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_EMAIL_VERIFY_REQUEST:\r\n      return { loading: true };\r\n    case USER_EMAIL_VERIFY_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n    case USER_EMAIL_VERIFY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_EMAIL_VERIFY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userVerificationEmailResendReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_VERIFY_EMAIL_RESEND_REQUEST:\r\n      return { loading: true };\r\n    case USER_VERIFY_EMAIL_RESEND_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n    case USER_VERIFY_EMAIL_RESEND_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_VERIFY_EMAIL_RESEND_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDonateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DONATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DONATE_SUCCESS:\r\n      return { loading: false, success: true, donateResulte: action.payload };\r\n\r\n    case USER_DONATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DONATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDonationDetailsReducer = (\r\n  state = { donations: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_DONATION_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case USER_DONATION_DETAILS_SUCCESS:\r\n      return { loading: false, donations: action.payload };\r\n\r\n    case USER_DONATION_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DONATION_DETAILS_RESET:\r\n      return {\r\n        donations: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPendingListReducer = (\r\n  state = { pendingUsers: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_PENDING_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_PENDING_LIST_SUCCESS:\r\n      return { loading: false, pendingUsers: action.payload };\r\n    case USER_PENDING_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PENDING_LIST_RESET:\r\n      return { pendingUsers: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPendingDetailsReducer = (\r\n  state = { pendingUser: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_PENDING_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_PENDING_DETAILS_SUCCESS:\r\n      return { loading: false, pendingUser: action.payload };\r\n\r\n    case USER_PENDING_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PENDING_DETAILS_RESET:\r\n      return {\r\n        pendingUser: {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPendingDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_PENDING_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_PENDING_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_PENDING_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userApproveReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_APPROVE_REQUEST:\r\n      return { loading: true };\r\n    case USER_APPROVE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_APPROVE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_APPROVE_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userCreateAdminReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_CREATE_ADMIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_CREATE_ADMIN_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_CREATE_ADMIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_CREATE_ADMIN_RESET:\r\n      return {\r\n        user: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteAdminReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_ADMIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_ADMIN_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_ADMIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPasswordResetReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_PASSWORD_RESET_REQUEST:\r\n      return { loading: true };\r\n    case USER_PASSWORD_RESET_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n    case USER_PASSWORD_RESET_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PASSWORD_RESET_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userPasswordUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_PASSWORD_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_PASSWORD_UPDATE_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n    case USER_PASSWORD_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PASSWORD_UPDATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Message.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\FormContainer.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Loader.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\userActions.js",["432","433","434"],"import axios from 'axios';\r\n\r\nimport {\r\n  USER_APPROVE_FAIL,\r\n  USER_APPROVE_REQUEST,\r\n  USER_APPROVE_SUCCESS,\r\n  USER_CREATE_ADMIN_FAIL,\r\n  USER_CREATE_ADMIN_REQUEST,\r\n  USER_CREATE_ADMIN_SUCCESS,\r\n  USER_DELETE_ADMIN_FAIL,\r\n  USER_DELETE_ADMIN_REQUEST,\r\n  USER_DELETE_ADMIN_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DONATE_FAIL,\r\n  USER_DONATE_REQUEST,\r\n  USER_DONATE_SUCCESS,\r\n  USER_DONATION_DETAILS_FAIL,\r\n  USER_DONATION_DETAILS_REQUEST,\r\n  USER_DONATION_DETAILS_SUCCESS,\r\n  USER_EMAIL_VERIFY_FAIL,\r\n  USER_EMAIL_VERIFY_REQUEST,\r\n  USER_EMAIL_VERIFY_RESET,\r\n  USER_EMAIL_VERIFY_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_PASSWORD_RESET_FAIL,\r\n  USER_PASSWORD_RESET_REQUEST,\r\n  USER_PASSWORD_RESET_RESET,\r\n  USER_PASSWORD_RESET_SUCCESS,\r\n  USER_PASSWORD_UPDATE_FAIL,\r\n  USER_PASSWORD_UPDATE_REQUEST,\r\n  USER_PASSWORD_UPDATE_SUCCESS,\r\n  USER_PAYMENT_DETAILS_FAIL,\r\n  USER_PAYMENT_DETAILS_REQUEST,\r\n  USER_PAYMENT_DETAILS_RESET,\r\n  USER_PAYMENT_DETAILS_SUCCESS,\r\n  USER_PAY_FAIL,\r\n  USER_PAY_REQUEST,\r\n  USER_PAY_SUCCESS,\r\n  USER_PENDING_DELETE_FAIL,\r\n  USER_PENDING_DELETE_REQUEST,\r\n  USER_PENDING_DELETE_SUCCESS,\r\n  USER_PENDING_DETAILS_FAIL,\r\n  USER_PENDING_DETAILS_REQUEST,\r\n  USER_PENDING_DETAILS_RESET,\r\n  USER_PENDING_DETAILS_SUCCESS,\r\n  USER_PENDING_LIST_FAIL,\r\n  USER_PENDING_LIST_REQUEST,\r\n  USER_PENDING_LIST_RESET,\r\n  USER_PENDING_LIST_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_RESET,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_VERIFY_EMAIL_RESEND_FAIL,\r\n  USER_VERIFY_EMAIL_RESEND_REQUEST,\r\n  USER_VERIFY_EMAIL_RESEND_RESET,\r\n  USER_VERIFY_EMAIL_RESEND_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const login = (userRole, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { userRole, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_REGISTER_RESET });\r\n  dispatch({ type: USER_VERIFY_EMAIL_RESEND_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_PENDING_LIST_RESET });\r\n  dispatch({ type: USER_PENDING_DETAILS_RESET });\r\n};\r\n\r\nexport const register = (\r\n  email,\r\n  password,\r\n  firstName,\r\n  mInit,\r\n  lastName,\r\n  address1,\r\n  city,\r\n  state,\r\n  zipcode,\r\n  primaryPhone,\r\n  degree,\r\n  degreeYear,\r\n  major,\r\n  collegeName,\r\n  certificate\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/register',\r\n      {\r\n        email,\r\n        password,\r\n        firstName,\r\n        mInit,\r\n        lastName,\r\n        address1,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        primaryPhone,\r\n        degree,\r\n        degreeYear,\r\n        major,\r\n        collegeName,\r\n        certificate,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // dispatch({\r\n    //   type: USER_LOGIN_SUCCESS,\r\n    //   payload: data,\r\n    // });\r\n\r\n    // localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetailsById = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/${id}`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserProfile = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/profile`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/dashboard`, config);\r\n    // dispatch({ type: USER_DETAILS_RESET });\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user.id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserPaymentDetails = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PAYMENT_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/payment`, config);\r\n\r\n    dispatch({\r\n      type: USER_PAYMENT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PAYMENT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payUser = (id, paymentTypeName, qty, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/users/${id}/pay`,\r\n      { paymentTypeName, qty, paymentResult },\r\n      config\r\n    );\r\n    console.log('qty value: ' + qty);\r\n\r\n    dispatch({\r\n      type: USER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verifyUserEmail = (hash, email) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_EMAIL_VERIFY_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/users/activate/${hash}`,\r\n      { email },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_EMAIL_VERIFY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_EMAIL_VERIFY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resendVerifyEmail = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_VERIFY_EMAIL_RESEND_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/verifyResend',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_VERIFY_EMAIL_RESEND_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_VERIFY_EMAIL_RESEND_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const donateUser = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DONATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/users/${id}/donate`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DONATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DONATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const donateUserGuest = (\r\n  subDomain,\r\n  guest,\r\n  email,\r\n  firstName,\r\n  mInit,\r\n  lastName,\r\n  paymentResult\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DONATE_REQUEST,\r\n    });\r\n\r\n    // const {\r\n    //   userLogin: { userInfo },\r\n    // } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/users/donate`,\r\n      { subDomain, guest, email, firstName, mInit, lastName, paymentResult },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DONATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DONATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDonationDetails = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DONATION_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/donate`, config);\r\n\r\n    dispatch({\r\n      type: USER_DONATION_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DONATION_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listPendingUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PENDING_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/pending`, config);\r\n    // dispatch({ type: USER_DETAILS_RESET });\r\n\r\n    dispatch({\r\n      type: USER_PENDING_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PENDING_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPendingUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PENDING_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/${id}/pending`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_PENDING_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PENDING_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const approveUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_APPROVE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    console.log(`id: ${id}`);\r\n    console.log(`token: ${config.headers.Authorization}`);\r\n\r\n    const { data } = await axios.post(`/api/users/${id}/pending`, {}, config);\r\n\r\n    dispatch({ type: USER_APPROVE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_APPROVE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// not yet employed\r\nexport const deletePendingUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PENDING_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_PENDING_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PENDING_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createAdminUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_CREATE_ADMIN_REQUEST,\r\n    });\r\n    console.log(id);\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/users/${id}/admin`, {}, config);\r\n\r\n    dispatch({ type: USER_CREATE_ADMIN_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_CREATE_ADMIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Not yet employed\r\nexport const deleteAdminUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_ADMIN_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}/admin`, config);\r\n\r\n    dispatch({ type: USER_DELETE_ADMIN_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_ADMIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const passwordReset = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PASSWORD_RESET_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/users/${email}`, config);\r\n\r\n    dispatch({\r\n      type: USER_PASSWORD_RESET_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PASSWORD_RESET_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const passwordUpdate = (password, id, token) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_PASSWORD_UPDATE_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/newPassword/${id}/${token}`,\r\n      { password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_PASSWORD_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_PASSWORD_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\userConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HomeScreen\\HomeScreen.js",["435","436","437"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar.js",["438","439","440"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar\\Sidebar.js",["441","442"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.js",["443"],"import React from 'react';\r\nimport Routes from '../Routes';\r\nimport * as S from './MainScreen.styles';\r\n\r\nconst MainScreen = () => {\r\n  return <S.MainScreenContainer>{/* <Routes /> */}</S.MainScreenContainer>;\r\n};\r\n\r\nexport default MainScreen;\r\n",["444","445"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Nav,\r\n  ListGroup,\r\n  Form,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getUserPaymentDetails,\r\n  getUserProfile,\r\n  payUser,\r\n} from '../../actions/userActions';\r\nimport {\r\n  USER_PAYMENT_DETAILS_RESET,\r\n  USER_PAY_RESET,\r\n} from '../../constants/userConstants';\r\n// import { listUsers, deleteUser } from '../actions/userActions';\r\nimport { listPaymentTypes } from '../../actions/paymentTypeActions';\r\nimport PaymentDropdown from '../../components/PaymentDropdown/PaymentDropdown';\r\nimport DatePicker from '../../components/PaymentDropdown/DatePicker';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst PaymentScreen = ({ location, history }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [paymentTypeName, setPaymentTypeName] = useState('');\r\n  const [paymentTypeAmount, setPaymentTypeAmount] = useState('');\r\n  const [qty, setQty] = useState(1);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading: userLoading, user, error: userError } = userDetails;\r\n\r\n  const userPaymentDetails = useSelector((state) => state.userPaymentDetails);\r\n  const {\r\n    loading: paymentLoading,\r\n    error: paymentErrors,\r\n    payments,\r\n  } = userPaymentDetails;\r\n\r\n  const paymentTypeList = useSelector((state) => state.paymentTypeList);\r\n  const {\r\n    loading: loadingPaymentTypes,\r\n    error: errorPaymentTypes,\r\n    paymentTypes,\r\n  } = paymentTypeList;\r\n\r\n  const userPay = useSelector((state) => state.userPay);\r\n  const { loading: loadingPay, success: successPay, error: errorPay } = userPay;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(getUserProfile());\r\n\r\n      // setPaymentTypeAmount('');\r\n      // setPaymentTypeName('');\r\n      // setTotalPayment(paymentTypeAmount * qty);\r\n      dispatch(listPaymentTypes());\r\n      dispatch(getUserPaymentDetails());\r\n      // dispatch({ type: USER_PAYMENT_DETAILS_RESET });\r\n\r\n      const addPaypalScript = async () => {\r\n        const { data: clientId } = await axios.get('/api/config/paypal');\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n        script.async = true;\r\n        script.onload = () => {\r\n          setSdkReady(true);\r\n        };\r\n        document.body.appendChild(script);\r\n\r\n        console.log(userInfo.memberSince);\r\n      };\r\n\r\n      if (!payments || successPay) {\r\n        if (successPay) {\r\n          swal('Success!', successPay, 'success').then((value) => {\r\n            dispatch({ type: USER_PAY_RESET });\r\n          });\r\n        } else if (errorPay) {\r\n          console.log(errorPay);\r\n          swal('Error!', errorPay, 'error').then((value) => {\r\n            dispatch({ type: USER_PAY_RESET });\r\n          });\r\n        }\r\n        // dispatch(getUserPaymentDetails());\r\n        // dispatch({ type: USER_PAYMENT_DETAILS_RESET });\r\n      }\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n    if (paymentTypeName === 'nominationFee' && user.status === 'inactive') {\r\n      swal(\r\n        'Error!',\r\n        'Please Pay your registration fee first to activate your account',\r\n        'error'\r\n      );\r\n    }\r\n  }, [\r\n    history,\r\n    dispatch,\r\n    userInfo,\r\n    successPay,\r\n    errorPay,\r\n    // qty,\r\n    // paymentTypeAmount,\r\n    // paymentTypeName,\r\n  ]);\r\n\r\n  const duesHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('dues selected');\r\n  };\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payUser(userInfo.memberId, paymentTypeName, qty, paymentResult));\r\n  };\r\n\r\n  // if (userInfo) {\r\n  //   const thisYear = new Date(userInfo.memberSince).getFullYear();\r\n  //   console.log(thisYear);\r\n  //   const options = [];\r\n\r\n  //   for (let i = 0; i <= 10; i++) {\r\n  //     const year = thisYear + i;\r\n  //     console.log(year);\r\n  //     options.push(<option value={year}>{year}</option>);\r\n  //   }\r\n  // }\r\n\r\n  const paymentTypeChangeHandler = (e) => {\r\n    // e.preventDefault();\r\n\r\n    // setPaymentTypeName(e.target.value);\r\n    setPaymentTypeName(e.target.value.split(',')[0]);\r\n    setPaymentTypeAmount(e.target.value.split(',')[1]);\r\n    // setTotalPayment(paymentTypeAmount * qty);\r\n  };\r\n\r\n  const qtyChangeHandler = (e) => {\r\n    // e.preventDefault();\r\n\r\n    setQty(e.target.value);\r\n    setTotalPayment(paymentTypeAmount * qty);\r\n  };\r\n  console.log(paymentTypeAmount);\r\n  console.log(paymentTypeName);\r\n  console.log(qty);\r\n  console.log(totalPayment);\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          // id='sidebar-wrapper'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n\r\n        {/* Payment Start */}\r\n        {/* Payment End */}\r\n        {/* Payment  History start */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          {/* {!sdkReady ? (\r\n            <Loader />\r\n          ) : (\r\n            <PayPalButton amount={25.0} onSuccess={successPaymentHandler} />\r\n          )} */}\r\n\r\n          {/* Payment */}\r\n          <Row>\r\n            <Col md={8}>\r\n              <h1>Payment</h1>\r\n              {loadingPaymentTypes ? (\r\n                <Loader />\r\n              ) : errorPaymentTypes ? (\r\n                <Message variant='danger'>{paymentErrors}</Message>\r\n              ) : (\r\n                <>\r\n                  <label>Payment Type</label>\r\n                  <Form.Control\r\n                    as='select'\r\n                    // onChange={(e) => {\r\n                    //   setPaymentTypeName(e.target.value.split(',')[0]);\r\n                    //   setPaymentTypeAmount(e.target.value.split(',')[1]);\r\n                    // }}\r\n                    onChange={paymentTypeChangeHandler}\r\n                  >\r\n                    <option>Select Payment Type</option>\r\n                    {paymentTypes.map((paymentType) => (\r\n                      <option\r\n                        key={paymentType.paymentTypeId}\r\n                        value={[\r\n                          paymentType.paymentTypeName,\r\n                          paymentType.paymentTypeAmount,\r\n                        ]}\r\n                      >\r\n                        {paymentType.paymentTypeName}\r\n                      </option>\r\n                    ))}{' '}\r\n                  </Form.Control>\r\n\r\n                  {paymentTypeName === 'Dues' ? (\r\n                    <>\r\n                      <label>Number of Years</label>\r\n                      <Form.Control\r\n                        as='select'\r\n                        onChange={qtyChangeHandler}\r\n                        // onChange={(e) => setQty(e.target.value)}\r\n                      >\r\n                        <option>Select Number of Years for Payment</option>\r\n\r\n                        <option value={1}>1</option>\r\n                        <option value={2}>2</option>\r\n                        <option value={3}>3</option>\r\n                        <option value={4}>4</option>\r\n                        <option value={5}>5</option>\r\n                        <option value={6}>6</option>\r\n                        <option value={7}>7</option>\r\n                        <option value={8}>8</option>\r\n                        <option value={9}>9</option>\r\n                        <option value={10}>10</option>\r\n                        {/* {paymentTypes.map((paymentType) => (\r\n                    <option\r\n                      key={paymentType.paymentTypeId}\r\n                      value={paymentType.paymentTypeAmount}\r\n                    >\r\n                      {paymentType.paymentTypeName}\r\n                    </option>\r\n                  ))}{' '} */}\r\n                      </Form.Control>\r\n                    </>\r\n                  ) : paymentTypeName === 'nominationFee' ? (\r\n                    <>\r\n                      {user && user.status === 'inactive' ? (\r\n                        <Message variant='danger'>\r\n                          Please Pay your registration fee first to activate\r\n                          your account\r\n                        </Message>\r\n                      ) : (\r\n                        <>\r\n                          <label>Please Select Year</label>\r\n                          <Form.Control\r\n                            as='select'\r\n                            onChange={qtyChangeHandler}\r\n                            // onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            <option>Select Number of Years for Payment</option>\r\n\r\n                            <option value={1}>1</option>\r\n                          </Form.Control>\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              )}\r\n            </Col>\r\n            <Col md={4}>\r\n              {' '}\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>Payment Summary</h2>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Payment Type:</Col>\r\n                      <Col>{paymentTypeName}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Payment Year</Col>\r\n                      <Col>{qty}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${paymentTypeAmount * qty}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    {!sdkReady ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <PayPalButton\r\n                        amount={paymentTypeAmount * qty}\r\n                        onSuccess={successPaymentHandler}\r\n                      />\r\n                    )}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {/* Payment end */}\r\n          {/* PaymentDropdown */}\r\n          {/* <PaymentDropdown />\r\n          <DatePicker /> */}\r\n          {/* PaymentDropdown End */}\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Header as='h2'>Payments</Card.Header>\r\n            {paymentLoading ? (\r\n              <Loader />\r\n            ) : paymentErrors ? (\r\n              <Message variant='danger'>{paymentErrors}</Message>\r\n            ) : (\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Payment Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Date</th>\r\n                    <th>Year</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {payments.map((payment) => (\r\n                    <tr key={payment.paymentId}>\r\n                      <td>{payment.paymentId}</td>\r\n                      <td>{payment.paymentType}</td>\r\n                      <td>{payment.amount}</td>\r\n                      <td>{payment.paymentDate.substring(0, 10)}</td>\r\n                      <td>{payment.year}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        {/* Payment History End */}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonateScreen\\DonateScreen.js",["462","463","464","465","466","467","468","469","470","471"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Nav,\r\n  ListGroup,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getUserDonationDetails,\r\n  donateUser,\r\n  donateUserGuest,\r\n  getUserProfile,\r\n} from '../../actions/userActions';\r\nimport {\r\n  USER_DONATE_RESET,\r\n  USER_PAYMENT_DETAILS_RESET,\r\n  USER_PAY_RESET,\r\n} from '../../constants/userConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport swal from 'sweetalert';\r\n// import { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst DonateScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [addDonation, setAddDonation] = useState(false);\r\n\r\n  const [guest, setGuest] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('Mr');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [donateAmount, setDonateAmount] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userDonateDetails = useSelector((state) => state.userDonateDetails);\r\n  const {\r\n    loading: donateLoading,\r\n    error: donateErrors,\r\n    donations,\r\n  } = userDonateDetails;\r\n\r\n  const userDonate = useSelector((state) => state.userDonate);\r\n  const {\r\n    loading: loadingDonate,\r\n    success: successDonate,\r\n    error: errorDonate,\r\n    donateResulte,\r\n  } = userDonate;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (addDonation) {\r\n        setFirstName(user.firstName);\r\n        setMInit(user.mInit);\r\n        setLastName(user.lastName);\r\n        setEmail(user.primaryEmail);\r\n        setDonateAmount(0);\r\n      }\r\n      dispatch(getUserProfile());\r\n      dispatch(getUserDonationDetails());\r\n    } else {\r\n      setFirstName('');\r\n      setMInit('');\r\n      setLastName('');\r\n      setEmail('');\r\n      setDonateAmount(0);\r\n    }\r\n    // dispatch({ type: USER_PAYMENT_DETAILS_RESET });\r\n\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!donations || successDonate) {\r\n      if (successDonate) {\r\n        console.log(donateResulte);\r\n        swal('Success!', donateResulte, 'success').then((value) => {\r\n          dispatch({ type: USER_DONATE_RESET });\r\n          setDonateAmount(0);\r\n        });\r\n      }\r\n      // dispatch({ type: USER_DONATE_RESET });\r\n\r\n      // dispatch({ type: USER_PAYMENT_DETAILS_RESET });\r\n    }\r\n    if (!window.paypal) {\r\n      addPaypalScript();\r\n    } else {\r\n      setSdkReady(true);\r\n    }\r\n    // }\r\n  }, [history, dispatch, userInfo, addDonation, successDonate]);\r\n\r\n  const successDonationHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(donateUser(userInfo.memberId, paymentResult));\r\n    setAddDonation(!addDonation);\r\n  };\r\n\r\n  const successDonationHandlerGuest = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    const subDomain = 'bd.aabea.org';\r\n    dispatch(\r\n      donateUserGuest(\r\n        subDomain,\r\n        guest,\r\n        email,\r\n        firstName,\r\n        mInit,\r\n        lastName,\r\n        paymentResult\r\n      )\r\n    );\r\n    // setAddDonation(!addDonation);\r\n  };\r\n  console.log(mInit);\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {userInfo ? (\r\n          <>\r\n            <Col\r\n              md={{ span: 3, order: 1 }}\r\n              lg={{ span: 3, order: 1 }}\r\n              // id='sidebar-wrapper'\r\n            >\r\n              <Sidebar />\r\n            </Col>\r\n            <Col\r\n              md={{ span: 9, order: 12 }}\r\n              lg={{ span: 9, order: 12 }}\r\n              id='page-content-wrapper'\r\n            >\r\n              <Card className='text-center' border='primary'>\r\n                <Card.Header as='h2'>Donation</Card.Header>\r\n                {donateLoading ? (\r\n                  <Loader />\r\n                ) : donateErrors ? (\r\n                  <Message variant='danger'>{donateErrors}</Message>\r\n                ) : (\r\n                  <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                      <tr>\r\n                        {/* <th>ID</th> */}\r\n                        <th>Donation Type</th>\r\n                        <th>Amount</th>\r\n                        <th>Date</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {donations.map((donation) => (\r\n                        <tr key={donation.payerId}>\r\n                          {/* <td>{donation.memberId}</td> */}\r\n                          <td>{donation.donationType}</td>\r\n                          <td>{donation.amount}</td>\r\n                          <td>{donation.donationDate.substring(0, 10)}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                )}\r\n\r\n                <Card border='primary'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      onClick={() => setAddDonation(!addDonation)}\r\n                    >\r\n                      Make Donation\r\n                    </Link>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {addDonation\r\n                      ? (errorDonate && (\r\n                          <Message variant='danger'>{errorDonate}</Message>\r\n                        )) ||\r\n                        (loadingDonate && <Loader />) ||\r\n                        (successDonate ? (\r\n                          <Message variant='success'>{successDonate}</Message>\r\n                        ) : (\r\n                          <Row>\r\n                            <Col md={8}>\r\n                              <Form>\r\n                                <Form.Group controlId='mInit'>\r\n                                  <Form.Label>Mr / Mrs ? </Form.Label>\r\n                                  <Form.Control\r\n                                    as='select'\r\n                                    value={mInit}\r\n                                    onChange={(e) => setMInit(e.target.value)}\r\n                                  >\r\n                                    <option value='Mr'>Mr</option>\r\n                                    <option value='Mrs'>Mrs</option>\r\n                                  </Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='firstName'>\r\n                                  <Form.Label>First Name</Form.Label>\r\n                                  <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Please Enter Your First Name..'\r\n                                    value={firstName}\r\n                                    onChange={(e) =>\r\n                                      setFirstName(e.target.value)\r\n                                    }\r\n                                  ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='lastName'>\r\n                                  <Form.Label>Last Name</Form.Label>\r\n                                  <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Please Enter Your Last Name'\r\n                                    value={lastName}\r\n                                    onChange={(e) =>\r\n                                      setLastName(e.target.value)\r\n                                    }\r\n                                  ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                  <Form.Label>Email</Form.Label>\r\n                                  <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Please Enter Address..'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                  ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='donateAmount'>\r\n                                  <Form.Label>Donate Amount</Form.Label>\r\n                                  <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Please Enter Donation Amount'\r\n                                    value={donateAmount}\r\n                                    onChange={(e) =>\r\n                                      setDonateAmount(e.target.value)\r\n                                    }\r\n                                  ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                {/* <Button type='submit' variant='info' block>\r\n                                  <i className='fas fa-plus' /> Add\r\n                                </Button> */}\r\n                              </Form>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col>Donation Amount</Col>\r\n                                    <Col>${donateAmount}</Col>\r\n                                  </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  {loadingDonate && <Loader />}\r\n                                  {!sdkReady ? (\r\n                                    <Loader />\r\n                                  ) : (\r\n                                    <PayPalButton\r\n                                      amount={donateAmount}\r\n                                      onSuccess={successDonationHandler}\r\n                                    />\r\n                                  )}\r\n                                </ListGroup.Item>\r\n                              </ListGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        ))\r\n                      : null}\r\n                    {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n                    {/* {registerError && (\r\n                        <Message variant='danger'>{registerError}</Message>\r\n                      )}\r\n                      {registerLoading && <Loader />}\r\n                      {} */}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        ) : (\r\n          <Col id='page-content-wrapper'>\r\n            <Card className='text-center' border='primary'>\r\n              <Card.Header as='h2'>Welcome to Donation Page</Card.Header>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <Form>\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} md='2'>\r\n                          <Form.Label>Member ?</Form.Label>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md='4' controlId='guest'>\r\n                          <Form.Control\r\n                            required\r\n                            as='select'\r\n                            type='text'\r\n                            value={guest}\r\n                            onChange={(e) => setGuest(e.target.value)}\r\n                          >\r\n                            <option value='false'>No</option>\r\n                            <option value='true'>Yes</option>\r\n                            {/* <Form.Check\r\n                          inline\r\n                          type='radio'\r\n                          label='Yes'\r\n                          name='formHorizontalRadios'\r\n                          id='member'\r\n                        />\r\n                        <Form.Check\r\n                          inline\r\n                          type='radio'\r\n                          label='No'\r\n                          name='formHorizontalRadios'\r\n                          id='guest'\r\n                        /> */}\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} md='2'>\r\n                          <Form.Label>Name</Form.Label>\r\n                        </Form.Group>\r\n                        {/* <Col md={10}> */}\r\n                        {/* <Row> */}\r\n                        {/* <Col md={2}> */}\r\n                        <Form.Group as={Col} md='2' controlId='mInit'>\r\n                          <Form.Control\r\n                            required\r\n                            as='select'\r\n                            type='text'\r\n                            value={mInit}\r\n                            onChange={(e) => setMInit(e.target.value)}\r\n                          >\r\n                            <option value='Mr'>Mr</option>\r\n                            <option value='Mrs'>Mrs</option>\r\n                            <option value='Miss'>Ms</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                        {/* </Col> */}\r\n                        {/* <Col md={5}> */}\r\n                        <Form.Group as={Col} md='4' controlId='firstName'>\r\n                          <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='First Name'\r\n                            value={firstName}\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                        {/* </Col> */}\r\n                        {/* <Col md={5}> */}\r\n                        <Form.Group as={Col} md='4' controlId='lastName'>\r\n                          <Form.Control\r\n                            required\r\n                            placeholder='Last Name'\r\n                            type='text'\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} md='2'>\r\n                          <Form.Label>Email Address</Form.Label>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} md='10' controlId='email'>\r\n                          <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} md='2'>\r\n                          <Form.Label>Donate Amount</Form.Label>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} md='10' controlId='donateAmount'>\r\n                          <Form.Control\r\n                            required\r\n                            type='number'\r\n                            placeholder='Please Enter Donation Amount'\r\n                            value={donateAmount}\r\n                            onChange={(e) => setDonateAmount(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Form.Row>\r\n                    </Form>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Donation Amount</Col>\r\n                          <Col>${donateAmount}</Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        {loadingDonate && <Loader />}\r\n                        {!sdkReady ? (\r\n                          <Loader />\r\n                        ) : (\r\n                          <PayPalButton\r\n                            amount={donateAmount}\r\n                            onSuccess={successDonationHandlerGuest}\r\n                          />\r\n                        )}\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DonateScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\TrainingScreen\\TrainingScreen.js",["472","473","474","475","476","477","478","479"],"import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n// import { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst TrainingScreen = ({ history }) => {\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          // id='sidebar-wrapper'\r\n        >\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/donate'>\r\n                    <Nav.Link>Donate</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/committiees'>\r\n                    <Nav.Link>Committiees</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Card.Title>\r\n                  <LinkContainer to='/committiees'>\r\n                    <Button variant='outline-info' block>\r\n                      Committiees\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </Card.Title>\r\n              </Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer className='text-muted'>\r\n              <Link\r\n                className='btn btn-outline-warning btn-sm btn-block my-5 rounded'\r\n                to=''\r\n              >\r\n                another button\r\n              </Link>\r\n            </Card.Footer>\r\n          </Card>{' '}\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Header as='h2'>Training Screen</Card.Header>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteesScreen.js",["480","481","482","483","484","485","486","487"],"import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n// import { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst CommittieesScreen = ({ history }) => {\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          // id='sidebar-wrapper'\r\n        >\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/donate'>\r\n                    <Nav.Link>Donate</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Button variant='outline-info' block>\r\n                  <LinkContainer to='/committiees'>\r\n                    <Nav.Link>Committiees</Nav.Link>\r\n                  </LinkContainer>\r\n                </Button>\r\n              </Card.Title>\r\n              <Card.Title>\r\n                <Card.Title>\r\n                  <LinkContainer to='/committiees'>\r\n                    <Button variant='outline-info' block>\r\n                      Committiees\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </Card.Title>\r\n              </Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer className='text-muted'>\r\n              <Link\r\n                className='btn btn-outline-warning btn-sm btn-block my-5 rounded'\r\n                to=''\r\n              >\r\n                another button\r\n              </Link>\r\n            </Card.Footer>\r\n          </Card>{' '}\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <Card className='text-center' border='primary'>\r\n            <Card.Header as='h2'>Committiees Screen</Card.Header>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommittieesScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\Routes.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.js",["488"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  listUsers,\r\n  deleteUser,\r\n  getUserProfile,\r\n} from '../../actions/userActions';\r\nimport * as S from './DashboardScreen.Styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading: userLoading, user, error: userError } = userDetails;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listUsers());\r\n      dispatch(getUserProfile());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='mb-2'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n            {/* 1st card section : member Status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                id='member-status'\r\n                // style={{ padding: 0 }}\r\n                className='mb-2'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    {userInfo &&\r\n                      (userLoading ? (\r\n                        <Loader />\r\n                      ) : userError ? (\r\n                        <Message variant='danger'>{userError}</Message>\r\n                      ) : user && user.length !== 0 ? (\r\n                        user.status === 'active' ? (\r\n                          <span>\r\n                            Memeber Status:{' '}\r\n                            <i\r\n                              className='fas fa-user'\r\n                              style={{ color: '#63D471' }}\r\n                            ></i>{' '}\r\n                            {user.status.toUpperCase()}\r\n                          </span>\r\n                        ) : user.status === 'pending' ? (\r\n                          <span>\r\n                            Memeber Status:{' '}\r\n                            <i\r\n                              className='fas fa-user'\r\n                              style={{ color: '29539B' }}\r\n                            ></i>{' '}\r\n                            {user.status}\r\n                          </span>\r\n                        ) : user.status === 'inactive' ? (\r\n                          <span className='text-danger'>\r\n                            Memeber Status:{' '}\r\n                            <i\r\n                              className='fas fa-user'\r\n                              style={{ color: '#A40606' }}\r\n                            >\r\n                              {' '}\r\n                            </i>{' '}\r\n                            {'  '} {user.status}\r\n                          </span>\r\n                        ) : null\r\n                      ) : (\r\n                        <span>No User </span>\r\n                      ))}\r\n                  </Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 2nd card section : Profile Information ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 2 }}\r\n                lg={{ span: 6, order: 2 }}\r\n                className='mb-2'\r\n                id='profile-information'\r\n              >\r\n                <Card border='primary'>\r\n                  <Card.Header as='h5'>Profile Summery </Card.Header>\r\n                  {userInfo ? (\r\n                    <>\r\n                      <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={4}>Name:</Col>\r\n                            <Col>{userInfo.userName}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={4}>User Type:</Col>\r\n                            <Col>{userInfo.userRole}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                          <Row className='text-info'>\r\n                            <Col md={4}>Status:</Col>\r\n                            {user &&\r\n                              (user.status == 'active' ? (\r\n                                <Col>\r\n                                  <i\r\n                                    className='fas fa-user'\r\n                                    style={{ color: '#63D471' }}\r\n                                  ></i>{' '}\r\n                                  {user.status}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col className='text-danger'>\r\n                                  <i\r\n                                    className='fas fa-user'\r\n                                    style={{ color: '#A40606' }}\r\n                                  ></i>\r\n                                  {user.status}\r\n                                </Col>\r\n                              ))}\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        {user &&\r\n                          (user.status !== 'active' ? (\r\n                            <ListGroup.Item>\r\n                              <Link\r\n                                className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                                to='/payment'\r\n                              >\r\n                                Please Pay your registration fee to activate\r\n                                your account\r\n                              </Link>\r\n                            </ListGroup.Item>\r\n                          ) : (\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={4}>Next Payment Due In:</Col>\r\n                                <Col>{user.nextPaymentDueIn}</Col>\r\n                              </Row>{' '}\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                      </ListGroup>\r\n\r\n                      <Card.Footer className='text-muted'>\r\n                        <Link\r\n                          className='btn btn-outline-info btn-sm btn-block rounded'\r\n                          to='/profile'\r\n                        >\r\n                          View Full Profile\r\n                        </Link>\r\n                      </Card.Footer>\r\n                    </>\r\n                  ) : null}\r\n                </Card>\r\n              </Col>\r\n              {/* 2nd card section : Profile Information ~End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 3rd card section : Last Donation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 3 }}\r\n                lg={{ span: 6, order: 3 }}\r\n                className='mb-2'\r\n                id='last-donation'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>Last Donation</Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 3rd card section : Last Donation End ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 4th card section : Training Taken ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 4 }}\r\n                lg={{ span: 6, order: 4 }}\r\n                className='mb-2'\r\n                id='training-taken'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>Training Taken</Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 4th card section : Training Taken End ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 5th card section : All Member List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2'\r\n                id='all-member'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>All Members List</Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>IMAGE</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th>STATUS</th>\r\n                            {userInfo && userInfo.userRole === 'admin' && (\r\n                              <th>EDIT/DELETE</th>\r\n                            )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {users.map((user) => (\r\n                            <tr key={user.memberId}>\r\n                              <td>{user.memberId}</td>\r\n                              <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td>\r\n                              <td> {user.userName}</td>\r\n                              <td>\r\n                                <a href={`mailto: ${user.email}`}>\r\n                                  {' '}\r\n                                  {user.email}\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                {user.userRole === 'admin' ||\r\n                                user.userRole === 'systemAdmin' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                {user.member.status === 'active' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td>\r\n                              {userInfo.userRole === 'admin' && (\r\n                                <td>\r\n                                  <LinkContainer\r\n                                    to={`/users/${user.memberId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={() => deleteHandler(user.memberId)}\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Member List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.js",["489"],"import React from 'react';\r\nimport * as S from './Header.Styles';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { logout } from '../../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      {/* First */}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} href='/' className='text-center'>\r\n            <Image src='/uploads/logoImage.png' alt='logo' thumbnail />\r\n            {/* <h1>Logo</h1> */}\r\n          </Col>\r\n          <Col>\r\n            <Carousel controls={false} indicators={false}>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='First slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Second */}\r\n      {/* NEW */}\r\n      {/* OLD */}\r\n      <Navbar\r\n        bg='dark'\r\n        variant='dark'\r\n        expand='lg'\r\n        // sticky='top'\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AABEA</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='mr-auto'>\r\n              <LinkContainer to='/systemAdmin'>\r\n                <Nav.Link>System Admin</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <LinkContainer to='/dashboard'>\r\n                  <Nav.Link>Dashboard</Nav.Link>\r\n                </LinkContainer>\r\n              ) : (\r\n                <LinkContainer to='/about'>\r\n                  <Nav.Link>About</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n            <Nav className='ml-auto'>\r\n              {userInfo && (\r\n                <>\r\n                  <LinkContainer to='/committiees'>\r\n                    <Nav.Link>Committiees</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n\r\n              <LinkContainer to='/donate'>\r\n                <Nav.Link>Donate</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <>\r\n                  <NavDropdown\r\n                    title={userInfo.userName.toUpperCase()}\r\n                    id='userName'\r\n                  >\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to='/register'>\r\n                    <Nav.Link>Registration</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'> </i> Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>{' '}\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\EmailActivationScreen.js",["490","491","492","493","494","495","496"],"import React, { useEffect, useState } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport { verifyUserEmail } from '../../actions/userActions';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport swal from 'sweetalert';\r\nimport { USER_EMAIL_VERIFY_RESET } from '../../constants/userConstants';\r\n\r\nconst EmailActivationScreen = ({ location, match, history }) => {\r\n  const { hash } = match.params;\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userEmailVerify = useSelector((state) => state.userEmailVerify);\r\n  const { loading, error, success } = userEmailVerify;\r\n\r\n  const redirect = location.search\r\n    ? location.search.split('=')[1]\r\n    : '/dashboard';\r\n\r\n  useEffect(() => {\r\n    if (!hash) {\r\n      history.push(redirect);\r\n    } else {\r\n      dispatch(verifyUserEmail(hash));\r\n      //   history.push(redirect);\r\n      // }\r\n      if (success) {\r\n        console.log(success);\r\n        swal('Success!', success, 'success').then((value) => {\r\n          dispatch({ type: USER_EMAIL_VERIFY_RESET });\r\n          history.push(redirect);\r\n        });\r\n      } else if (error) {\r\n        console.log(error);\r\n        swal('Error!', error, 'error');\r\n        dispatch({ type: USER_EMAIL_VERIFY_RESET });\r\n        history.push(redirect);\r\n      }\r\n    }\r\n  }, [history, hash, error, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Dispatch Verify\r\n    dispatch(verifyUserEmail(hash));\r\n    console.log(`hash: ${hash} `);\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      {/* Card start */}\r\n      <Card border='info'>\r\n        <Card.Header\r\n          className='text-center'\r\n          as='h2'\r\n          style={{ color: '#033c73' }}\r\n        >\r\n          Verify Your Account\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <Message variant='info'>{success}</Message>\r\n          ) : null\r\n          // <Form onSubmit={submitHandler}>\r\n          //   {/* <Form.Group controlId='email'>\r\n          //     <Form.Label>Please Confirm Your Email Address</Form.Label>\r\n          //     <Form.Control\r\n          //       type='email'\r\n          //       placeholder='Enter Email..'\r\n          //       value={email}\r\n          //       onChange={(e) => setEmail(e.target.value)}\r\n          //     ></Form.Control>\r\n          //   </Form.Group> */}\r\n\r\n          //   <Button type='submit' variant='info' block>\r\n          //     Verify\r\n          //   </Button>\r\n          // </Form>\r\n          }\r\n        </Card.Body>\r\n        <Card.Footer className='text-muted'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              New ?{' '}\r\n              <Link\r\n                to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      {/* card above */}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default EmailActivationScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\Section.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\PageTitle.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\[hash].js",["497"],"import React from 'react';\r\n\r\nexport default async function verifyUserEmail(req, res) {\r\n  const hash = req.query.hash;\r\n  console.log(`hash: ${hash}`);\r\n  if (!hash) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: 'Cannot Validate The Email Address!' });\r\n  }\r\n\r\n  const response = await fetch(\r\n    `http://localhost:3000/api/users/activate/${hash}`\r\n  );\r\n  if (response.status >= 400) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: 'Cannot Validate The Email Address!' });\r\n  } else {\r\n    res.writeHead(307, { Location: '/users/activated' });\r\n    res.end();\r\n  }\r\n}\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\chapterReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\chapterConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.js",["498","499","500","501","502","503","504","505"],"import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardColumns,\r\n  Nav,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  listUsers,\r\n  deleteUser,\r\n  listPendingUsers,\r\n  deletePendingUser,\r\n  createAdminUser,\r\n  deleteAdminUser,\r\n  getUserProfile,\r\n} from '../../actions/userActions';\r\nimport * as S from './SystemAdminScreen.Styles';\r\nimport { deleteChapter, listChapters } from '../../actions/chapterActions';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { USER_PENDING_LIST_RESET } from '../../constants/userConstants';\r\n\r\nconst SystemAdminScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const chapterList = useSelector((state) => state.chapterList);\r\n  const { loading, error, chapters } = chapterList;\r\n\r\n  const userPendingList = useSelector((state) => state.userPendingList);\r\n  const {\r\n    loading: pendingUsersLoading,\r\n    error: pendingUsersError,\r\n    pendingUsers,\r\n  } = userPendingList;\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading: userListLoading, error: userListError, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterDelete = useSelector((state) => state.chapterDelete);\r\n  const { success: successDelete } = chapterDelete;\r\n\r\n  const userCreateAdmin = useSelector((state) => state.userCreateAdmin);\r\n  const { success: successAdmin } = userCreateAdmin;\r\n\r\n  const userDeleteAdmin = useSelector((state) => state.userDeleteAdmin);\r\n  const { success: successDeleteAdmin } = userDeleteAdmin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUserProfile());\r\n      dispatch(listChapters());\r\n      dispatch(listPendingUsers());\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successAdmin,\r\n    successDeleteAdmin,\r\n  ]);\r\n\r\n  const deleteChapterHandler = (chapterId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteChapter(chapterId));\r\n    }\r\n  };\r\n\r\n  const deleteUserHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  const deletePendingUserHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deletePendingUser(id));\r\n    }\r\n  };\r\n\r\n  const createAdminHandler = (memberId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(createAdminUser(memberId));\r\n    }\r\n  };\r\n\r\n  const deleteAdminHandler = (userId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteAdminUser(userId));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='mb-2'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n            {/* 1st card section : member Status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                id='member-status'\r\n                // style={{ padding: 0 }}\r\n                className='mb-2'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    {userInfo ? (\r\n                      userInfo.status === 'active' ? (\r\n                        <span>\r\n                          Memeber Status:{' '}\r\n                          <i\r\n                            className='fas fa-user'\r\n                            style={{ color: '#63D471' }}\r\n                          ></i>{' '}\r\n                          {userInfo.status.toUpperCase()}\r\n                        </span>\r\n                      ) : userInfo.status === 'pending' ? (\r\n                        <span>\r\n                          Memeber Status:{' '}\r\n                          <i\r\n                            className='fas fa-user'\r\n                            style={{ color: '29539B' }}\r\n                          ></i>{' '}\r\n                          {userInfo.status}\r\n                        </span>\r\n                      ) : (\r\n                        <span className='text-danger'>\r\n                          Memeber Status:{' '}\r\n                          <i\r\n                            className='fas fa-user'\r\n                            style={{ color: '#A40606' }}\r\n                          >\r\n                            {' '}\r\n                          </i>{' '}\r\n                          {'  '} {userInfo.status.toUpperCase()}\r\n                        </span>\r\n                      )\r\n                    ) : (\r\n                      <span>No User </span>\r\n                    )}\r\n                  </Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 2nd card section : Profile Information ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 2 }}\r\n                lg={{ span: 6, order: 2 }}\r\n                className='mb-2'\r\n                id='profile-information'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>Profile Information </Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 2nd card section : Profile Information ~End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 3rd card section : Last Donation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 3 }}\r\n                lg={{ span: 6, order: 3 }}\r\n                className='mb-2'\r\n                id='last-donation'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>Last Donation</Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 3rd card section : Last Donation End ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 4th card section : Training Taken ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              <Col\r\n                md={{ span: 6, order: 4 }}\r\n                lg={{ span: 6, order: 4 }}\r\n                className='mb-2'\r\n                id='training-taken'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>Training Taken</Card.Header>\r\n                </Card>\r\n              </Col>\r\n              {/* 4th card section : Training Taken End ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 6th card section : All Pending User List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {pendingUsersLoading ? (\r\n                <Loader />\r\n              ) : pendingUsersError ? (\r\n                <Message variant='danger'>{pendingUsersError}</Message>\r\n              ) : pendingUsers && pendingUsers.length !== 0 ? (\r\n                <Col\r\n                  md={{ span: 12, order: 12 }}\r\n                  lg={{ span: 12, order: 12 }}\r\n                  className='mb-2'\r\n                  id='all-chapter'\r\n                >\r\n                  <Card className='text-center' border='primary'>\r\n                    <Card.Header as='h5'>Member Pending List</Card.Header>\r\n\r\n                    <Card.Body>\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>FIRST NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>EMAIL VERIFIED</th>\r\n                            <th>PHONE</th>\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <>\r\n                                  <th>APPROVE</th>\r\n                                  <th>DELETE</th>\r\n                                </>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {pendingUsers.map((pendingUser) => (\r\n                            <tr key={pendingUser.pendingId}>\r\n                              <td>{pendingUser.pendingId}</td>\r\n                              {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                              <td> {pendingUser.firstName}</td>\r\n                              <td>\r\n                                <a href={`mailto: ${pendingUser.email}`}>\r\n                                  {' '}\r\n                                  {pendingUser.email}\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                {pendingUser.emailVerified === true ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td>\r\n                              <td> {pendingUser.primaryPhone}</td>\r\n\r\n                              {(userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <>\r\n                                  <td>\r\n                                    <LinkContainer\r\n                                      to={`/users/${pendingUser.pendingId}/pending`}\r\n                                    >\r\n                                      <Button\r\n                                        variant='light'\r\n                                        className='btn-sm'\r\n                                      >\r\n                                        <i className='fas fa-edit'></i>\r\n                                      </Button>\r\n                                    </LinkContainer>\r\n                                  </td>\r\n                                  <td>\r\n                                    <Button\r\n                                      variant='danger'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        deletePendingUserHandler(\r\n                                          pendingUser.pendingId\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                  </td>\r\n                                </>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              ) : null}\r\n              {/* 6th card section : All Pending User List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 7th card section : All Member List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2'\r\n                id='all-member'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>All Members List</Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {userListLoading ? (\r\n                      <Loader />\r\n                    ) : userListError ? (\r\n                      <Message variant='danger'>{userListError}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>IMAGE</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th>ACTIVE STATUS</th>\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n\r\n                            {userInfo &&\r\n                              userInfo.userRole === 'systemAdmin' && (\r\n                                <th>Assign As Admin / Member</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {users.map((user) => (\r\n                            <tr key={user.memberId}>\r\n                              <td>{user.memberId}</td>\r\n                              <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td>\r\n                              <td> {user.userName}</td>\r\n                              <td>\r\n                                <a href={`mailto: ${user.email}`}>\r\n                                  {' '}\r\n                                  {user.email}\r\n                                </a>\r\n                              </td>\r\n                              <td>\r\n                                {user.userRole === 'admin' ||\r\n                                user.userRole === 'systemAdmin' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td>\r\n                              <td>\r\n                                {user.member.status === 'active' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td>\r\n                              {(userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <td>\r\n                                  <LinkContainer\r\n                                    to={`/users/${user.memberId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={() =>\r\n                                      deleteUserHandler(user.memberId)\r\n                                    }\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                </td>\r\n                              )}\r\n\r\n                              {userInfo.userRole === 'systemAdmin' &&\r\n                                (user.userRole === 'member' ? (\r\n                                  <td>\r\n                                    <Button\r\n                                      variant='danger'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        createAdminHandler(user.memberId)\r\n                                      }\r\n                                    >\r\n                                      {' '}\r\n                                      Set As ADMIN\r\n                                      {/* <i className='fas fa-trash'></i> */}\r\n                                    </Button>{' '}\r\n                                  </td>\r\n                                ) : (\r\n                                  <td>\r\n                                    <Button\r\n                                      variant='success'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        deleteAdminHandler(user.memberId)\r\n                                      }\r\n                                    >\r\n                                      {' '}\r\n                                      Set As Member\r\n                                      {/* <i className='fas fa-trash'></i> */}\r\n                                    </Button>\r\n                                  </td>\r\n                                ))}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 7th card section : All Member List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SystemAdminScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\chapterActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserPendingApproveScreen\\UserPendingApproveScreen.js",["506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"import axios from 'axios';\r\nimport { Document } from 'react-pdf';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  Row,\r\n  Col,\r\n  Image,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport {\r\n  approveUser,\r\n  getPendingUserDetails,\r\n  getUserDetails,\r\n  updateUser,\r\n} from '../../actions/userActions';\r\nimport {\r\n  USER_APPROVE_RESET,\r\n  USER_UPDATE_RESET,\r\n} from '../../constants/userConstants';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst UserPendingApproveScreen = ({ match, history }) => {\r\n  const pendingId = match.params.id;\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [address2, setAddress2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [alternatePhone, setAlternatePhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [alternateEmail, setAlternateEmail] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [userRole, setUserRole] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userPendingDetails = useSelector((state) => state.userPendingDetails);\r\n  const { loading, error, pendingUser } = userPendingDetails;\r\n\r\n  const userApprove = useSelector((state) => state.userApprove);\r\n  const {\r\n    loading: loadingApprove,\r\n    error: errorApprove,\r\n    success: successApprove,\r\n  } = userApprove;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (successApprove) {\r\n        dispatch({ type: USER_APPROVE_RESET });\r\n        history.push('/systemAdmin');\r\n      } else {\r\n        if (!pendingUser.pendingId || pendingUser.pendingId !== pendingId) {\r\n          console.log(pendingId);\r\n          dispatch(getPendingUserDetails(pendingId));\r\n        }\r\n        // else {\r\n        //   setFirstName(pendingUser.firstName);\r\n        //   setMInit(pendingUser.mInit);\r\n        //   setLastName(pendingUser.lastName);\r\n        //   setAddress1(pendingUser.address1);\r\n        //   setAddress2(pendingUser.address2);\r\n        //   setCity(pendingUser.city);\r\n        //   setState(pendingUser.state);\r\n        //   setZipcode(pendingUser.zipcode);\r\n        //   setPrimaryPhone(pendingUser.primaryPhone);\r\n        //   setAlternatePhone(pendingUser.alternatePhone);\r\n        //   setDegree(pendingUser.degree);\r\n        //   setDegreeYear(new Date(pendingUser.degreeYear).getFullYear());\r\n        //   setMajor(pendingUser.major);\r\n        //   setCollegeName(pendingUser.collegeName);\r\n        //   setEmail(pendingUser.email);\r\n        //   setAlternateEmail(pendingUser.alternateEmail);\r\n        //   setImage(pendingUser.image);\r\n        //   setUserRole(pendingUser.userRole);\r\n        //   setStatus(pendingUser.status);\r\n        // }\r\n      }\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, pendingUser, pendingId, successApprove]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(approveUser(pendingId));\r\n    // history.push('/systemAdmin');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userInfo && userInfo.userRole === 'systemAdmin' ? (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/systemAdmin'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      ) : (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/dashboard'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      <>\r\n        <Card border='success'>\r\n          <Card.Header className='text-center' as='h2'>\r\n            Approve User\r\n          </Card.Header>\r\n          {loadingApprove && <Loader />}\r\n          {errorApprove && <Message variant='danger'>{errorApprove}</Message>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <>\r\n              <Card.Body>\r\n                <Row>\r\n                  <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Name:</Col>\r\n                          <Col>\r\n                            {pendingUser.mInit} {pendingUser.firstName}{' '}\r\n                            {pendingUser.lastName}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Education:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Highest degree Earned :</Col>\r\n                                  <Col>{pendingUser.degree}</Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>College/University Name :</Col>\r\n                                  <Col>{pendingUser.collegeName}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Year the Degree Earned :</Col>\r\n                                  <Col>{pendingUser.degreeYear}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Major :</Col>\r\n                                  <Col>{pendingUser.major}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Contact Details:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Address :</Col>\r\n                                  <Col>{pendingUser.address1}</Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>State :</Col>\r\n                                  <Col>{pendingUser.state}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>City :</Col>\r\n                                  <Col>{pendingUser.city}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Zipcode :</Col>\r\n                                  <Col>{pendingUser.zipcode}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Phone Number :</Col>\r\n                                  <Col>{pendingUser.primaryPhone}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Email :</Col>\r\n                                  <Col>{pendingUser.email}</Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Card.Title>Certificate</Card.Title>\r\n                    <Card.Img src={pendingUser.certificate} variant='top' />\r\n                    {/* <Image\r\n                      src={pendingUser.certificate}\r\n                      alt={pendingUser.firstName}\r\n                    /> */}\r\n                  </Col>\r\n                </Row>\r\n              </Card.Body>\r\n\r\n              <Card.Footer className='text-muted'>\r\n                <Link\r\n                  className='btn btn-outline-info btn-sm btn-block rounded'\r\n                  onClick={submitHandler}\r\n                >\r\n                  APPROVE\r\n                </Link>\r\n              </Card.Footer>\r\n              <Card.Footer className='text-muted'>\r\n                Email Verified at: {pendingUser.updatedAt}\r\n              </Card.Footer>\r\n            </>\r\n          )}\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPendingApproveScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\paymentTypeReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\paymentTypeConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.js",["554"],"import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport * as S from './ChapterScreen.Styles';\r\nimport {\r\n  deleteChapter,\r\n  listChapters,\r\n  registerChapter,\r\n} from '../../actions/chapterActions';\r\nimport {\r\n  CHAPTER_LIST_RESET,\r\n  CHAPTER_REGISTER_RESET,\r\n} from '../../constants/chapterConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst ChapterScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addChapter, setAddChapter] = useState(false);\r\n  const [chapterName, setChapterName] = useState('');\r\n  const [chapterEmail, setChapterEmail] = useState('');\r\n  const [chapterAddress, setChapterAddress] = useState('');\r\n  const [chapterPhone, setChapterPhone] = useState('');\r\n\r\n  const chapterList = useSelector((state) => state.chapterList);\r\n  const { loading, error, chapters } = chapterList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterRegister = useSelector((state) => state.chapterRegister);\r\n  const {\r\n    loading: registerLoading,\r\n    error: registerError,\r\n    success,\r\n  } = chapterRegister;\r\n\r\n  const chapterDelete = useSelector((state) => state.chapterDelete);\r\n  const { success: successDelete } = chapterDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listChapters());\r\n      dispatch({ type: CHAPTER_LIST_RESET });\r\n      dispatch({ type: CHAPTER_REGISTER_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddChapter(!addChapter);\r\n      setChapterName('');\r\n      setChapterEmail('');\r\n      setChapterAddress('');\r\n      setChapterPhone('');\r\n    }\r\n  }, [dispatch, history, userInfo, success, successDelete]);\r\n\r\n  const deleteChapterHandler = (chapterId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteChapter(chapterId));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      registerChapter(chapterEmail, chapterName, chapterAddress, chapterPhone)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='mb-2'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n            {/* 1st card section : member Status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2'\r\n              >\r\n                <Card border='primary'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      onClick={() => setAddChapter(!addChapter)}\r\n                    >\r\n                      Add New Chapter\r\n                    </Link>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {addChapter\r\n                      ? (registerError && (\r\n                          <Message variant='danger'>{registerError}</Message>\r\n                        )) ||\r\n                        (registerLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='chapterName'>\r\n                              <Form.Label>Chapter Name</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterName'\r\n                                placeholder='Please Enter New Chapter Name..'\r\n                                value={chapterName}\r\n                                onChange={(e) => setChapterName(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterEmail'>\r\n                              <Form.Label>Chapter Email</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterEmail'\r\n                                placeholder='Please Enter Admin Email Address for the New Chapter'\r\n                                value={chapterEmail}\r\n                                onChange={(e) =>\r\n                                  setChapterEmail(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterAddress'>\r\n                              <Form.Label>Chapter Address</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterAddress'\r\n                                placeholder='Please Enter Address..'\r\n                                value={chapterAddress}\r\n                                onChange={(e) =>\r\n                                  setChapterAddress(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterPhone'>\r\n                              <Form.Label>Chapter Phone</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterPhone'\r\n                                placeholder='Please Enter Phone..'\r\n                                value={chapterPhone}\r\n                                onChange={(e) =>\r\n                                  setChapterPhone(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='info' block>\r\n                              <i className='fas fa-plus' /> Add\r\n                            </Button>\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                    {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n                    {/* {registerError && (\r\n                        <Message variant='danger'>{registerError}</Message>\r\n                      )}\r\n                      {registerLoading && <Loader />}\r\n                      {} */}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 5th card section : All Chapter List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>All Chapter List</Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>CHAPTER NAME</th>\r\n                            <th>CHAPTER EMAIL</th>\r\n                            <th>CHAPTER PHONE</th>\r\n                            <th>CHAPTER ADDRESS</th>\r\n                            {userInfo &&\r\n                              userInfo.userRole === 'systemAdmin' && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {chapters.map((chapter) => (\r\n                            <tr key={chapter.chapterId}>\r\n                              <td>{chapter.chapterId}</td>\r\n                              {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                              <td> {chapter.chapterName}</td>\r\n                              <td>\r\n                                <a href={`mailto: ${chapter.chapterEmail}`}>\r\n                                  {' '}\r\n                                  {chapter.chapterEmail}\r\n                                </a>\r\n                              </td>\r\n                              <td> {chapter.chapterPhone}</td>\r\n                              <td> {chapter.chapterAddress}</td>\r\n                              {/* <td>\r\n                                {user.userRole === 'systemAdmin' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td> */}\r\n                              {/* <td>\r\n                                {user.member.status === 'active' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td> */}\r\n                              {userInfo.userRole === 'systemAdmin' && (\r\n                                <td>\r\n                                  <LinkContainer\r\n                                    to={`/chapter/${chapter.chapterId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={() =>\r\n                                      deleteChapterHandler(chapter.chapterId)\r\n                                    }\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Chapter List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChapterScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.js",["555","556","557","558","559","560","561","562","563","564","565","566","567","568","569"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\paymentTypeActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.js",["570","571","572","573","574","575","576","577","578","579","580","581","582"],"import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardColumns,\r\n  Nav,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  listUsers,\r\n  deleteUser,\r\n  listPendingUsers,\r\n  deletePendingUser,\r\n  createAdminUser,\r\n  deleteAdminUser,\r\n} from '../../actions/userActions';\r\nimport * as S from './PaymentTypeScreen.Styles';\r\nimport { deleteChapter, listChapters } from '../../actions/chapterActions';\r\nimport {\r\n  deletePaymentType,\r\n  listPaymentTypes,\r\n  registerPaymentType,\r\n} from '../../actions/paymentTypeActions';\r\nimport AdminSidebar from '../../components/AdminSidebar/AdminSidebar';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport {\r\n  PAYMENT_TYPE_LIST_RESET,\r\n  PAYMENT_TYPE_REGISTER_RESET,\r\n} from '../../constants/paymentTypeConstants';\r\n\r\nconst PaymentTypeScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addPaymentType, setAddPaymentType] = useState(false);\r\n\r\n  const [paymentTypeName, setPaymentTypeName] = useState('');\r\n  const [paymentTypeAmount, setPaymentTypeAmount] = useState('');\r\n  const [paymentTypeDescription, setPaymentTypeDescription] = useState('');\r\n\r\n  const paymentTypeList = useSelector((state) => state.paymentTypeList);\r\n  const { loading, error, paymentTypes } = paymentTypeList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const paymentTypeDelete = useSelector((state) => state.paymentTypeDelete);\r\n  const { success: successPaymentTypeDelete } = paymentTypeDelete;\r\n\r\n  const paymentTypeRegister = useSelector((state) => state.paymentTypeRegister);\r\n  const {\r\n    loading: registerLoading,\r\n    error: registerError,\r\n    success,\r\n  } = paymentTypeRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listPaymentTypes());\r\n      dispatch({ type: PAYMENT_TYPE_LIST_RESET });\r\n      dispatch({ type: PAYMENT_TYPE_REGISTER_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddPaymentType(!addPaymentType);\r\n      setPaymentTypeName('');\r\n      setPaymentTypeAmount('');\r\n      setPaymentTypeDescription('');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successPaymentTypeDelete,\r\n    // paymentTypes,\r\n    success,\r\n  ]);\r\n\r\n  const deletePaymentTypeHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deletePaymentType(id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      registerPaymentType(\r\n        paymentTypeName,\r\n        paymentTypeAmount,\r\n        paymentTypeDescription\r\n      )\r\n    );\r\n  };\r\n  // console.log(addPaymentType);\r\n\r\n  return (\r\n    <S.CardDeck>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='mb-2'\r\n        >\r\n          <AdminSidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n            {/* 1st card section : member Status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2'\r\n              >\r\n                {/* <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                      to=''\r\n                    >\r\n                      Add New Payment Type\r\n                    </Link>\r\n                  </Card.Header>\r\n                </Card> */}\r\n\r\n                <>\r\n                  {/* Card Start */}\r\n                  <Card border='primary'>\r\n                    <Card.Header className='text-center' as='h2'>\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => setAddPaymentType(!addPaymentType)}\r\n                      >\r\n                        Add New Payment Type\r\n                      </Link>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      {addPaymentType\r\n                        ? (registerError && (\r\n                            <Message variant='danger'>{registerError}</Message>\r\n                          )) ||\r\n                          (registerLoading && <Loader />) ||\r\n                          (success ? (\r\n                            <Message variant='success'>{success}</Message>\r\n                          ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                              <Form.Group controlId='firstName'>\r\n                                <Form.Label>Payment type</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeName'\r\n                                  placeholder='Please Enter Payment Type Name..'\r\n                                  value={paymentTypeName}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeName(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group controlId='lastName'>\r\n                                <Form.Label>Amount</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeAmount'\r\n                                  placeholder='Please Enter an amount for this payment type'\r\n                                  value={paymentTypeAmount}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeAmount(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group controlId='Description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeDescription'\r\n                                  placeholder='Please Enter Description..'\r\n                                  value={paymentTypeDescription}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeDescription(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            </Form>\r\n                          ))\r\n                        : null}\r\n                      {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n                      {/* {registerError && (\r\n                        <Message variant='danger'>{registerError}</Message>\r\n                      )}\r\n                      {registerLoading && <Loader />}\r\n                      {} */}\r\n                    </Card.Body>\r\n                  </Card>\r\n                  {/* Card End */}\r\n                </>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 5th card section : All Chapter List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 12 }}\r\n                lg={{ span: 6, order: 12 }}\r\n                className='mb-2'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>All Payment Types</Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            {/* <th>ID</th> */}\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>NAME</th>\r\n                            <th>AMOUNT</th>\r\n\r\n                            {userInfo &&\r\n                              userInfo.userRole === 'systemAdmin' && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {paymentTypes.map((paymentType) => (\r\n                            <tr key={paymentType.paymentTypeId}>\r\n                              {/* <td>{paymentType.paymentTypeId}</td> */}\r\n\r\n                              <td> {paymentType.paymentTypeName}</td>\r\n\r\n                              <td> {paymentType.paymentTypeAmount}</td>\r\n\r\n                              {userInfo.userRole === 'systemAdmin' && (\r\n                                <td>\r\n                                  <LinkContainer\r\n                                    to={`/paymentType/${paymentType.paymentTypeId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={() =>\r\n                                      deletePaymentTypeHandler(\r\n                                        paymentType.paymentTypeId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Chapter List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </S.CardDeck>\r\n  );\r\n};\r\n\r\nexport default PaymentTypeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\PaymentDropdown.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\DatePicker.js",["583"],"import React from 'react';\r\n\r\nconst minOffset = 0;\r\nconst maxOffset = 60;\r\n\r\nclass DatePicker extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    const thisYear = new Date().getFullYear();\r\n\r\n    this.state = {\r\n      thisYear: thisYear,\r\n      selectedYear: thisYear,\r\n    };\r\n  }\r\n\r\n  onHandleChange = (evt) => {\r\n    // Handle Change Here\r\n    // alert(evt.target.value);\r\n    this.setState({ selectedYear: evt.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { thisYear, selectedYear } = this.state;\r\n    const options = [];\r\n\r\n    for (let i = minOffset; i <= maxOffset; i++) {\r\n      const year = thisYear + i;\r\n      options.push(<option value={year}>{year}</option>);\r\n    }\r\n    return (\r\n      <div>\r\n        <select value={this.selectedYear} onChange={this.onHandleChange}>\r\n          {options}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatePicker;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.js",["584","585","586","587","588","589","590"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.js",["591","592","593","594","595","596","597","598"],"import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport * as S from './VissionScreen.Styles';\r\n\r\nconst VissionScreen = () => {\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='mb-2'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2'\r\n              >\r\n                <Card border='primary'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddChapter(!addChapter)}\r\n                    >\r\n                      Update Vission\r\n                    </Link>\r\n                  </Card.Header>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>Vission</Card.Header>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VissionScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.js",["599","600","601","602","603","604","605"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.js",["606","607","608","609","610","611","612","613"],"import React from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport * as S from './HistoryScreen.Styles';\r\n\r\nconst HistoryScreen = () => {\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='mb-2'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2'\r\n              >\r\n                <Card border='primary'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddChapter(!addChapter)}\r\n                    >\r\n                      Update History\r\n                    </Link>\r\n                  </Card.Header>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='primary'>\r\n                  <Card.Header as='h5'>History</Card.Header>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HistoryScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegisterScreen.js",["614","615"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport { register } from '../../actions/userActions';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { USER_REGISTER_RESET } from '../../constants/userConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  // const [username, setUsername] = useState('');\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('Mr');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [certificate, setCertificate] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, success } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    // if (success) {\r\n    //   dispatch({ type: USER_REGISTER_RESET });\r\n    //   history.push(redirect);\r\n    // }\r\n\r\n    if (success) {\r\n      console.log(success);\r\n      swal('Success!', success, 'success').then((value) => {\r\n        dispatch({ type: USER_REGISTER_RESET });\r\n        history.push(redirect);\r\n      });\r\n    } else if (error) {\r\n      console.log(error);\r\n      swal('Error!', error, 'error');\r\n    }\r\n  }, [history, success, redirect, error]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setCertificate(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      if (password !== confirmPassword) {\r\n        setMessage('password do not match');\r\n        swal('Error!', message, 'error');\r\n      } else {\r\n        // Dispatch Register\r\n        dispatch(\r\n          register(\r\n            // username,\r\n            email,\r\n            password,\r\n            firstName,\r\n            mInit,\r\n            lastName,\r\n            address1,\r\n            city,\r\n            state,\r\n            zipcode,\r\n            primaryPhone,\r\n            degree,\r\n            degreeYear,\r\n            major,\r\n            collegeName,\r\n            certificate\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {/* Card Start */}\r\n      <Card border='success'>\r\n        <Card.Header className='text-center text-info' as='h2'>\r\n          Sign Up\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <Message variant='success'>{success}</Message>\r\n          ) : (\r\n            <>\r\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\r\n                <Form.Row>\r\n                  {/* <Row> */}\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Name</Form.Label>\r\n                  </Form.Group>\r\n                  {/* <Col md={10}> */}\r\n                  {/* <Row> */}\r\n                  {/* <Col md={2}> */}\r\n                  <Form.Group as={Col} md='2' controlId='mInit'>\r\n                    <Form.Control\r\n                      required\r\n                      as='select'\r\n                      type='text'\r\n                      value={mInit}\r\n                      onChange={(e) => setMInit(e.target.value)}\r\n                    >\r\n                      <option value='Mr'>Mr</option>\r\n                      <option value='Mrs'>Mrs</option>\r\n                      <option value='Miss'>Ms</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  {/* </Col> */}\r\n                  {/* <Col md={5}> */}\r\n                  <Form.Group as={Col} md='4' controlId='firstName'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='First Name'\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  {/* </Col> */}\r\n                  {/* <Col md={5}> */}\r\n                  <Form.Group as={Col} md='4' controlId='lastName'>\r\n                    <Form.Control\r\n                      required\r\n                      placeholder='Last Name'\r\n                      type='text'\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  {/* </Col> */}\r\n                  {/* </Row> */}\r\n                  {/* </Col> */}\r\n                  {/* </Row> */}\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Address</Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='10' controlId='address1'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='1234 Main St...'\r\n                      value={address1}\r\n                      onChange={(e) => setAddress1(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 10, offset: 2 }}\r\n                    controlId='state'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter State..'\r\n                      value={state}\r\n                      onChange={(e) => setState(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 10, offset: 2 }}\r\n                    controlId='city'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter City..'\r\n                      value={city}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 10, offset: 2 }}\r\n                    controlId='zipcode'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Zipcode..'\r\n                      value={zipcode}\r\n                      onChange={(e) => setZipcode(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='primaryPhone'>\r\n                    <Form.Control\r\n                      required\r\n                      type='number'\r\n                      placeholder='Enter Your Phone Number..'\r\n                      value={primaryPhone}\r\n                      onChange={(e) => setPrimaryPhone(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Education</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='5' controlId='degree'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Your Last Degree Received..'\r\n                      value={degree}\r\n                      onChange={(e) => setDegree(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='5' controlId='degreeYear'>\r\n                    <Form.Control\r\n                      required\r\n                      type='number'\r\n                      placeholder='Enter The Year of Degree Awarded..'\r\n                      value={degreeYear}\r\n                      onChange={(e) => setDegreeYear(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 5, offset: 2 }}\r\n                    controlId='major'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Your Major..'\r\n                      value={major}\r\n                      onChange={(e) => setMajor(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='5' controlId='collegeName'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Your University/College Name..'\r\n                      value={collegeName}\r\n                      onChange={(e) => setCollegeName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Certificate</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='certificate'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter your last certificate url..'\r\n                      value={certificate}\r\n                      onChange={(e) => setCertificate(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Form.File\r\n                      id='image-file'\r\n                      label='Choose File'\r\n                      custom\r\n                      onChange={uploadFileHandler}\r\n                    ></Form.File>\r\n                    {uploading && <Loader />}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='email'>\r\n                    <Form.Control\r\n                      required\r\n                      type='email'\r\n                      placeholder='Enter Email..'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 5, offset: 2 }}\r\n                    controlId='password'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='password'\r\n                      placeholder='Enter password..'\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 5 }}\r\n                    controlId='confirmPassword'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='password'\r\n                      placeholder='Confirm password..'\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                      isInvalid={password !== confirmPassword}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col md={{ span: 10, offset: 2 }}>\r\n                    <Button type='submit' variant='info' block>\r\n                      Register\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n        <Card.Footer className='text-muted text-right'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              Have an Account?{' '}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                <span className='text-info'>Login</span>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n      {/* Card End */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\n// ///// Register attributes\r\n// {\r\n\r\n//   \"firstName\": \"jobayer\", done\r\n//   \"mInit\": \"Mr.\", done\r\n//   \"lastName\": \"Ahmad\", done\r\n//   \"address1\": \"30 long Island Steet, NY,USA\", Done\r\n//   \"address2\": \"31 long Island Steet, NY,USA\", //////////////// not in from register\r\n//   \"city\": \"Newyork\", Done\r\n//   \"state\": \"NY\",\r\n//   \"zipcode\": \"123456\",\r\n//   \"email\": \"jobayer@example.com\",\r\n//   \"password\": \"123456\",\r\n//   \"alternateEmail\": \"jobayer_alter@example.com\",\r\n//   \"primaryPhone\": \"1234567890\",\r\n//   \"alternatePhone\": \"1234567890\",\r\n//   \"degree\": \"B.Sc\",\r\n//   \"degreeYear\": \"2000\",\r\n//   \"major\": \"EEE\",\r\n//   \"collegeName\": \"AIUB\",\r\n//   \"status\": \"active\",\r\n//   \"balance\": \"10000.05\"\r\n\r\n// state,\r\n// zipcode,\r\n//\r\n//\r\n// primaryPhone,\r\n//  degree,\r\n//   degreeYear,\r\n//   major,\r\n//   collegeName\r\n\r\n// }\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.js",["616","617","618","619"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport * as S from './PasswordResetScreen.Styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport { passwordReset } from '../../actions/userActions';\r\nimport { USER_PASSWORD_RESET_RESET } from '../../constants/userConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst PasswordResetScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const userPasswordReset = useSelector((state) => state.userPasswordReset);\r\n  const { loading, error, success } = userPasswordReset;\r\n\r\n  // useEffect(() => {\r\n  //   if (success) {\r\n  //     swal('Success!', success, 'success').then(() => {\r\n  //       dispatch({ type: USER_PASSWORD_RESET_RESET });\r\n  //     });\r\n  //   }\r\n  // }, [success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log('Submited');\r\n    // Dispatch Login\r\n    dispatch(passwordReset(email));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Card border='info'>\r\n        <Card.Header\r\n          className='text-center'\r\n          as='h2'\r\n          style={{ color: '#033c73' }}\r\n        >\r\n          Reset your password\r\n        </Card.Header>\r\n\r\n        <Card.Body className='text-center'>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <>\r\n              <Card.Text>\r\n                If that account is in our system, we emailed you a link to reset\r\n                your password.\r\n              </Card.Text>\r\n              <Card.Body className='text-muted'>\r\n                {/* <Row className='py-3'>\r\n                  <Col> */}\r\n                <Link to='/login' className='btn btn-info'>\r\n                  Return to sign in\r\n                </Link>\r\n                {/* </Col>\r\n                </Row> */}\r\n              </Card.Body>\r\n            </>\r\n          ) : (\r\n            // <div className='reset-password-form-wrapper'>\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter Email..'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='info' block>\r\n                Send password reset email\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Card.Body>\r\n\r\n        <Card.Footer className='text-muted'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              <Link to='/login'>I remember my password</Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PasswordResetScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.js",["620","621","622","623","624"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport * as S from './PasswordUpdateScreen.Styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport { passwordReset, passwordUpdate } from '../../actions/userActions';\r\nimport { USER_PASSWORD_RESET_RESET } from '../../constants/userConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst PasswordUpdateScreen = ({ location, match, history }) => {\r\n  const { id, token } = match.params;\r\n\r\n  const dispatch = useDispatch();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const userPasswordUpdate = useSelector((state) => state.userPasswordUpdate);\r\n  const { loading, error, success } = userPasswordUpdate;\r\n\r\n  // useEffect(() => {\r\n  //   if (success) {\r\n  //     swal('Success!', success, 'success').then(() => {\r\n  //       dispatch({ type: USER_PASSWORD_RESET_RESET });\r\n  //     });\r\n  //   }\r\n  // }, [success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log('Submited');\r\n    // Dispatch Login\r\n    dispatch(passwordUpdate(password, id, token));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Card border='info'>\r\n        <Card.Header\r\n          className='text-center'\r\n          as='h2'\r\n          style={{ color: '#033c73' }}\r\n        >\r\n          Set New password\r\n        </Card.Header>\r\n\r\n        <Card.Body className='text-center'>\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <>\r\n              <Message variant='success'>{success}</Message>\r\n              <Card.Body className='text-muted'>\r\n                {/* <Row className='py-3'>\r\n                  <Col> */}\r\n                <Link to='/login' className='btn btn-info'>\r\n                  Return to sign in\r\n                </Link>\r\n                {/* </Col>\r\n                </Row> */}\r\n              </Card.Body>\r\n            </>\r\n          ) : (\r\n            // <div className='reset-password-form-wrapper'>\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='password'>\r\n                <Form.Control\r\n                  required\r\n                  type='password'\r\n                  placeholder='Enter password..'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='confirmPassword'>\r\n                <Form.Control\r\n                  required\r\n                  type='password'\r\n                  placeholder='Confirm password..'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  isInvalid={password !== confirmPassword}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Button type='submit' variant='info' block>\r\n                Set New Password\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Card.Body>\r\n\r\n        <Card.Footer className='text-muted'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              <Link to='/login'>I remember my password</Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PasswordUpdateScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\vissionReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\announcementReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\missionReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\historyReducers.js",["625","626","627","628","629","630","631","632","633","634","635","636"],"import {\r\n  HISTORY_ALL_FAIL,\r\n  HISTORY_ALL_REQUEST,\r\n  HISTORY_ALL_SUCCESS,\r\n  HISTORY_DELETE_FAIL,\r\n  HISTORY_DELETE_REQUEST,\r\n  HISTORY_DELETE_SUCCESS,\r\n  HISTORY_NEW_FAIL,\r\n  HISTORY_NEW_REQUEST,\r\n  HISTORY_NEW_SUCCESS,\r\n  HISTORY_UPDATE_BY_ID_FAIL,\r\n  HISTORY_UPDATE_BY_ID_REQUEST,\r\n  HISTORY_UPDATE_BY_ID_SUCCESS,\r\n  VISSION_ALL_FAIL,\r\n  VISSION_ALL_REQUEST,\r\n  VISSION_ALL_SUCCESS,\r\n  VISSION_DELETE_FAIL,\r\n  VISSION_DELETE_REQUEST,\r\n  VISSION_DELETE_SUCCESS,\r\n  VISSION_NEW_FAIL,\r\n  VISSION_NEW_REQUEST,\r\n  VISSION_NEW_SUCCESS,\r\n  VISSION_UPDATE_BY_ID_FAIL,\r\n  VISSION_UPDATE_BY_ID_REQUEST,\r\n  VISSION_UPDATE_BY_ID_SUCCESS,\r\n} from '../constants/historyConstants';\r\n\r\nexport const historyNewReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case HISTORY_NEW_REQUEST:\r\n      return { loading: true };\r\n    case HISTORY_NEW_SUCCESS:\r\n      return { loading: false, success: action.payload };\r\n    case HISTORY_NEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const historyAllReducer = (state = { history: [] }, action) => {\r\n  switch (action.type) {\r\n    case HISTORY_ALL_REQUEST:\r\n      return { loading: true };\r\n    case HISTORY_ALL_SUCCESS:\r\n      return { loading: false, history: action.payload };\r\n    case HISTORY_ALL_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const historyUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case HISTORY_UPDATE_BY_ID_REQUEST:\r\n      return { loading: true };\r\n    case HISTORY_UPDATE_BY_ID_SUCCESS:\r\n      return { loading: false, success: true, history: action.payload };\r\n    case HISTORY_UPDATE_BY_ID_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const historyDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case HISTORY_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case HISTORY_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case HISTORY_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\historyConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\vissionConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\missionConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\announcementConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\announcementAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\missionActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js",["637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687"],"import axios from 'axios';\r\nimport { Document } from 'react-pdf';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  Row,\r\n  Col,\r\n  Image,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport {\r\n  approveUser,\r\n  getPendingUserDetails,\r\n  getUserDetails,\r\n  getUserProfile,\r\n  updateUser,\r\n} from '../../actions/userActions';\r\nimport {\r\n  USER_APPROVE_RESET,\r\n  USER_UPDATE_RESET,\r\n} from '../../constants/userConstants';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst ProfileScreen = ({ match, history }) => {\r\n  const pendingId = match.params.id;\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [address2, setAddress2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [alternatePhone, setAlternatePhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [alternateEmail, setAlternateEmail] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [userRole, setUserRole] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading: userLoading, user, error: userError } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUserProfile());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Edit clicked');\r\n    // dispatch(approveUser(pendingId));\r\n    // history.push('/systemAdmin');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userInfo && (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/dashboard'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      <>\r\n        <Card border='success'>\r\n          <Card.Header className='text-center' as='h2'>\r\n            {userInfo && userInfo.userName}\r\n          </Card.Header>\r\n\r\n          {userLoading ? (\r\n            <Loader />\r\n          ) : userError ? (\r\n            <Message variant='danger'>{userError}</Message>\r\n          ) : (\r\n            user && (\r\n              <>\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md={8}>\r\n                      <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={3}>Name:</Col>\r\n                            <Col>\r\n                              {user.mInit} {user.firstName} {user.lastName}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={3}>Education:</Col>\r\n                            <Col>\r\n                              <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Highest degree Earned :</Col>\r\n                                    <Col>{user.degree}</Col>\r\n                                  </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>College/University Name :</Col>\r\n                                    <Col>{user.collegeName}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Year the Degree Earned :</Col>\r\n                                    <Col>{user.degreeYear}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Major :</Col>\r\n                                    <Col>{user.major}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n                              </ListGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={3}>Contact Details:</Col>\r\n                            <Col>\r\n                              <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Address :</Col>\r\n                                    <Col>{user.address1}</Col>\r\n                                  </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>State :</Col>\r\n                                    <Col>{user.state}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>City :</Col>\r\n                                    <Col>{user.city}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Zipcode :</Col>\r\n                                    <Col>{user.zipcode}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Phone Number :</Col>\r\n                                    <Col>{user.primaryPhone}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                  <Row>\r\n                                    <Col md={4}>Email :</Col>\r\n                                    <Col>{user.primaryEmail}</Col>\r\n                                  </Row>{' '}\r\n                                </ListGroup.Item>\r\n                              </ListGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <Card.Header>Profile Picture</Card.Header>\r\n                      <Card.Img src={user.certificates} variant='top' />\r\n\r\n                      <Card.Header>Certificate</Card.Header>\r\n                      <Card.Img src={user.certificates} variant='top' />\r\n                      {/* <Document\r\n                        src={samplePDF}\r\n                        // src={require('/uploads/image-1616636214274.pdf')}\r\n                      ></Document> */}\r\n                      {/* <Image\r\n                      src={pendingUser.certificate}\r\n                      alt={pendingUser.firstName}\r\n                    /> */}\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className='text-muted'>\r\n                  <Link\r\n                    className='btn btn-outline-info btn-sm btn-block rounded'\r\n                    onClick={submitHandler}\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                </Card.Footer>\r\n              </>\r\n            )\r\n          )}\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n",{"ruleId":"688","replacedBy":"689"},{"ruleId":"690","replacedBy":"691"},{"ruleId":"692","severity":1,"message":"693","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":23},{"ruleId":"692","severity":1,"message":"696","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":16},{"ruleId":"692","severity":1,"message":"697","line":7,"column":3,"nodeType":"694","messageId":"695","endLine":7,"endColumn":12},{"ruleId":"692","severity":1,"message":"698","line":8,"column":3,"nodeType":"694","messageId":"695","endLine":8,"endColumn":9},{"ruleId":"692","severity":1,"message":"699","line":11,"column":3,"nodeType":"694","messageId":"695","endLine":11,"endColumn":8},{"ruleId":"700","severity":1,"message":"701","line":38,"column":37,"nodeType":"702","messageId":"703","endLine":38,"endColumn":39},{"ruleId":"688","replacedBy":"704"},{"ruleId":"690","replacedBy":"705"},{"ruleId":"692","severity":1,"message":"706","line":4,"column":13,"nodeType":"694","messageId":"695","endLine":4,"endColumn":14},{"ruleId":"692","severity":1,"message":"707","line":22,"column":8,"nodeType":"694","messageId":"695","endLine":22,"endColumn":23},{"ruleId":"692","severity":1,"message":"708","line":13,"column":3,"nodeType":"694","messageId":"695","endLine":13,"endColumn":33},{"ruleId":"692","severity":1,"message":"709","line":30,"column":14,"nodeType":"694","messageId":"695","endLine":30,"endColumn":29},{"ruleId":"710","severity":1,"message":"711","line":98,"column":6,"nodeType":"712","endLine":98,"endColumn":71,"suggestions":"713"},{"ruleId":"692","severity":1,"message":"714","line":8,"column":3,"nodeType":"694","messageId":"695","endLine":8,"endColumn":17},{"ruleId":"692","severity":1,"message":"715","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":11},{"ruleId":"692","severity":1,"message":"716","line":38,"column":3,"nodeType":"694","messageId":"695","endLine":38,"endColumn":19},{"ruleId":"692","severity":1,"message":"717","line":28,"column":3,"nodeType":"694","messageId":"695","endLine":28,"endColumn":26},{"ruleId":"692","severity":1,"message":"718","line":40,"column":3,"nodeType":"694","messageId":"695","endLine":40,"endColumn":28},{"ruleId":"692","severity":1,"message":"719","line":47,"column":3,"nodeType":"694","messageId":"695","endLine":47,"endColumn":29},{"ruleId":"692","severity":1,"message":"696","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":16},{"ruleId":"692","severity":1,"message":"697","line":7,"column":3,"nodeType":"694","messageId":"695","endLine":7,"endColumn":12},{"ruleId":"692","severity":1,"message":"698","line":8,"column":3,"nodeType":"694","messageId":"695","endLine":8,"endColumn":9},{"ruleId":"692","severity":1,"message":"720","line":4,"column":3,"nodeType":"694","messageId":"695","endLine":4,"endColumn":9},{"ruleId":"692","severity":1,"message":"699","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":8},{"ruleId":"692","severity":1,"message":"721","line":11,"column":3,"nodeType":"694","messageId":"695","endLine":11,"endColumn":14},{"ruleId":"692","severity":1,"message":"698","line":5,"column":10,"nodeType":"694","messageId":"695","endLine":5,"endColumn":16},{"ruleId":"692","severity":1,"message":"722","line":5,"column":24,"nodeType":"694","messageId":"695","endLine":5,"endColumn":27},{"ruleId":"692","severity":1,"message":"723","line":2,"column":8,"nodeType":"694","messageId":"695","endLine":2,"endColumn":14},{"ruleId":"688","replacedBy":"724"},{"ruleId":"690","replacedBy":"725"},{"ruleId":"692","severity":1,"message":"726","line":7,"column":10,"nodeType":"694","messageId":"695","endLine":7,"endColumn":23},{"ruleId":"692","severity":1,"message":"698","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":9},{"ruleId":"692","severity":1,"message":"699","line":11,"column":3,"nodeType":"694","messageId":"695","endLine":11,"endColumn":8},{"ruleId":"692","severity":1,"message":"715","line":15,"column":3,"nodeType":"694","messageId":"695","endLine":15,"endColumn":11},{"ruleId":"692","severity":1,"message":"722","line":16,"column":3,"nodeType":"694","messageId":"695","endLine":16,"endColumn":6},{"ruleId":"692","severity":1,"message":"727","line":19,"column":3,"nodeType":"694","messageId":"695","endLine":19,"endColumn":11},{"ruleId":"692","severity":1,"message":"728","line":20,"column":3,"nodeType":"694","messageId":"695","endLine":20,"endColumn":17},{"ruleId":"692","severity":1,"message":"729","line":22,"column":10,"nodeType":"694","messageId":"695","endLine":22,"endColumn":14},{"ruleId":"692","severity":1,"message":"719","line":32,"column":3,"nodeType":"694","messageId":"695","endLine":32,"endColumn":29},{"ruleId":"692","severity":1,"message":"730","line":37,"column":8,"nodeType":"694","messageId":"695","endLine":37,"endColumn":23},{"ruleId":"692","severity":1,"message":"731","line":38,"column":8,"nodeType":"694","messageId":"695","endLine":38,"endColumn":18},{"ruleId":"692","severity":1,"message":"732","line":54,"column":20,"nodeType":"694","messageId":"695","endLine":54,"endColumn":31},{"ruleId":"692","severity":1,"message":"733","line":54,"column":46,"nodeType":"694","messageId":"695","endLine":54,"endColumn":55},{"ruleId":"692","severity":1,"message":"734","line":71,"column":20,"nodeType":"694","messageId":"695","endLine":71,"endColumn":30},{"ruleId":"710","severity":1,"message":"735","line":127,"column":6,"nodeType":"712","endLine":136,"endColumn":4,"suggestions":"736"},{"ruleId":"692","severity":1,"message":"737","line":138,"column":9,"nodeType":"694","messageId":"695","endLine":138,"endColumn":20},{"ruleId":"692","severity":1,"message":"726","line":5,"column":10,"nodeType":"694","messageId":"695","endLine":5,"endColumn":23},{"ruleId":"692","severity":1,"message":"698","line":8,"column":3,"nodeType":"694","messageId":"695","endLine":8,"endColumn":9},{"ruleId":"692","severity":1,"message":"699","line":9,"column":3,"nodeType":"694","messageId":"695","endLine":9,"endColumn":8},{"ruleId":"692","severity":1,"message":"715","line":13,"column":3,"nodeType":"694","messageId":"695","endLine":13,"endColumn":11},{"ruleId":"692","severity":1,"message":"722","line":14,"column":3,"nodeType":"694","messageId":"695","endLine":14,"endColumn":6},{"ruleId":"692","severity":1,"message":"719","line":30,"column":3,"nodeType":"694","messageId":"695","endLine":30,"endColumn":29},{"ruleId":"692","severity":1,"message":"738","line":31,"column":3,"nodeType":"694","messageId":"695","endLine":31,"endColumn":17},{"ruleId":"692","severity":1,"message":"739","line":53,"column":11,"nodeType":"694","messageId":"695","endLine":53,"endColumn":18},{"ruleId":"692","severity":1,"message":"740","line":53,"column":20,"nodeType":"694","messageId":"695","endLine":53,"endColumn":25},{"ruleId":"710","severity":1,"message":"741","line":120,"column":6,"nodeType":"712","endLine":120,"endColumn":63,"suggestions":"742"},{"ruleId":"692","severity":1,"message":"743","line":1,"column":17,"nodeType":"694","messageId":"695","endLine":1,"endColumn":26},{"ruleId":"692","severity":1,"message":"744","line":4,"column":3,"nodeType":"694","messageId":"695","endLine":4,"endColumn":8},{"ruleId":"692","severity":1,"message":"699","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":8},{"ruleId":"692","severity":1,"message":"715","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":11},{"ruleId":"692","severity":1,"message":"745","line":14,"column":10,"nodeType":"694","messageId":"695","endLine":14,"endColumn":21},{"ruleId":"692","severity":1,"message":"746","line":14,"column":23,"nodeType":"694","messageId":"695","endLine":14,"endColumn":34},{"ruleId":"692","severity":1,"message":"747","line":15,"column":8,"nodeType":"694","messageId":"695","endLine":15,"endColumn":15},{"ruleId":"692","severity":1,"message":"748","line":16,"column":8,"nodeType":"694","messageId":"695","endLine":16,"endColumn":14},{"ruleId":"692","severity":1,"message":"743","line":1,"column":17,"nodeType":"694","messageId":"695","endLine":1,"endColumn":26},{"ruleId":"692","severity":1,"message":"744","line":4,"column":3,"nodeType":"694","messageId":"695","endLine":4,"endColumn":8},{"ruleId":"692","severity":1,"message":"699","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":8},{"ruleId":"692","severity":1,"message":"715","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":11},{"ruleId":"692","severity":1,"message":"745","line":14,"column":10,"nodeType":"694","messageId":"695","endLine":14,"endColumn":21},{"ruleId":"692","severity":1,"message":"746","line":14,"column":23,"nodeType":"694","messageId":"695","endLine":14,"endColumn":34},{"ruleId":"692","severity":1,"message":"747","line":15,"column":8,"nodeType":"694","messageId":"695","endLine":15,"endColumn":15},{"ruleId":"692","severity":1,"message":"748","line":16,"column":8,"nodeType":"694","messageId":"695","endLine":16,"endColumn":14},{"ruleId":"700","severity":1,"message":"749","line":153,"column":44,"nodeType":"702","messageId":"703","endLine":153,"endColumn":46},{"ruleId":"692","severity":1,"message":"706","line":2,"column":13,"nodeType":"694","messageId":"695","endLine":2,"endColumn":14},{"ruleId":"692","severity":1,"message":"750","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":15},{"ruleId":"692","severity":1,"message":"751","line":4,"column":10,"nodeType":"694","messageId":"695","endLine":4,"endColumn":14},{"ruleId":"692","severity":1,"message":"698","line":4,"column":16,"nodeType":"694","messageId":"695","endLine":4,"endColumn":22},{"ruleId":"692","severity":1,"message":"752","line":16,"column":10,"nodeType":"694","messageId":"695","endLine":16,"endColumn":15},{"ruleId":"692","severity":1,"message":"753","line":16,"column":17,"nodeType":"694","messageId":"695","endLine":16,"endColumn":25},{"ruleId":"710","severity":1,"message":"754","line":47,"column":6,"nodeType":"712","endLine":47,"endColumn":38,"suggestions":"755"},{"ruleId":"692","severity":1,"message":"756","line":49,"column":9,"nodeType":"694","messageId":"695","endLine":49,"endColumn":22},{"ruleId":"692","severity":1,"message":"757","line":1,"column":8,"nodeType":"694","messageId":"695","endLine":1,"endColumn":13},{"ruleId":"692","severity":1,"message":"758","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":14},{"ruleId":"692","severity":1,"message":"722","line":11,"column":3,"nodeType":"694","messageId":"695","endLine":11,"endColumn":6},{"ruleId":"692","severity":1,"message":"729","line":13,"column":10,"nodeType":"694","messageId":"695","endLine":13,"endColumn":14},{"ruleId":"692","severity":1,"message":"759","line":29,"column":10,"nodeType":"694","messageId":"695","endLine":29,"endColumn":33},{"ruleId":"692","severity":1,"message":"739","line":35,"column":11,"nodeType":"694","messageId":"695","endLine":35,"endColumn":18},{"ruleId":"692","severity":1,"message":"740","line":35,"column":20,"nodeType":"694","messageId":"695","endLine":35,"endColumn":25},{"ruleId":"692","severity":1,"message":"760","line":35,"column":27,"nodeType":"694","messageId":"695","endLine":35,"endColumn":35},{"ruleId":"692","severity":1,"message":"761","line":77,"column":9,"nodeType":"694","messageId":"695","endLine":77,"endColumn":29},{"ruleId":"692","severity":1,"message":"762","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":18},{"ruleId":"692","severity":1,"message":"751","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":7},{"ruleId":"692","severity":1,"message":"698","line":7,"column":3,"nodeType":"694","messageId":"695","endLine":7,"endColumn":9},{"ruleId":"692","severity":1,"message":"699","line":12,"column":3,"nodeType":"694","messageId":"695","endLine":12,"endColumn":8},{"ruleId":"692","severity":1,"message":"763","line":15,"column":8,"nodeType":"694","messageId":"695","endLine":15,"endColumn":21},{"ruleId":"692","severity":1,"message":"714","line":19,"column":3,"nodeType":"694","messageId":"695","endLine":19,"endColumn":17},{"ruleId":"692","severity":1,"message":"764","line":20,"column":3,"nodeType":"694","messageId":"695","endLine":20,"endColumn":13},{"ruleId":"692","severity":1,"message":"765","line":24,"column":3,"nodeType":"694","messageId":"695","endLine":24,"endColumn":20},{"ruleId":"692","severity":1,"message":"766","line":32,"column":10,"nodeType":"694","messageId":"695","endLine":32,"endColumn":19},{"ruleId":"692","severity":1,"message":"767","line":32,"column":21,"nodeType":"694","messageId":"695","endLine":32,"endColumn":33},{"ruleId":"692","severity":1,"message":"768","line":33,"column":10,"nodeType":"694","messageId":"695","endLine":33,"endColumn":15},{"ruleId":"692","severity":1,"message":"769","line":33,"column":17,"nodeType":"694","messageId":"695","endLine":33,"endColumn":25},{"ruleId":"692","severity":1,"message":"770","line":34,"column":10,"nodeType":"694","messageId":"695","endLine":34,"endColumn":18},{"ruleId":"692","severity":1,"message":"771","line":34,"column":20,"nodeType":"694","messageId":"695","endLine":34,"endColumn":31},{"ruleId":"692","severity":1,"message":"772","line":35,"column":10,"nodeType":"694","messageId":"695","endLine":35,"endColumn":18},{"ruleId":"692","severity":1,"message":"773","line":35,"column":20,"nodeType":"694","messageId":"695","endLine":35,"endColumn":31},{"ruleId":"692","severity":1,"message":"774","line":36,"column":10,"nodeType":"694","messageId":"695","endLine":36,"endColumn":18},{"ruleId":"692","severity":1,"message":"775","line":36,"column":20,"nodeType":"694","messageId":"695","endLine":36,"endColumn":31},{"ruleId":"692","severity":1,"message":"776","line":37,"column":10,"nodeType":"694","messageId":"695","endLine":37,"endColumn":14},{"ruleId":"692","severity":1,"message":"777","line":37,"column":16,"nodeType":"694","messageId":"695","endLine":37,"endColumn":23},{"ruleId":"692","severity":1,"message":"778","line":38,"column":10,"nodeType":"694","messageId":"695","endLine":38,"endColumn":15},{"ruleId":"692","severity":1,"message":"779","line":38,"column":17,"nodeType":"694","messageId":"695","endLine":38,"endColumn":25},{"ruleId":"692","severity":1,"message":"780","line":39,"column":10,"nodeType":"694","messageId":"695","endLine":39,"endColumn":17},{"ruleId":"692","severity":1,"message":"781","line":39,"column":19,"nodeType":"694","messageId":"695","endLine":39,"endColumn":29},{"ruleId":"692","severity":1,"message":"782","line":40,"column":10,"nodeType":"694","messageId":"695","endLine":40,"endColumn":22},{"ruleId":"692","severity":1,"message":"783","line":40,"column":24,"nodeType":"694","messageId":"695","endLine":40,"endColumn":39},{"ruleId":"692","severity":1,"message":"784","line":41,"column":10,"nodeType":"694","messageId":"695","endLine":41,"endColumn":24},{"ruleId":"692","severity":1,"message":"785","line":41,"column":26,"nodeType":"694","messageId":"695","endLine":41,"endColumn":43},{"ruleId":"692","severity":1,"message":"786","line":42,"column":10,"nodeType":"694","messageId":"695","endLine":42,"endColumn":16},{"ruleId":"692","severity":1,"message":"787","line":42,"column":18,"nodeType":"694","messageId":"695","endLine":42,"endColumn":27},{"ruleId":"692","severity":1,"message":"788","line":43,"column":10,"nodeType":"694","messageId":"695","endLine":43,"endColumn":20},{"ruleId":"692","severity":1,"message":"789","line":43,"column":22,"nodeType":"694","messageId":"695","endLine":43,"endColumn":35},{"ruleId":"692","severity":1,"message":"790","line":44,"column":10,"nodeType":"694","messageId":"695","endLine":44,"endColumn":15},{"ruleId":"692","severity":1,"message":"791","line":44,"column":17,"nodeType":"694","messageId":"695","endLine":44,"endColumn":25},{"ruleId":"692","severity":1,"message":"792","line":45,"column":10,"nodeType":"694","messageId":"695","endLine":45,"endColumn":21},{"ruleId":"692","severity":1,"message":"793","line":45,"column":23,"nodeType":"694","messageId":"695","endLine":45,"endColumn":37},{"ruleId":"692","severity":1,"message":"752","line":46,"column":10,"nodeType":"694","messageId":"695","endLine":46,"endColumn":15},{"ruleId":"692","severity":1,"message":"753","line":46,"column":17,"nodeType":"694","messageId":"695","endLine":46,"endColumn":25},{"ruleId":"692","severity":1,"message":"794","line":47,"column":10,"nodeType":"694","messageId":"695","endLine":47,"endColumn":24},{"ruleId":"692","severity":1,"message":"795","line":47,"column":26,"nodeType":"694","messageId":"695","endLine":47,"endColumn":43},{"ruleId":"692","severity":1,"message":"796","line":48,"column":10,"nodeType":"694","messageId":"695","endLine":48,"endColumn":15},{"ruleId":"692","severity":1,"message":"797","line":49,"column":10,"nodeType":"694","messageId":"695","endLine":49,"endColumn":18},{"ruleId":"692","severity":1,"message":"798","line":49,"column":20,"nodeType":"694","messageId":"695","endLine":49,"endColumn":31},{"ruleId":"692","severity":1,"message":"799","line":50,"column":10,"nodeType":"694","messageId":"695","endLine":50,"endColumn":16},{"ruleId":"692","severity":1,"message":"800","line":50,"column":18,"nodeType":"694","messageId":"695","endLine":50,"endColumn":27},{"ruleId":"692","severity":1,"message":"801","line":51,"column":10,"nodeType":"694","messageId":"695","endLine":51,"endColumn":19},{"ruleId":"710","severity":1,"message":"802","line":103,"column":6,"nodeType":"712","endLine":103,"endColumn":65,"suggestions":"803"},{"ruleId":"692","severity":1,"message":"804","line":105,"column":9,"nodeType":"694","messageId":"695","endLine":105,"endColumn":26},{"ruleId":"710","severity":1,"message":"805","line":60,"column":6,"nodeType":"712","endLine":60,"endColumn":59,"suggestions":"806"},{"ruleId":"692","severity":1,"message":"699","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":8},{"ruleId":"692","severity":1,"message":"758","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":14},{"ruleId":"692","severity":1,"message":"722","line":11,"column":3,"nodeType":"694","messageId":"695","endLine":11,"endColumn":6},{"ruleId":"692","severity":1,"message":"729","line":14,"column":10,"nodeType":"694","messageId":"695","endLine":14,"endColumn":14},{"ruleId":"692","severity":1,"message":"807","line":19,"column":3,"nodeType":"694","messageId":"695","endLine":19,"endColumn":12},{"ruleId":"692","severity":1,"message":"808","line":20,"column":3,"nodeType":"694","messageId":"695","endLine":20,"endColumn":13},{"ruleId":"692","severity":1,"message":"809","line":21,"column":3,"nodeType":"694","messageId":"695","endLine":21,"endColumn":19},{"ruleId":"692","severity":1,"message":"810","line":22,"column":3,"nodeType":"694","messageId":"695","endLine":22,"endColumn":20},{"ruleId":"692","severity":1,"message":"811","line":23,"column":3,"nodeType":"694","messageId":"695","endLine":23,"endColumn":18},{"ruleId":"692","severity":1,"message":"812","line":24,"column":3,"nodeType":"694","messageId":"695","endLine":24,"endColumn":18},{"ruleId":"692","severity":1,"message":"813","line":27,"column":10,"nodeType":"694","messageId":"695","endLine":27,"endColumn":23},{"ruleId":"692","severity":1,"message":"814","line":27,"column":25,"nodeType":"694","messageId":"695","endLine":27,"endColumn":37},{"ruleId":"692","severity":1,"message":"763","line":34,"column":8,"nodeType":"694","messageId":"695","endLine":34,"endColumn":21},{"ruleId":"692","severity":1,"message":"815","line":58,"column":14,"nodeType":"694","messageId":"695","endLine":58,"endColumn":29},{"ruleId":"692","severity":1,"message":"816","line":59,"column":12,"nodeType":"694","messageId":"695","endLine":59,"endColumn":25},{"ruleId":"692","severity":1,"message":"699","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":8},{"ruleId":"692","severity":1,"message":"758","line":10,"column":3,"nodeType":"694","messageId":"695","endLine":10,"endColumn":14},{"ruleId":"692","severity":1,"message":"722","line":11,"column":3,"nodeType":"694","messageId":"695","endLine":11,"endColumn":6},{"ruleId":"692","severity":1,"message":"807","line":19,"column":3,"nodeType":"694","messageId":"695","endLine":19,"endColumn":12},{"ruleId":"692","severity":1,"message":"808","line":20,"column":3,"nodeType":"694","messageId":"695","endLine":20,"endColumn":13},{"ruleId":"692","severity":1,"message":"809","line":21,"column":3,"nodeType":"694","messageId":"695","endLine":21,"endColumn":19},{"ruleId":"692","severity":1,"message":"810","line":22,"column":3,"nodeType":"694","messageId":"695","endLine":22,"endColumn":20},{"ruleId":"692","severity":1,"message":"811","line":23,"column":3,"nodeType":"694","messageId":"695","endLine":23,"endColumn":18},{"ruleId":"692","severity":1,"message":"812","line":24,"column":3,"nodeType":"694","messageId":"695","endLine":24,"endColumn":18},{"ruleId":"692","severity":1,"message":"813","line":27,"column":10,"nodeType":"694","messageId":"695","endLine":27,"endColumn":23},{"ruleId":"692","severity":1,"message":"814","line":27,"column":25,"nodeType":"694","messageId":"695","endLine":27,"endColumn":37},{"ruleId":"692","severity":1,"message":"763","line":34,"column":8,"nodeType":"694","messageId":"695","endLine":34,"endColumn":21},{"ruleId":"710","severity":1,"message":"817","line":79,"column":6,"nodeType":"712","endLine":86,"endColumn":4,"suggestions":"818"},{"ruleId":"692","severity":1,"message":"819","line":25,"column":23,"nodeType":"694","messageId":"695","endLine":25,"endColumn":35},{"ruleId":"692","severity":1,"message":"726","line":22,"column":10,"nodeType":"694","messageId":"695","endLine":22,"endColumn":23},{"ruleId":"692","severity":1,"message":"820","line":48,"column":14,"nodeType":"694","messageId":"695","endLine":48,"endColumn":37},{"ruleId":"692","severity":1,"message":"821","line":49,"column":12,"nodeType":"694","messageId":"695","endLine":49,"endColumn":33},{"ruleId":"692","severity":1,"message":"822","line":56,"column":14,"nodeType":"694","messageId":"695","endLine":56,"endColumn":39},{"ruleId":"692","severity":1,"message":"823","line":57,"column":12,"nodeType":"694","messageId":"695","endLine":57,"endColumn":35},{"ruleId":"692","severity":1,"message":"824","line":59,"column":19,"nodeType":"694","messageId":"695","endLine":59,"endColumn":38},{"ruleId":"710","severity":1,"message":"825","line":92,"column":6,"nodeType":"712","endLine":102,"endColumn":4,"suggestions":"826"},{"ruleId":"692","severity":1,"message":"726","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":23},{"ruleId":"692","severity":1,"message":"744","line":3,"column":10,"nodeType":"694","messageId":"695","endLine":3,"endColumn":15},{"ruleId":"692","severity":1,"message":"698","line":3,"column":17,"nodeType":"694","messageId":"695","endLine":3,"endColumn":23},{"ruleId":"692","severity":1,"message":"751","line":3,"column":41,"nodeType":"694","messageId":"695","endLine":3,"endColumn":45},{"ruleId":"692","severity":1,"message":"745","line":5,"column":10,"nodeType":"694","messageId":"695","endLine":5,"endColumn":21},{"ruleId":"692","severity":1,"message":"746","line":5,"column":23,"nodeType":"694","messageId":"695","endLine":5,"endColumn":34},{"ruleId":"692","severity":1,"message":"747","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":15},{"ruleId":"692","severity":1,"message":"748","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":14},{"ruleId":"692","severity":1,"message":"726","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":23},{"ruleId":"692","severity":1,"message":"827","line":48,"column":14,"nodeType":"694","messageId":"695","endLine":48,"endColumn":32},{"ruleId":"692","severity":1,"message":"828","line":49,"column":12,"nodeType":"694","messageId":"695","endLine":49,"endColumn":28},{"ruleId":"692","severity":1,"message":"829","line":56,"column":14,"nodeType":"694","messageId":"695","endLine":56,"endColumn":34},{"ruleId":"692","severity":1,"message":"830","line":57,"column":12,"nodeType":"694","messageId":"695","endLine":57,"endColumn":30},{"ruleId":"692","severity":1,"message":"831","line":59,"column":14,"nodeType":"694","messageId":"695","endLine":59,"endColumn":28},{"ruleId":"710","severity":1,"message":"832","line":89,"column":6,"nodeType":"712","endLine":98,"endColumn":4,"suggestions":"833"},{"ruleId":"692","severity":1,"message":"726","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":23},{"ruleId":"692","severity":1,"message":"744","line":3,"column":10,"nodeType":"694","messageId":"695","endLine":3,"endColumn":15},{"ruleId":"692","severity":1,"message":"698","line":3,"column":17,"nodeType":"694","messageId":"695","endLine":3,"endColumn":23},{"ruleId":"692","severity":1,"message":"751","line":3,"column":41,"nodeType":"694","messageId":"695","endLine":3,"endColumn":45},{"ruleId":"692","severity":1,"message":"745","line":5,"column":10,"nodeType":"694","messageId":"695","endLine":5,"endColumn":21},{"ruleId":"692","severity":1,"message":"746","line":5,"column":23,"nodeType":"694","messageId":"695","endLine":5,"endColumn":34},{"ruleId":"692","severity":1,"message":"747","line":8,"column":8,"nodeType":"694","messageId":"695","endLine":8,"endColumn":15},{"ruleId":"692","severity":1,"message":"748","line":9,"column":8,"nodeType":"694","messageId":"695","endLine":9,"endColumn":14},{"ruleId":"692","severity":1,"message":"763","line":6,"column":8,"nodeType":"694","messageId":"695","endLine":6,"endColumn":21},{"ruleId":"710","severity":1,"message":"834","line":60,"column":6,"nodeType":"712","endLine":60,"endColumn":41,"suggestions":"835"},{"ruleId":"692","severity":1,"message":"743","line":1,"column":17,"nodeType":"694","messageId":"695","endLine":1,"endColumn":26},{"ruleId":"692","severity":1,"message":"706","line":4,"column":13,"nodeType":"694","messageId":"695","endLine":4,"endColumn":14},{"ruleId":"692","severity":1,"message":"718","line":10,"column":10,"nodeType":"694","messageId":"695","endLine":10,"endColumn":35},{"ruleId":"692","severity":1,"message":"836","line":11,"column":8,"nodeType":"694","messageId":"695","endLine":11,"endColumn":12},{"ruleId":"692","severity":1,"message":"743","line":1,"column":17,"nodeType":"694","messageId":"695","endLine":1,"endColumn":26},{"ruleId":"692","severity":1,"message":"706","line":4,"column":13,"nodeType":"694","messageId":"695","endLine":4,"endColumn":14},{"ruleId":"692","severity":1,"message":"837","line":9,"column":10,"nodeType":"694","messageId":"695","endLine":9,"endColumn":23},{"ruleId":"692","severity":1,"message":"718","line":10,"column":10,"nodeType":"694","messageId":"695","endLine":10,"endColumn":35},{"ruleId":"692","severity":1,"message":"836","line":11,"column":8,"nodeType":"694","messageId":"695","endLine":11,"endColumn":12},{"ruleId":"692","severity":1,"message":"838","line":14,"column":3,"nodeType":"694","messageId":"695","endLine":14,"endColumn":19},{"ruleId":"692","severity":1,"message":"839","line":15,"column":3,"nodeType":"694","messageId":"695","endLine":15,"endColumn":22},{"ruleId":"692","severity":1,"message":"840","line":16,"column":3,"nodeType":"694","messageId":"695","endLine":16,"endColumn":22},{"ruleId":"692","severity":1,"message":"841","line":17,"column":3,"nodeType":"694","messageId":"695","endLine":17,"endColumn":22},{"ruleId":"692","severity":1,"message":"842","line":18,"column":3,"nodeType":"694","messageId":"695","endLine":18,"endColumn":25},{"ruleId":"692","severity":1,"message":"843","line":19,"column":3,"nodeType":"694","messageId":"695","endLine":19,"endColumn":25},{"ruleId":"692","severity":1,"message":"844","line":20,"column":3,"nodeType":"694","messageId":"695","endLine":20,"endColumn":19},{"ruleId":"692","severity":1,"message":"845","line":21,"column":3,"nodeType":"694","messageId":"695","endLine":21,"endColumn":22},{"ruleId":"692","severity":1,"message":"846","line":22,"column":3,"nodeType":"694","messageId":"695","endLine":22,"endColumn":22},{"ruleId":"692","severity":1,"message":"847","line":23,"column":3,"nodeType":"694","messageId":"695","endLine":23,"endColumn":28},{"ruleId":"692","severity":1,"message":"848","line":24,"column":3,"nodeType":"694","messageId":"695","endLine":24,"endColumn":31},{"ruleId":"692","severity":1,"message":"849","line":25,"column":3,"nodeType":"694","messageId":"695","endLine":25,"endColumn":31},{"ruleId":"692","severity":1,"message":"762","line":2,"column":10,"nodeType":"694","messageId":"695","endLine":2,"endColumn":18},{"ruleId":"692","severity":1,"message":"751","line":6,"column":3,"nodeType":"694","messageId":"695","endLine":6,"endColumn":7},{"ruleId":"692","severity":1,"message":"698","line":7,"column":3,"nodeType":"694","messageId":"695","endLine":7,"endColumn":9},{"ruleId":"692","severity":1,"message":"699","line":12,"column":3,"nodeType":"694","messageId":"695","endLine":12,"endColumn":8},{"ruleId":"692","severity":1,"message":"763","line":15,"column":8,"nodeType":"694","messageId":"695","endLine":15,"endColumn":21},{"ruleId":"692","severity":1,"message":"850","line":17,"column":3,"nodeType":"694","messageId":"695","endLine":17,"endColumn":14},{"ruleId":"692","severity":1,"message":"851","line":18,"column":3,"nodeType":"694","messageId":"695","endLine":18,"endColumn":24},{"ruleId":"692","severity":1,"message":"714","line":19,"column":3,"nodeType":"694","messageId":"695","endLine":19,"endColumn":17},{"ruleId":"692","severity":1,"message":"764","line":21,"column":3,"nodeType":"694","messageId":"695","endLine":21,"endColumn":13},{"ruleId":"692","severity":1,"message":"852","line":24,"column":3,"nodeType":"694","messageId":"695","endLine":24,"endColumn":21},{"ruleId":"692","severity":1,"message":"765","line":25,"column":3,"nodeType":"694","messageId":"695","endLine":25,"endColumn":20},{"ruleId":"692","severity":1,"message":"853","line":31,"column":9,"nodeType":"694","messageId":"695","endLine":31,"endColumn":18},{"ruleId":"692","severity":1,"message":"766","line":33,"column":10,"nodeType":"694","messageId":"695","endLine":33,"endColumn":19},{"ruleId":"692","severity":1,"message":"767","line":33,"column":21,"nodeType":"694","messageId":"695","endLine":33,"endColumn":33},{"ruleId":"692","severity":1,"message":"768","line":34,"column":10,"nodeType":"694","messageId":"695","endLine":34,"endColumn":15},{"ruleId":"692","severity":1,"message":"769","line":34,"column":17,"nodeType":"694","messageId":"695","endLine":34,"endColumn":25},{"ruleId":"692","severity":1,"message":"770","line":35,"column":10,"nodeType":"694","messageId":"695","endLine":35,"endColumn":18},{"ruleId":"692","severity":1,"message":"771","line":35,"column":20,"nodeType":"694","messageId":"695","endLine":35,"endColumn":31},{"ruleId":"692","severity":1,"message":"772","line":36,"column":10,"nodeType":"694","messageId":"695","endLine":36,"endColumn":18},{"ruleId":"692","severity":1,"message":"773","line":36,"column":20,"nodeType":"694","messageId":"695","endLine":36,"endColumn":31},{"ruleId":"692","severity":1,"message":"774","line":37,"column":10,"nodeType":"694","messageId":"695","endLine":37,"endColumn":18},{"ruleId":"692","severity":1,"message":"775","line":37,"column":20,"nodeType":"694","messageId":"695","endLine":37,"endColumn":31},{"ruleId":"692","severity":1,"message":"776","line":38,"column":10,"nodeType":"694","messageId":"695","endLine":38,"endColumn":14},{"ruleId":"692","severity":1,"message":"777","line":38,"column":16,"nodeType":"694","messageId":"695","endLine":38,"endColumn":23},{"ruleId":"692","severity":1,"message":"778","line":39,"column":10,"nodeType":"694","messageId":"695","endLine":39,"endColumn":15},{"ruleId":"692","severity":1,"message":"779","line":39,"column":17,"nodeType":"694","messageId":"695","endLine":39,"endColumn":25},{"ruleId":"692","severity":1,"message":"780","line":40,"column":10,"nodeType":"694","messageId":"695","endLine":40,"endColumn":17},{"ruleId":"692","severity":1,"message":"781","line":40,"column":19,"nodeType":"694","messageId":"695","endLine":40,"endColumn":29},{"ruleId":"692","severity":1,"message":"782","line":41,"column":10,"nodeType":"694","messageId":"695","endLine":41,"endColumn":22},{"ruleId":"692","severity":1,"message":"783","line":41,"column":24,"nodeType":"694","messageId":"695","endLine":41,"endColumn":39},{"ruleId":"692","severity":1,"message":"784","line":42,"column":10,"nodeType":"694","messageId":"695","endLine":42,"endColumn":24},{"ruleId":"692","severity":1,"message":"785","line":42,"column":26,"nodeType":"694","messageId":"695","endLine":42,"endColumn":43},{"ruleId":"692","severity":1,"message":"786","line":43,"column":10,"nodeType":"694","messageId":"695","endLine":43,"endColumn":16},{"ruleId":"692","severity":1,"message":"787","line":43,"column":18,"nodeType":"694","messageId":"695","endLine":43,"endColumn":27},{"ruleId":"692","severity":1,"message":"788","line":44,"column":10,"nodeType":"694","messageId":"695","endLine":44,"endColumn":20},{"ruleId":"692","severity":1,"message":"789","line":44,"column":22,"nodeType":"694","messageId":"695","endLine":44,"endColumn":35},{"ruleId":"692","severity":1,"message":"790","line":45,"column":10,"nodeType":"694","messageId":"695","endLine":45,"endColumn":15},{"ruleId":"692","severity":1,"message":"791","line":45,"column":17,"nodeType":"694","messageId":"695","endLine":45,"endColumn":25},{"ruleId":"692","severity":1,"message":"792","line":46,"column":10,"nodeType":"694","messageId":"695","endLine":46,"endColumn":21},{"ruleId":"692","severity":1,"message":"793","line":46,"column":23,"nodeType":"694","messageId":"695","endLine":46,"endColumn":37},{"ruleId":"692","severity":1,"message":"752","line":47,"column":10,"nodeType":"694","messageId":"695","endLine":47,"endColumn":15},{"ruleId":"692","severity":1,"message":"753","line":47,"column":17,"nodeType":"694","messageId":"695","endLine":47,"endColumn":25},{"ruleId":"692","severity":1,"message":"794","line":48,"column":10,"nodeType":"694","messageId":"695","endLine":48,"endColumn":24},{"ruleId":"692","severity":1,"message":"795","line":48,"column":26,"nodeType":"694","messageId":"695","endLine":48,"endColumn":43},{"ruleId":"692","severity":1,"message":"796","line":49,"column":10,"nodeType":"694","messageId":"695","endLine":49,"endColumn":15},{"ruleId":"692","severity":1,"message":"797","line":50,"column":10,"nodeType":"694","messageId":"695","endLine":50,"endColumn":18},{"ruleId":"692","severity":1,"message":"798","line":50,"column":20,"nodeType":"694","messageId":"695","endLine":50,"endColumn":31},{"ruleId":"692","severity":1,"message":"799","line":51,"column":10,"nodeType":"694","messageId":"695","endLine":51,"endColumn":16},{"ruleId":"692","severity":1,"message":"800","line":51,"column":18,"nodeType":"694","messageId":"695","endLine":51,"endColumn":27},{"ruleId":"692","severity":1,"message":"801","line":52,"column":10,"nodeType":"694","messageId":"695","endLine":52,"endColumn":19},{"ruleId":"692","severity":1,"message":"804","line":70,"column":9,"nodeType":"694","messageId":"695","endLine":70,"endColumn":26},"no-native-reassign",["854"],"no-negated-in-lhs",["855"],"no-unused-vars","'DashboardScreen' is defined but never used.","Identifier","unusedVar","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["854"],["855"],"'S' is defined but never used.","'verifyUserEmail' is defined but never used.","'USER_VERIFY_EMAIL_RESEND_RESET' is defined but never used.","'veResendLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'email', and 'password'. Either include them or remove the dependency array.","ArrayExpression",["856"],"'getUserDetails' is defined but never used.","'CardDeck' is defined but never used.","'USER_LOGIN_RESET' is defined but never used.","'USER_EMAIL_VERIFY_RESET' is defined but never used.","'USER_PASSWORD_RESET_RESET' is defined but never used.","'USER_PAYMENT_DETAILS_RESET' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'Routes' is defined but never used.",["854"],["855"],"'LinkContainer' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Link' is defined but never used.","'PaymentDropdown' is defined but never used.","'DatePicker' is defined but never used.","'userLoading' is assigned a value but never used.","'userError' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'paymentTypeName', 'payments', and 'user.status'. Either include them or remove the dependency array.",["857"],"'duesHandler' is assigned a value but never used.","'USER_PAY_RESET' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'donateResulte', 'donations', 'user.firstName', 'user.lastName', 'user.mInit', and 'user.primaryEmail'. Either include them or remove the dependency array.",["858"],"'useEffect' is defined but never used.","'Table' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","Expected '===' and instead saw '=='.","'Alert' is defined but never used.","'Form' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'success'. Either include them or remove the dependency array.",["859"],"'submitHandler' is assigned a value but never used.","'React' is defined but never used.","'CardColumns' is defined but never used.","'USER_PENDING_LIST_RESET' is defined but never used.","'chapters' is assigned a value but never used.","'deleteChapterHandler' is assigned a value but never used.","'Document' is defined but never used.","'FormContainer' is defined but never used.","'updateUser' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","'firstName' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'mInit' is assigned a value but never used.","'setMInit' is assigned a value but never used.","'lastName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'address1' is assigned a value but never used.","'setAddress1' is assigned a value but never used.","'address2' is assigned a value but never used.","'setAddress2' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'zipcode' is assigned a value but never used.","'setZipcode' is assigned a value but never used.","'primaryPhone' is assigned a value but never used.","'setPrimaryPhone' is assigned a value but never used.","'alternatePhone' is assigned a value but never used.","'setAlternatePhone' is assigned a value but never used.","'degree' is assigned a value but never used.","'setDegree' is assigned a value but never used.","'degreeYear' is assigned a value but never used.","'setDegreeYear' is assigned a value but never used.","'major' is assigned a value but never used.","'setMajor' is assigned a value but never used.","'collegeName' is assigned a value but never used.","'setCollegeName' is assigned a value but never used.","'alternateEmail' is assigned a value but never used.","'setAlternateEmail' is assigned a value but never used.","'image' is assigned a value but never used.","'userRole' is assigned a value but never used.","'setUserRole' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'uploading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["860"],"'uploadFileHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addChapter'. Either include it or remove the dependency array. You can also do a functional update 'setAddChapter(a => ...)' if you only need 'addChapter' in the 'setAddChapter' call.",["861"],"'listUsers' is defined but never used.","'deleteUser' is defined but never used.","'listPendingUsers' is defined but never used.","'deletePendingUser' is defined but never used.","'createAdminUser' is defined but never used.","'deleteAdminUser' is defined but never used.","'deleteChapter' is defined but never used.","'listChapters' is defined but never used.","'registerLoading' is assigned a value but never used.","'registerError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addPaymentType'. Either include it or remove the dependency array. You can also do a functional update 'setAddPaymentType(a => ...)' if you only need 'addPaymentType' in the 'setAddPaymentType' call.",["862"],"'selectedYear' is assigned a value but never used.","'announcementByIdLoading' is assigned a value but never used.","'announcementByIdError' is assigned a value but never used.","'announcementUpdateLoading' is assigned a value but never used.","'announcementUpdateError' is assigned a value but never used.","'announcementUpdated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addAnnouncement'. Either include it or remove the dependency array.",["863"],"'missionByIdLoading' is assigned a value but never used.","'missionByIdError' is assigned a value but never used.","'missionUpdateLoading' is assigned a value but never used.","'missionUpdateError' is assigned a value but never used.","'missionUpdated' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addMission', 'mission.body', 'mission.chapterId', and 'mission.title'. Either include them or remove the dependency array. You can also do a functional update 'setAddMission(a => ...)' if you only need 'addMission' in the 'setAddMission' call.",["864"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["865"],"'swal' is defined but never used.","'passwordReset' is defined but never used.","'VISSION_ALL_FAIL' is defined but never used.","'VISSION_ALL_REQUEST' is defined but never used.","'VISSION_ALL_SUCCESS' is defined but never used.","'VISSION_DELETE_FAIL' is defined but never used.","'VISSION_DELETE_REQUEST' is defined but never used.","'VISSION_DELETE_SUCCESS' is defined but never used.","'VISSION_NEW_FAIL' is defined but never used.","'VISSION_NEW_REQUEST' is defined but never used.","'VISSION_NEW_SUCCESS' is defined but never used.","'VISSION_UPDATE_BY_ID_FAIL' is defined but never used.","'VISSION_UPDATE_BY_ID_REQUEST' is defined but never used.","'VISSION_UPDATE_BY_ID_SUCCESS' is defined but never used.","'approveUser' is defined but never used.","'getPendingUserDetails' is defined but never used.","'USER_APPROVE_RESET' is defined but never used.","'pendingId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"866","fix":"867"},{"desc":"868","fix":"869"},{"desc":"870","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},"Update the dependencies array to be: [history, userInfo, success, redirect, errorLogin, veResendError, dispatch, email, password]",{"range":"886","text":"887"},"Update the dependencies array to be: [history, dispatch, userInfo, successPay, errorPay, paymentTypeName, user.status, payments]",{"range":"888","text":"889"},"Update the dependencies array to be: [history, dispatch, userInfo, addDonation, successDonate, donations, user.firstName, user.mInit, user.lastName, user.primaryEmail, donateResulte]",{"range":"890","text":"891"},"Update the dependencies array to be: [history, hash, error, redirect, dispatch, success]",{"range":"892","text":"893"},"Update the dependencies array to be: [dispatch, history, pendingUser, pendingId, successApprove, userInfo]",{"range":"894","text":"895"},"Update the dependencies array to be: [dispatch, history, userInfo, success, successDelete, addChapter]",{"range":"896","text":"897"},"Update the dependencies array to be: [dispatch, history, userInfo, successPaymentTypeDelete, success, addPaymentType]",{"range":"898","text":"899"},"Update the dependencies array to be: [dispatch, history, userInfo, success, announcementByIdSuccess, announcement, announcementUpdateSuccess, successDelete, addAnnouncement]",{"range":"900","text":"901"},"Update the dependencies array to be: [dispatch, history, userInfo, success, missionByIdSuccess, missionUpdateSuccess, successDelete, addMission, mission.title, mission.body, mission.chapterId]",{"range":"902","text":"903"},"Update the dependencies array to be: [history, success, redirect, error, dispatch]",{"range":"904","text":"905"},[3040,3105],"[history, userInfo, success, redirect, errorLogin, veResendError, dispatch, email, password]",[4035,4182],"[history, dispatch, userInfo, successPay, errorPay, paymentTypeName, user.status, payments]",[3492,3549],"[history, dispatch, userInfo, addDonation, successDonate, donations, user.firstName, user.mInit, user.lastName, user.primaryEmail, donateResulte]",[1597,1629],"[history, hash, error, redirect, dispatch, success]",[3656,3715],"[dispatch, history, pendingUser, pendingId, successApprove, userInfo]",[1991,2044],"[dispatch, history, userInfo, success, successDelete, addChapter]",[2444,2561],"[dispatch, history, userInfo, successPaymentTypeDelete, success, addPaymentType]",[3050,3240],"[dispatch, history, userInfo, success, announcementByIdSuccess, announcement, announcementUpdateSuccess, successDelete, addAnnouncement]",[2720,2874],"[dispatch, history, userInfo, success, missionByIdSuccess, missionUpdateSuccess, successDelete, addMission, mission.title, mission.body, mission.chapterId]",[2314,2349],"[history, success, redirect, error, dispatch]"]