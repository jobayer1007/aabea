[{"F:\\aabea\\project\\aabea\\frontend\\src\\index.js":"1","F:\\aabea\\project\\aabea\\frontend\\src\\store.js":"2","F:\\aabea\\project\\aabea\\frontend\\src\\App.js":"3","F:\\aabea\\project\\aabea\\frontend\\src\\reportWebVitals.js":"4","F:\\aabea\\project\\aabea\\frontend\\src\\reducers\\userReducers.js":"5","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\DashboardScreen.js":"6","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Footer.js":"7","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\HomeScreen.js":"8","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Header.js":"9","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\LoginScreen.js":"10","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserListScreen.js":"11","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\RegisterScreen.js":"12","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserEditScreen.js":"13","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Message.js":"14","F:\\aabea\\project\\aabea\\frontend\\src\\components\\FormContainer.js":"15","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Loader.js":"16","F:\\aabea\\project\\aabea\\frontend\\src\\constants\\userConstants.js":"17","F:\\aabea\\project\\aabea\\frontend\\src\\actions\\userActions.js":"18","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\index.js":"19","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\store.js":"20","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reportWebVitals.js":"21","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.js":"22","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\LoginScreen.js":"23","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Footer.js":"24","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserEditScreen.js":"25","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserListScreen.js":"26","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\userReducers.js":"27","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Message.js":"28","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\FormContainer.js":"29","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Loader.js":"30","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\userActions.js":"31","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\userConstants.js":"32","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HomeScreen\\HomeScreen.js":"33","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.styles.js":"34","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar.js":"35","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar\\Sidebar.js":"36","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.js":"37","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.styles.js":"38","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.Styles.js":"39","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.js":"40","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonateScreen\\DonateScreen.js":"41","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\TrainingScreen\\TrainingScreen.js":"42","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteesScreen.js":"43","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\Routes.js":"44","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.js":"45","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.Styles.js":"46","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.js":"47","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.Styles.js":"48","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.js":"49","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\EmailActivationScreen.js":"50","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\Section.js":"51","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\PageTitle.js":"52","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\[hash].js":"53","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\chapterReducers.js":"54","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\chapterConstants.js":"55","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.js":"56","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.Styles.js":"57","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\chapterActions.js":"58","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserPendingApproveScreen\\UserPendingApproveScreen.js":"59","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\paymentTypeReducers.js":"60","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\paymentTypeConstants.js":"61","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.js":"62","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.Styles.js":"63","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.js":"64","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.Styles.js":"65","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\paymentTypeActions.js":"66","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.js":"67","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.Styles.js":"68","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\PaymentDropdown.js":"69","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\DatePicker.js":"70","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.js":"71","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.Styles.js":"72","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.js":"73","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.js":"74","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.js":"75","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.Styles.js":"76","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.Styles.js":"77","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.Styles.js":"78","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegisterScreen.js":"79","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.js":"80","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.Styles.js":"81","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.js":"82","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.Styles.js":"83","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\vissionReducers.js":"84","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\announcementReducers.js":"85","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\missionReducers.js":"86","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\historyReducers.js":"87","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\historyConstants.js":"88","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\vissionConstants.js":"89","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\missionConstants.js":"90","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\announcementConstants.js":"91","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\announcementAction.js":"92","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\missionActions.js":"93","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js":"94","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\vissionActions.js":"95","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\historyActions.js":"96","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\imageReducers.js":"97","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\imageConstants.js":"98","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.js":"99","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.Styles.js":"100","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\imageActions.js":"101","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.js":"102","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.Styles.js":"103","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\ImageCarousel.js":"104","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\HeaderCarousel.js":"105","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\committeeReducers.js":"106","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\committeeConstants.js":"107","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeScreen.Styles.js":"108","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\committeeActions.js":"109","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MemberColumns.js":"110","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\GlobalFilter.js":"111","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\ColumnFilter.js":"112","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\RTable.js":"113","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\CheckBox.js":"114","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\SearchBar\\SearchBar.js":"115","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\Announcement.js":"116","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\Mission.js":"117","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\Vission.js":"118","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\History.js":"119","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\PauseOnHover.js":"120","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\EditProfileScreen.js":"121","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeMemberScreens.js":"122","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AboutScreen\\About.js":"123","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventScreen.js":"124","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SettingScreen\\SettingScreen.js":"125","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\eventReducers.js":"126","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\eventConstants.js":"127","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\eventActions.js":"128","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventNewScreen.js":"129","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventByIdScreen.js":"130","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventRegistrationScreen.js":"131","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailScreen\\EmailScreen.js":"132","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\emailReducers.js":"133","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\emailConstants.js":"134","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\emailActions.js":"135","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\categoryReducers.js":"136","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\blogReducers.js":"137","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\categoryConstants.js":"138","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\blogConstants.js":"139","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\commentReducers.js":"140","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\replyReducers.js":"141","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\replyConstants.js":"142","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\commentConstants.js":"143","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreen.js":"144","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\CreateBlogScreen.js":"145","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\blogAction.js":"146","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreenById.js":"147"},{"size":597,"mtime":1611348613797,"results":"148","hashOfConfig":"149"},{"size":1051,"mtime":1611373294914,"results":"150","hashOfConfig":"149"},{"size":1137,"mtime":1611775129043,"results":"151","hashOfConfig":"149"},{"size":362,"mtime":499162500000,"results":"152","hashOfConfig":"149"},{"size":3625,"mtime":1611434427903,"results":"153","hashOfConfig":"149"},{"size":1045,"mtime":1611775040016,"results":"154","hashOfConfig":"149"},{"size":446,"mtime":1611772949677,"results":"155","hashOfConfig":"149"},{"size":5147,"mtime":1611261050924,"results":"156","hashOfConfig":"149"},{"size":4289,"mtime":1611443754148,"results":"157","hashOfConfig":"149"},{"size":2277,"mtime":1611444019672,"results":"158","hashOfConfig":"149"},{"size":4113,"mtime":1611859105296,"results":"159","hashOfConfig":"149"},{"size":3340,"mtime":1611847398274,"results":"160","hashOfConfig":"149"},{"size":4701,"mtime":1611851104005,"results":"161","hashOfConfig":"149"},{"size":256,"mtime":1603458280349,"results":"162","hashOfConfig":"149"},{"size":352,"mtime":1611368948725,"results":"163","hashOfConfig":"149"},{"size":410,"mtime":1603387806125,"results":"164","hashOfConfig":"149"},{"size":1593,"mtime":1611432914339,"results":"165","hashOfConfig":"149"},{"size":6154,"mtime":1611460368070,"results":"166","hashOfConfig":"149"},{"size":685,"mtime":1617949234743,"results":"167","hashOfConfig":"168"},{"size":7389,"mtime":1621581052127,"results":"169","hashOfConfig":"168"},{"size":362,"mtime":499162500000,"results":"170","hashOfConfig":"168"},{"size":6076,"mtime":1621618094099,"results":"171","hashOfConfig":"168"},{"size":5425,"mtime":1617991839340,"results":"172","hashOfConfig":"168"},{"size":467,"mtime":1613297424983,"results":"173","hashOfConfig":"168"},{"size":24805,"mtime":1617989812557,"results":"174","hashOfConfig":"168"},{"size":5844,"mtime":1616921399755,"results":"175","hashOfConfig":"168"},{"size":12715,"mtime":1617986899689,"results":"176","hashOfConfig":"168"},{"size":256,"mtime":1603458280349,"results":"177","hashOfConfig":"168"},{"size":349,"mtime":1614383733812,"results":"178","hashOfConfig":"168"},{"size":410,"mtime":1603387806125,"results":"179","hashOfConfig":"168"},{"size":20768,"mtime":1617962677196,"results":"180","hashOfConfig":"168"},{"size":5875,"mtime":1617960362045,"results":"181","hashOfConfig":"168"},{"size":9628,"mtime":1619989210385,"results":"182","hashOfConfig":"168"},{"size":191,"mtime":1613507729017,"results":"183","hashOfConfig":"168"},{"size":2400,"mtime":1613352800838,"results":"184","hashOfConfig":"185"},{"size":7566,"mtime":1620076668626,"results":"186","hashOfConfig":"168"},{"size":245,"mtime":1613615151045,"results":"187","hashOfConfig":"168"},{"size":330,"mtime":1613515675147,"results":"188","hashOfConfig":"168"},{"size":272,"mtime":1616638090353,"results":"189","hashOfConfig":"168"},{"size":11783,"mtime":1619984400448,"results":"190","hashOfConfig":"168"},{"size":13915,"mtime":1619952948880,"results":"191","hashOfConfig":"168"},{"size":942,"mtime":1619952049738,"results":"192","hashOfConfig":"168"},{"size":19182,"mtime":1620076164154,"results":"193","hashOfConfig":"168"},{"size":710,"mtime":1613520803905,"results":"194","hashOfConfig":"168"},{"size":301,"mtime":1613524691788,"results":"195","hashOfConfig":"168"},{"size":758,"mtime":1613526042009,"results":"196","hashOfConfig":"168"},{"size":11058,"mtime":1619952632112,"results":"197","hashOfConfig":"168"},{"size":253,"mtime":1613613566640,"results":"198","hashOfConfig":"168"},{"size":4656,"mtime":1621625208938,"results":"199","hashOfConfig":"168"},{"size":2246,"mtime":1616933916003,"results":"200","hashOfConfig":"168"},{"size":156,"mtime":1614366800255,"results":"201","hashOfConfig":"168"},{"size":247,"mtime":1614366889834,"results":"202","hashOfConfig":"168"},{"size":572,"mtime":1616871116897,"results":"203","hashOfConfig":"168"},{"size":3489,"mtime":1620073561621,"results":"204","hashOfConfig":"168"},{"size":2191,"mtime":1620042452104,"results":"205","hashOfConfig":"168"},{"size":18909,"mtime":1616922054100,"results":"206","hashOfConfig":"168"},{"size":253,"mtime":1614899146910,"results":"207","hashOfConfig":"168"},{"size":5810,"mtime":1620069381965,"results":"208","hashOfConfig":"168"},{"size":8127,"mtime":1620075409099,"results":"209","hashOfConfig":"168"},{"size":1752,"mtime":1615078826899,"results":"210","hashOfConfig":"168"},{"size":849,"mtime":1615068453267,"results":"211","hashOfConfig":"168"},{"size":12573,"mtime":1619950645314,"results":"212","hashOfConfig":"168"},{"size":253,"mtime":1615070536282,"results":"213","hashOfConfig":"168"},{"size":10392,"mtime":1615075945664,"results":"214","hashOfConfig":"168"},{"size":253,"mtime":1615071884178,"results":"215","hashOfConfig":"168"},{"size":2989,"mtime":1616569674424,"results":"216","hashOfConfig":"168"},{"size":10376,"mtime":1619951681685,"results":"217","hashOfConfig":"168"},{"size":253,"mtime":1615071884178,"results":"218","hashOfConfig":"168"},{"size":3004,"mtime":1615512010247,"results":"219","hashOfConfig":"168"},{"size":887,"mtime":1616869632151,"results":"220","hashOfConfig":"168"},{"size":11033,"mtime":1620075221007,"results":"221","hashOfConfig":"168"},{"size":253,"mtime":1615630905796,"results":"222","hashOfConfig":"168"},{"size":10971,"mtime":1620075426612,"results":"223","hashOfConfig":"168"},{"size":10577,"mtime":1620075366282,"results":"224","hashOfConfig":"168"},{"size":11206,"mtime":1620075312661,"results":"225","hashOfConfig":"168"},{"size":253,"mtime":1615631295699,"results":"226","hashOfConfig":"168"},{"size":253,"mtime":1615631368581,"results":"227","hashOfConfig":"168"},{"size":253,"mtime":1615631214574,"results":"228","hashOfConfig":"168"},{"size":14975,"mtime":1621612970939,"results":"229","hashOfConfig":"168"},{"size":2774,"mtime":1619631474785,"results":"230","hashOfConfig":"168"},{"size":1118,"mtime":1616218420594,"results":"231","hashOfConfig":"168"},{"size":3243,"mtime":1619631496078,"results":"232","hashOfConfig":"168"},{"size":1118,"mtime":1616241271921,"results":"233","hashOfConfig":"168"},{"size":2566,"mtime":1616809668394,"results":"234","hashOfConfig":"168"},{"size":2886,"mtime":1616801590511,"results":"235","hashOfConfig":"168"},{"size":2633,"mtime":1616805757821,"results":"236","hashOfConfig":"168"},{"size":2639,"mtime":1616869700646,"results":"237","hashOfConfig":"168"},{"size":1134,"mtime":1616809975660,"results":"238","hashOfConfig":"168"},{"size":1134,"mtime":1616807824313,"results":"239","hashOfConfig":"168"},{"size":1134,"mtime":1616805711449,"results":"240","hashOfConfig":"168"},{"size":1323,"mtime":1616801554789,"results":"241","hashOfConfig":"168"},{"size":4477,"mtime":1616798015699,"results":"242","hashOfConfig":"168"},{"size":4146,"mtime":1617826366072,"results":"243","hashOfConfig":"168"},{"size":8602,"mtime":1619956446895,"results":"244","hashOfConfig":"168"},{"size":4136,"mtime":1618742976257,"results":"245","hashOfConfig":"168"},{"size":4136,"mtime":1618743705955,"results":"246","hashOfConfig":"168"},{"size":3109,"mtime":1617938667711,"results":"247","hashOfConfig":"168"},{"size":1578,"mtime":1617835674412,"results":"248","hashOfConfig":"168"},{"size":11313,"mtime":1620075337510,"results":"249","hashOfConfig":"168"},{"size":253,"mtime":1616850764913,"results":"250","hashOfConfig":"168"},{"size":4577,"mtime":1617938371274,"results":"251","hashOfConfig":"168"},{"size":20517,"mtime":1620168955198,"results":"252","hashOfConfig":"168"},{"size":253,"mtime":1616866245541,"results":"253","hashOfConfig":"168"},{"size":1415,"mtime":1619264821050,"results":"254","hashOfConfig":"168"},{"size":1440,"mtime":1617946742196,"results":"255","hashOfConfig":"168"},{"size":2959,"mtime":1617247825521,"results":"256","hashOfConfig":"168"},{"size":1476,"mtime":1617245731939,"results":"257","hashOfConfig":"168"},{"size":253,"mtime":1617247414053,"results":"258","hashOfConfig":"168"},{"size":4503,"mtime":1617278499497,"results":"259","hashOfConfig":"168"},{"size":630,"mtime":1617643672474,"results":"260","hashOfConfig":"168"},{"size":1047,"mtime":1617644439310,"results":"261","hashOfConfig":"168"},{"size":815,"mtime":1617643817124,"results":"262","hashOfConfig":"168"},{"size":5259,"mtime":1617996449836,"results":"263","hashOfConfig":"168"},{"size":416,"mtime":1617650549828,"results":"264","hashOfConfig":"168"},{"size":540,"mtime":1617789293615,"results":"265","hashOfConfig":"168"},{"size":1635,"mtime":1618742479379,"results":"266","hashOfConfig":"168"},{"size":1360,"mtime":1618742710684,"results":"267","hashOfConfig":"168"},{"size":1362,"mtime":1618743205302,"results":"268","hashOfConfig":"168"},{"size":1369,"mtime":1618743605213,"results":"269","hashOfConfig":"168"},{"size":2450,"mtime":1619251829957,"results":"270","hashOfConfig":"168"},{"size":23324,"mtime":1619972876272,"results":"271","hashOfConfig":"168"},{"size":3427,"mtime":1618741962624,"results":"272","hashOfConfig":"168"},{"size":6827,"mtime":1618745781781,"results":"273","hashOfConfig":"168"},{"size":6749,"mtime":1620075288712,"results":"274","hashOfConfig":"168"},{"size":13854,"mtime":1620172076675,"results":"275","hashOfConfig":"168"},{"size":7245,"mtime":1619808527421,"results":"276","hashOfConfig":"168"},{"size":3408,"mtime":1619729476598,"results":"277","hashOfConfig":"168"},{"size":12408,"mtime":1619981014339,"results":"278","hashOfConfig":"168"},{"size":11933,"mtime":1620153088205,"results":"279","hashOfConfig":"168"},{"size":30979,"mtime":1619988850849,"results":"280","hashOfConfig":"168"},{"size":18140,"mtime":1619981042489,"results":"281","hashOfConfig":"168"},{"size":12120,"mtime":1620212697600,"results":"282","hashOfConfig":"168"},{"size":1521,"mtime":1620167952081,"results":"283","hashOfConfig":"168"},{"size":599,"mtime":1620167737024,"results":"284","hashOfConfig":"168"},{"size":2496,"mtime":1620168396373,"results":"285","hashOfConfig":"168"},{"size":2682,"mtime":1621578790045,"results":"286","hashOfConfig":"168"},{"size":2492,"mtime":1621579015605,"results":"287","hashOfConfig":"168"},{"size":1170,"mtime":1621578272445,"results":"288","hashOfConfig":"168"},{"size":1026,"mtime":1621578302612,"results":"289","hashOfConfig":"168"},{"size":1612,"mtime":1621579182513,"results":"290","hashOfConfig":"168"},{"size":1558,"mtime":1621579300285,"results":"291","hashOfConfig":"168"},{"size":673,"mtime":1621578387988,"results":"292","hashOfConfig":"168"},{"size":717,"mtime":1621578348638,"results":"293","hashOfConfig":"168"},{"size":3559,"mtime":1621621118905,"results":"294","hashOfConfig":"168"},{"size":5840,"mtime":1621613060870,"results":"295","hashOfConfig":"168"},{"size":4205,"mtime":1621618511733,"results":"296","hashOfConfig":"168"},{"size":2054,"mtime":1621620129536,"results":"297","hashOfConfig":"168"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},"1shrj8b",{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"300"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"300"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"300"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"300"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},"4o7zxk",{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"341"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l0jjdi",{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"381"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"381"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"341"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"381"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"381"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"381"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"341"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"373"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"341"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"341"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"341"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"341"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"341"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"472"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"341"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"341"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"530"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"541"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"341"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"341"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"341"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"341"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"341"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"341"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"341"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"341"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"341"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627"},"F:\\aabea\\project\\aabea\\frontend\\src\\index.js",[],["628","629"],"F:\\aabea\\project\\aabea\\frontend\\src\\store.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\App.js",["630"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          {/* <Route path='/dashboard' component={DashboardScreen} /> */}\n          <Route path='/dashboard' component={UserListScreen} />\n          <Route path='/users/:id/edit' component={UserEditScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","F:\\aabea\\project\\aabea\\frontend\\src\\reportWebVitals.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\reducers\\userReducers.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\DashboardScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\Footer.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\HomeScreen.js",["631","632","633"],"import React from 'react';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Button,\r\n  Carousel,\r\n} from 'react-bootstrap';\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6} lg={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Announcements</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore\r\n                officiis facilis beatae consequatur reiciendis dicta quia\r\n                voluptatem, ab, voluptatum eligendi ullam libero facere impedit\r\n                molestiae repudiandae ipsa, necessitatibus numquam velit?\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>Events:</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore\r\n                officiis facilis beatae consequatur reiciendis dicta quia\r\n                voluptatem, ab, voluptatum eligendi ullam libero facere impedit\r\n                molestiae repudiandae ipsa, necessitatibus numquam velit?\r\n              </Card.Text>\r\n            </Card.Body>\r\n\r\n            <Card.Body>\r\n              <Card.Link href='#'>Card Link</Card.Link>\r\n              <Card.Link href='#'>Another Link</Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={6}>\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Mission</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Special title treatment</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Vission</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Vission title </Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>History</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>History Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Any other Main Topic</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Topic Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={6} lg={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Quick Links</Card.Title>\r\n              <Card.Link href='#'>Link 1</Card.Link>\r\n              <Card.Link href='#'>Link 2</Card.Link>\r\n              <Card.Link href='#'>Link 3</Card.Link>\r\n              <Card.Link href='#'>Link 4</Card.Link>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>Current Committee:</Card.Title>\r\n\r\n              <Carousel controls={false} indicators={false}>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?building'\r\n                    alt='First slide'\r\n                  />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?nature'\r\n                    alt='Third slide'\r\n                  />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?people'\r\n                    alt='Third slide'\r\n                  />\r\n                </Carousel.Item>\r\n              </Carousel>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Header.js",["634"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      {/* First */}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} href='/' className='text-center'>\r\n            <h1>Logo</h1>\r\n          </Col>\r\n          <Col>\r\n            <Carousel controls={false} indicators={false}>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='First slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Second */}\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        expand='lg'\r\n        sticky='top'\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AABEA</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='mr-auto'>\r\n              <LinkContainer to='/'>\r\n                <Nav.Link>Home</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <LinkContainer to='/dashboard'>\r\n                  <Nav.Link>Dashboard</Nav.Link>\r\n                </LinkContainer>\r\n              ) : (\r\n                <LinkContainer to='/about'>\r\n                  <Nav.Link>About</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n            <Nav className='ml-auto'>\r\n              {userInfo && (\r\n                <>\r\n                  <LinkContainer to='/committees'>\r\n                    <Nav.Link>Committees</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n\r\n              <LinkContainer to='/donate'>\r\n                <Nav.Link>Donate</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                  <NavDropdown title={userInfo.username} id='username'>\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to='/register'>\r\n                    <Nav.Link>Registration</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'></i>\r\n                      Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>{' '}\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\RegisterScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserEditScreen.js",["635"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [username, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/dashboard');\r\n    } else {\r\n      if (!user.username || user.id != userId) {\r\n        console.log(userId);\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.username);\r\n        setEmail(user.email);\r\n        setImage(user.image);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, user, userId, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUser({ id: userId, username, email, image, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        className='btn btn-light my-3 btn-sm btn-outline-success'\r\n        to='/dashboard'\r\n      >\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='username'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='username'\r\n                placeholder='Enter Name..'\r\n                value={username}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email..'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image :</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url..'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              {/* <Form.Label>Admin</Form.Label> */}\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Message.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\FormContainer.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\Loader.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\constants\\userConstants.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\actions\\userActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\index.js",[],["636","637"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\store.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reportWebVitals.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Footer.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserEditScreen.js",["638","639","640","641","642"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Card, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {\r\n  getUserDetailsById,\r\n  getUserProfile,\r\n  updateUser,\r\n  updateUserProfile,\r\n} from '../actions/userActions';\r\nimport {\r\n  USER_DETAILS_BY_ID_RESET,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const id = match.params.id;\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [address2, setAddress2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [alternatePhone, setAlternatePhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [alternateEmail, setAlternateEmail] = useState('');\r\n  const [certificates, setCertificates] = useState('');\r\n  const [profilePicture, setProfilePicture] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetailsById = useSelector((state) => state.userDetailsById);\r\n  const { loading, error, user } = userDetailsById;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (successUpdate) {\r\n        dispatch({ type: USER_UPDATE_RESET });\r\n        dispatch({ type: USER_DETAILS_BY_ID_RESET });\r\n        history.push('/members');\r\n      } else {\r\n        if (!user.memberId) {\r\n          dispatch(getUserDetailsById(id));\r\n        } else {\r\n          setFirstName(user.firstName);\r\n          setMInit(user.mInit);\r\n          setLastName(user.lastName);\r\n          setAddress1(user.address1);\r\n          setAddress2(user.address2);\r\n          setCity(user.city);\r\n          setState(user.state);\r\n          setZipcode(user.zipcode);\r\n          setPrimaryPhone(user.primaryPhone);\r\n          setAlternatePhone(user.alternatePhone);\r\n          setDegree(user.degree);\r\n          setDegreeYear(new Date(user.degreeYear).getFullYear());\r\n          setMajor(user.major);\r\n          setCollegeName(user.collegeName);\r\n          setEmail(user.primaryEmail);\r\n          setAlternateEmail(user.alternateEmail);\r\n          setProfilePicture(user.profilePicture);\r\n          setCertificates(user.certificates);\r\n        }\r\n      }\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n\r\n    // }\r\n    // }\r\n  }, [dispatch, history, user, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setProfilePicture(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      updateUser({\r\n        id,\r\n        firstName,\r\n        mInit,\r\n        lastName,\r\n        address1,\r\n        address2,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        alternateEmail,\r\n        primaryPhone,\r\n        alternatePhone,\r\n        degree,\r\n        degreeYear,\r\n        major,\r\n        collegeName,\r\n        certificates,\r\n        profilePicture,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userInfo.userRole === 'systemAdmin' ? (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/members'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      ) : (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-success'\r\n          to='/members'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      <>\r\n        <Card border='primary'>\r\n          <Card.Header className='text-center' as='h2'>\r\n            Edit Profile\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n              <Row>\r\n                <Col md={8}>\r\n                  <Form onSubmit={submitHandler}>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Name:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>M. Initial: </Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='mInit'>\r\n                                      <Form.Control\r\n                                        type='mInit'\r\n                                        placeholder=' Please Enter Your M. Initial: Mr / Ms'\r\n                                        value={mInit}\r\n                                        onChange={(e) =>\r\n                                          setMInit(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>First Name: </Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='firstName'>\r\n                                      <Form.Control\r\n                                        type='firstName'\r\n                                        placeholder='Please Enter Your First Name..'\r\n                                        value={firstName}\r\n                                        onChange={(e) =>\r\n                                          setFirstName(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Last Name: </Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='lastName'>\r\n                                      <Form.Control\r\n                                        type='lastName'\r\n                                        placeholder='Please Enter Your Last Name..'\r\n                                        value={lastName}\r\n                                        onChange={(e) =>\r\n                                          setLastName(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Education:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Highest degree Earned :</Col>\r\n                                  <Col>\r\n                                    {' '}\r\n                                    <Form.Group controlId='degree'>\r\n                                      <Form.Control\r\n                                        type='degree'\r\n                                        placeholder='Enter Your Last Degree Received..'\r\n                                        value={degree}\r\n                                        onChange={(e) =>\r\n                                          setDegree(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>College/University Name :</Col>\r\n                                  <Col>\r\n                                    {' '}\r\n                                    <Form.Group controlId='collegeName'>\r\n                                      <Form.Control\r\n                                        type='collegeName'\r\n                                        placeholder='Enter Your University/College Name..'\r\n                                        value={collegeName}\r\n                                        onChange={(e) =>\r\n                                          setCollegeName(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Year the Degree Earned :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='degreeYear'>\r\n                                      <Form.Control\r\n                                        type='degreeYear'\r\n                                        placeholder='Enter The Year of Degree Awarded..'\r\n                                        value={degreeYear}\r\n                                        onChange={(e) =>\r\n                                          setDegreeYear(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Major :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='major'>\r\n                                      <Form.Control\r\n                                        type='major'\r\n                                        placeholder='Enter Your Major..'\r\n                                        value={major}\r\n                                        onChange={(e) =>\r\n                                          setMajor(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Contact Details:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Address :</Col>\r\n                                  <Col>\r\n                                    {' '}\r\n                                    <Form.Group controlId='address1'>\r\n                                      <Form.Label>Primary Address</Form.Label>\r\n                                      <Form.Control\r\n                                        type='address1'\r\n                                        placeholder='Please Enter Address..'\r\n                                        value={address1}\r\n                                        onChange={(e) =>\r\n                                          setAddress1(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='address2'>\r\n                                      <Form.Label>\r\n                                        Alternative Address\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='address2'\r\n                                        placeholder='Please Enter Address..'\r\n                                        value={address2}\r\n                                        onChange={(e) =>\r\n                                          setAddress2(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>State :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='state'>\r\n                                      <Form.Control\r\n                                        type='state'\r\n                                        placeholder='Enter State..'\r\n                                        value={state}\r\n                                        onChange={(e) =>\r\n                                          setState(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>City :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='city'>\r\n                                      <Form.Control\r\n                                        type='city'\r\n                                        placeholder='Enter City..'\r\n                                        value={city}\r\n                                        onChange={(e) =>\r\n                                          setCity(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Zipcode :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='zipcode'>\r\n                                      <Form.Control\r\n                                        type='zipcode'\r\n                                        placeholder='Enter Zipcode..'\r\n                                        value={zipcode}\r\n                                        onChange={(e) =>\r\n                                          setZipcode(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Phone Number :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='primaryPhone'>\r\n                                      <Form.Label>\r\n                                        Primary Phone Number\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='primaryPhone'\r\n                                        placeholder='Enter Your Phone Number..'\r\n                                        value={primaryPhone}\r\n                                        onChange={(e) =>\r\n                                          setPrimaryPhone(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='alternatePhone'>\r\n                                      <Form.Label>\r\n                                        Alternate Phone Number\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='alternatePhone'\r\n                                        placeholder='Enter additional Phone Number..'\r\n                                        value={alternatePhone}\r\n                                        onChange={(e) =>\r\n                                          setAlternatePhone(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Email :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='email'>\r\n                                      <Form.Label>Email Address</Form.Label>\r\n                                      <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter Email..'\r\n                                        value={email}\r\n                                        onChange={(e) =>\r\n                                          setEmail(e.target.value)\r\n                                        }\r\n                                        readOnly\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='alternateEmail'>\r\n                                      <Form.Label>\r\n                                        Alternate Email Address\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='alternateEmail'\r\n                                        placeholder='Enter another Email..'\r\n                                        value={alternateEmail}\r\n                                        onChange={(e) =>\r\n                                          setAlternateEmail(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Profile Picture:</Col>\r\n                          <Col>\r\n                            <Form.Group controlId='profilePicture'>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url..'\r\n                                value={profilePicture}\r\n                                onChange={(e) =>\r\n                                  setProfilePicture(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                              <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                              ></Form.File>\r\n                              {uploading && <Loader />}\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      {/* <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Certificates:</Col>\r\n                          <Col>\r\n                            <Form.Group controlId='certificates'>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url..'\r\n                                value={certificates}\r\n                                onChange={(e) =>\r\n                                  setCertificates(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                              <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                              ></Form.File>\r\n                              {uploading && <Loader />}\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n */}\r\n                      <Button type='submit' variant='primary' block>\r\n                        Update\r\n                      </Button>\r\n                    </ListGroup>\r\n                  </Form>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Card.Header>Profile Picture</Card.Header>\r\n                  <Card.Img src={user.profilePicture} variant='top' />\r\n\r\n                  <Card.Header>Certificate</Card.Header>\r\n                  <Card.Img src={user.certificates} variant='top' />\r\n                  {/* <Document\r\n                        src={samplePDF}\r\n                        // src={require('/uploads/image-1616636214274.pdf')}\r\n                      ></Document> */}\r\n                  {/* <Image\r\n                      src={pendingUser.certificate}\r\n                      alt={pendingUser.firstName}\r\n                    /> */}\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Card.Body>\r\n          {/* <Card.Footer className='text-muted'>2 days ago</Card.Footer> */}\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\userReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Message.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\FormContainer.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Loader.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\userActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\userConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HomeScreen\\HomeScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.styles.js",[],["643","644"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar.js",["645","646","647"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar\\Sidebar.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.js",["648"],"import React from 'react';\r\nimport Routes from '../Routes';\r\nimport * as S from './MainScreen.styles';\r\n\r\nconst MainScreen = () => {\r\n  return <S.MainScreenContainer>{/* <Routes /> */}</S.MainScreenContainer>;\r\n};\r\n\r\nexport default MainScreen;\r\n",["649","650"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MainScreen.styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonateScreen\\DonateScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\TrainingScreen\\TrainingScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteesScreen.js",["651","652"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Media,\r\n  ListGroup,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as S from './CommitteeScreen.Styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  newCMember,\r\n  allCMembers,\r\n  deleteCMember,\r\n  getCMemberById,\r\n  updateCMemberById,\r\n} from '../../actions/committeeActions';\r\nimport {\r\n  COMMITTEE_MEMBER_BY_ID_RESET,\r\n  COMMITTEE_MEMBER_NEW_RESET,\r\n  COMMITTEE_MEMBER_UPDATE_BY_ID_RESET,\r\n} from '../../constants/committeeConstants';\r\nimport swal from 'sweetalert';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\n\r\nconst CommitteeScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addCMember, setAddCMember] = useState(false);\r\n  const [editCMember, setEditCMember] = useState(false);\r\n  const [cMemberId, setCMemberId] = useState('');\r\n  const [position, setPosition] = useState('');\r\n  const [tenure, setTenure] = useState([]);\r\n  const [bio, setBio] = useState('');\r\n  const [tenureFrom, setTenureFrom] = useState('');\r\n  const [tenureTo, setTenureTo] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cMemberAll = useSelector((state) => state.cMemberAll);\r\n  const { loading, error, cMembers } = cMemberAll;\r\n\r\n  const cMemberNew = useSelector((state) => state.cMemberNew);\r\n  const {\r\n    loading: cMemberNewLoading,\r\n    error: cMemberNewError,\r\n    success,\r\n  } = cMemberNew;\r\n\r\n  const cMemberById = useSelector((state) => state.cMemberById);\r\n  const { success: cMemberByIdSuccess, cMember } = cMemberById;\r\n\r\n  const cMemberUpdate = useSelector((state) => state.cMemberUpdate);\r\n  const {\r\n    success: cMemberUpdateSuccess,\r\n    error: cMemberUpdateError,\r\n  } = cMemberUpdate;\r\n\r\n  const cMemberDelete = useSelector((state) => state.cMemberDelete);\r\n  const { success: successDelete } = cMemberDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      // setId(userInfo.memberId);\r\n      dispatch({ type: COMMITTEE_MEMBER_NEW_RESET });\r\n    }\r\n    dispatch(allCMembers());\r\n    // else {\r\n    //   history.push('/login');\r\n    // }\r\n    if (success || cMemberUpdateSuccess) {\r\n      setAddCMember(false);\r\n      setEditCMember(false);\r\n\r\n      setCMemberId('');\r\n      setPosition('');\r\n      setTenure('');\r\n      setTenureFrom('');\r\n      setTenureTo('');\r\n      dispatch({ type: COMMITTEE_MEMBER_BY_ID_RESET });\r\n    }\r\n    if (cMemberNewError) {\r\n      // console.log(error);\r\n      swal('Error!', cMemberNewError, 'error');\r\n    }\r\n    if (cMemberUpdateError) {\r\n      swal('Error!', cMemberUpdateError, 'error');\r\n    }\r\n\r\n    if (cMemberByIdSuccess) {\r\n      setAddCMember(true);\r\n      setEditCMember(true);\r\n      setPosition(cMember.position);\r\n      setBio(cMember.bio);\r\n      setTenureFrom(cMember.tenure[0].value);\r\n      setTenureTo(cMember.tenure[1].value);\r\n      setCMemberId(cMember.memberId);\r\n\r\n      setId(cMember.cId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    cMemberNewError,\r\n    cMemberUpdateError,\r\n    cMemberByIdSuccess,\r\n    cMember,\r\n    cMemberUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editCMemberHandler = (id) => {\r\n    dispatch({ type: COMMITTEE_MEMBER_UPDATE_BY_ID_RESET });\r\n    console.log(id);\r\n    dispatch(getCMemberById(id));\r\n  };\r\n\r\n  const deleteCMemberHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteCMember(id));\r\n    }\r\n  };\r\n\r\n  const addNewCMember = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddCMember(!addCMember);\r\n    setPosition('');\r\n    setBio('');\r\n    setTenureFrom('');\r\n    setTenureTo('');\r\n    setCMemberId('');\r\n    setEditCMember(false);\r\n    dispatch({ type: COMMITTEE_MEMBER_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editCMember) {\r\n      const period = [tenureFrom, tenureTo];\r\n\r\n      console.log(period);\r\n      console.log(cMemberId);\r\n      console.log(position);\r\n      // console.log(tenure);\r\n      console.log(bio);\r\n      dispatch(updateCMemberById(id, cMemberId, position, bio, period));\r\n    } else {\r\n      // setId(userInfo.memberId);\r\n      // setTenure(new Date(tenureFrom), new Date(tenureTo));\r\n      const period = [tenureFrom, tenureTo];\r\n      setTenure(period);\r\n      console.log(period);\r\n      console.log(cMemberId);\r\n      console.log(position);\r\n      // console.log(tenure);\r\n      console.log(bio);\r\n      dispatch(newCMember(cMemberId, position, period, bio));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className='content'>\r\n      {userInfo &&\r\n      (userInfo.userRole === 'admin' ||\r\n        userInfo.userRole === 'systemAdmin' ||\r\n        userInfo.userRole === 'member') ? (\r\n        <>\r\n          {/* Sidebar */}\r\n          <Col\r\n            md={{ span: 3, order: 1 }}\r\n            lg={{ span: 3, order: 1 }}\r\n            id='sidebar-wrapper'\r\n            className='m-0 p-1'\r\n          >\r\n            <Sidebar />\r\n          </Col>\r\n          {/* Sidebar End */}\r\n          <Col\r\n            md={{ span: 9, order: 12 }}\r\n            lg={{ span: 9, order: 12 }}\r\n            id='page-content-wrapper'\r\n            className='m-0 p-1'\r\n          >\r\n            <>\r\n              {/* <CardColumns> */}\r\n\r\n              <Row>\r\n                {userInfo &&\r\n                (userInfo.userRole === 'admin' ||\r\n                  userInfo.userRole === 'systemAdmin') ? (\r\n                  <>\r\n                    <Col\r\n                      md={{ span: 12, order: 1 }}\r\n                      lg={{ span: 12, order: 1 }}\r\n                      // style={{ padding: 0 }}\r\n                      className='mb-2 p-0'\r\n                    >\r\n                      <Card border='info'>\r\n                        <Card.Header className='text-center text-info' as='h3'>\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block rounded'\r\n                            // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                            onClick={addNewCMember}\r\n                          >\r\n                            New Committee Member\r\n                          </Link>\r\n                        </Card.Header>\r\n\r\n                        <Card.Body>\r\n                          {addCMember\r\n                            ? (cMemberNewError && (\r\n                                <Message variant='danger'>\r\n                                  {cMemberNewError}{' '}\r\n                                </Message>\r\n                              )) ||\r\n                              (cMemberNewLoading && <Loader />) ||\r\n                              (success ? (\r\n                                <Message variant='success'>{success}</Message>\r\n                              ) : (\r\n                                <Form onSubmit={submitHandler}>\r\n                                  <Form.Group controlId='postion'>\r\n                                    <Form.Label>Position</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='Please Enter Position'\r\n                                      value={position}\r\n                                      onChange={(e) =>\r\n                                        setPosition(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='cMemberId'>\r\n                                    <Form.Label>Member Id</Form.Label>\r\n                                    <Form.Control\r\n                                      type='number'\r\n                                      placeholder='Please Enter The Member Id'\r\n                                      value={cMemberId}\r\n                                      onChange={(e) =>\r\n                                        setCMemberId(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='tenureFrom'>\r\n                                    <Form.Label>From</Form.Label>\r\n                                    <Form.Control\r\n                                      type='date'\r\n                                      placeholder='Please Enter The Starting Date'\r\n                                      value={tenureFrom}\r\n                                      onChange={(e) =>\r\n                                        setTenureFrom(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='tenureTo'>\r\n                                    <Form.Label>To</Form.Label>\r\n                                    <Form.Control\r\n                                      type='date'\r\n                                      placeholder='Please Enter The Ending Date'\r\n                                      value={tenureTo}\r\n                                      onChange={(e) =>\r\n                                        setTenureTo(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='bio'>\r\n                                    <Form.Label>Bio</Form.Label>\r\n\r\n                                    <CKEditor\r\n                                      editor={ClassicEditor}\r\n                                      data={bio}\r\n                                      onChange={(e, editor) => {\r\n                                        const data = editor.getData();\r\n                                        setBio(data);\r\n                                      }}\r\n                                    />\r\n                                  </Form.Group>\r\n\r\n                                  {editCMember ? (\r\n                                    <Button type='submit' variant='info' block>\r\n                                      <i className='fas fa-plus' /> Update\r\n                                    </Button>\r\n                                  ) : (\r\n                                    <Button type='submit' variant='info' block>\r\n                                      <i className='fas fa-plus' /> Add\r\n                                    </Button>\r\n                                  )}\r\n                                </Form>\r\n                              ))\r\n                            : null}\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      md={{ span: 12, order: 12 }}\r\n                      lg={{ span: 12, order: 12 }}\r\n                      className='mb-2 p-0'\r\n                      id='all-chapter'\r\n                    >\r\n                      <Card border='info'>\r\n                        <Card.Header as='h3' className='text-center text-info'>\r\n                          Committee Members\r\n                        </Card.Header>\r\n\r\n                        <>\r\n                          {loading ? (\r\n                            <Loader />\r\n                          ) : error ? (\r\n                            <Message variant='danger'>{error}</Message>\r\n                          ) : (\r\n                            <Table\r\n                              striped\r\n                              bordered\r\n                              hover\r\n                              responsive\r\n                              className='table-sm'\r\n                            >\r\n                              <thead>\r\n                                <tr>\r\n                                  {/* <th>ID</th> */}\r\n                                  <th>Tenure</th>\r\n                                  <th>Position</th>\r\n                                  <th>Member Id</th>\r\n                                  <th>Name</th>\r\n                                  {/* <th>Bio</th> */}\r\n                                  {/* <th>CHAPTER ADDRESS</th> */}\r\n                                  {userInfo &&\r\n                                    (userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') && (\r\n                                      <th>EDIT/DELETE</th>\r\n                                    )}\r\n                                </tr>\r\n                              </thead>\r\n\r\n                              <tbody>\r\n                                {cMembers.map((cMember) => (\r\n                                  <tr key={cMember.cId}>\r\n                                    {/* // <td>{announcement.chapterId}</td> */}\r\n                                    {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                                    <td>\r\n                                      {' '}\r\n                                      {new Date(\r\n                                        cMember.tenure[0].value\r\n                                      ).getFullYear()}{' '}\r\n                                      -\r\n                                      {new Date(\r\n                                        cMember.tenure[1].value\r\n                                      ).getFullYear()}\r\n                                    </td>\r\n                                    <td> {cMember.position}</td>\r\n                                    <td> {cMember.memberId}</td>\r\n                                    <td>\r\n                                      {' '}\r\n                                      {cMember.member.firstName}{' '}\r\n                                      {cMember.member.lastName}\r\n                                    </td>\r\n                                    {/* <td> {cMember.bio}</td> */}\r\n\r\n                                    {userInfo &&\r\n                                      (userInfo.userRole === 'systemAdmin' ||\r\n                                        userInfo.userRole === 'admin') && (\r\n                                        <td>\r\n                                          <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              editCMemberHandler(cMember.cId)\r\n                                            }\r\n                                          >\r\n                                            <i className='fas fa-edit'></i>\r\n                                          </Button>\r\n\r\n                                          <Button\r\n                                            variant='danger'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              deleteCMemberHandler(cMember.cId)\r\n                                            }\r\n                                          >\r\n                                            <i className='fas fa-trash'></i>\r\n                                          </Button>\r\n                                        </td>\r\n                                      )}\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </Table>\r\n                          )}\r\n                        </>\r\n                      </Card>\r\n                    </Col>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <ListGroup variant='flush'>\r\n                          {cMembers.map((cMember) => (\r\n                            <ListGroup.Item>\r\n                              <Media key={cMember.cId}>\r\n                                <img\r\n                                  width={164}\r\n                                  height={164}\r\n                                  className='mr-3'\r\n                                  src={cMember.member.profilePicture}\r\n                                  alt={cMember.member.firstName}\r\n                                />\r\n                                <Media.Body>\r\n                                  <h5>{cMember.position.toUpperCase()}</h5>\r\n                                  <p className='text-justify'>\r\n                                    {parse(cMember.bio.substring(0, 100))}...\r\n                                    <Link to={`/committee/${cMember.cId}`}>\r\n                                      Read more\r\n                                    </Link>\r\n                                  </p>\r\n                                </Media.Body>\r\n                              </Media>\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                        </ListGroup>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Row>\r\n            </>\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Container>\r\n              <ListGroup variant='flush'>\r\n                {cMembers.map((cMember) => (\r\n                  <ListGroup.Item>\r\n                    <Media key={cMember.cId}>\r\n                      <img\r\n                        width={164}\r\n                        height={164}\r\n                        className='mr-3'\r\n                        src={cMember.member.profilePicture}\r\n                        alt={cMember.member.firstName}\r\n                      />\r\n                      <Media.Body>\r\n                        <h5>{cMember.position.toUpperCase()}</h5>\r\n                        <p className='text-justify'>\r\n                          {parse(cMember.bio.substring(0, 100))}...\r\n                          <Link to={`/committee/${cMember.cId}`}>\r\n                            Read more\r\n                          </Link>\r\n                        </p>\r\n                      </Media.Body>\r\n                    </Media>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Container>\r\n          )}\r\n        </>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CommitteeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\Routes.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.js",["653","654","655","656","657","658","659","660","661","662","663","664"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Image,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  listUsers,\r\n  deleteUser,\r\n  getUserProfile,\r\n  getUserDonationDetails,\r\n} from '../../actions/userActions';\r\nimport * as S from './DashboardScreen.Styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [lastDonation, setLastDonation] = useState('');\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading: userLoading, user, error: userError } = userDetails;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  const userDonateDetails = useSelector((state) => state.userDonateDetails);\r\n  const {\r\n    loading: donateLoading,\r\n    error: donateErrors,\r\n    donations,\r\n  } = userDonateDetails;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      // dispatch(listUsers());\r\n      dispatch(getUserProfile());\r\n\r\n      dispatch(getUserDonationDetails());\r\n      // setLastDonation(donations.pop());\r\n\r\n      // console.log(lastDonation);\r\n      //   console.log(lastDonation);\r\n\r\n      // if (donations.length > 0) {\r\n      //   setLastDonation(donations.pop());\r\n      // }\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          // className='mb-2'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          className='m-0 p-0'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n            {/* 1st card section : member Status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                id='member-status'\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-1'\r\n              >\r\n                <Card>\r\n                  {userInfo ? (\r\n                    <>\r\n                      {userLoading ? (\r\n                        <Loader />\r\n                      ) : userError ? (\r\n                        <Message variant='danger'>{userError}</Message>\r\n                      ) : (\r\n                        <>\r\n                          <Card.Img\r\n                            variant='top'\r\n                            src={user.profilePicture}\r\n                            alt='Profile Picture'\r\n                            // style={{ height: '171px', width: '180px' }}\r\n                            roundedCircle\r\n                          />\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col sm={4}>Name:</Col>\r\n                                <Col>{userInfo.userName}</Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col sm={4}>Email:</Col>\r\n                                <Col>{userInfo.email}</Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Row className='text-info'>\r\n                                <Col md={4}>Phone:</Col>\r\n                                <Col>{user.primaryPhone}</Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                              <Row className='text-info'>\r\n                                <Col md={4}>Address:</Col>\r\n                                <Col>\r\n                                  {user.address1}\r\n                                  {'; '}\r\n                                  {user.city}\r\n                                  {'; '}\r\n                                  {user.state}\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </>\r\n                      )}\r\n\r\n                      <Card.Footer className='text-muted'>\r\n                        <Link\r\n                          className='btn btn-outline-info btn-sm btn-block rounded'\r\n                          to='/profile'\r\n                        >\r\n                          View Full Profile\r\n                        </Link>\r\n                      </Card.Footer>\r\n                    </>\r\n                  ) : null}\r\n                </Card>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* 2nd card section : Profile Information ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 6, order: 2 }}\r\n                lg={{ span: 6, order: 2 }}\r\n                className='mb-2 p-1'\r\n                id='profile-information'\r\n                // className='m-0 p-1'\r\n              >\r\n                <Card>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    Profile Summery{' '}\r\n                  </Card.Header>\r\n                  {userInfo ? (\r\n                    <>\r\n                      <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={4}>Member Id:</Col>\r\n                            <Col>{userInfo.memberId}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={4}>User Type:</Col>\r\n                            <Col>{userInfo.userRole}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                          <Row className='text-info'>\r\n                            <Col md={4}>Status:</Col>\r\n                            {user &&\r\n                              (user.status === 'active' ? (\r\n                                <Col>\r\n                                  <i\r\n                                    className='fas fa-user'\r\n                                    style={{ color: '#63D471' }}\r\n                                  ></i>{' '}\r\n                                  {user.status}\r\n                                </Col>\r\n                              ) : (\r\n                                <Col className='text-danger'>\r\n                                  <i\r\n                                    className='fas fa-user'\r\n                                    style={{ color: '#A40606' }}\r\n                                  ></i>\r\n                                  {user.status}\r\n                                </Col>\r\n                              ))}\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                        {user &&\r\n                          (user.status !== 'active' ? (\r\n                            <ListGroup.Item>\r\n                              <Link\r\n                                className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                                to='/payment'\r\n                              >\r\n                                Please Pay your registration fee to activate\r\n                                your account\r\n                              </Link>\r\n                            </ListGroup.Item>\r\n                          ) : (\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={4}>Next Payment Due In:</Col>\r\n                                <Col>{user.nextPaymentDueIn}</Col>\r\n                              </Row>{' '}\r\n                            </ListGroup.Item>\r\n                          ))}\r\n\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={4}>Last Training Taken:</Col>\r\n                            <Col>None</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col md={4}>Last Donation:</Col>\r\n\r\n                            <Col>\r\n                              {donateLoading ? (\r\n                                <Loader />\r\n                              ) : donateErrors ? (\r\n                                <Message variant='danger'>\r\n                                  {donateErrors}\r\n                                </Message>\r\n                              ) : donations ? (\r\n                                // new Date(\r\n                                //   Math.max.apply(\r\n                                //     null,\r\n                                //     donations.map(function (e) {\r\n                                //       return new Date(donations.donationDate);\r\n                                //     })\r\n                                //   )\r\n                                // )\r\n                                donations\r\n                                  .map(function (e) {\r\n                                    return e.donationDate;\r\n                                  })\r\n                                  .sort()\r\n                                  .reverse()[0]\r\n                              ) : (\r\n                                // donations.map((a, index) => (\r\n                                //   <Col key={index}>{a.donationDate}</Col>\r\n                                // ))\r\n                                'None'\r\n                              )}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </>\r\n                  ) : null}\r\n                </Card>\r\n              </Col>\r\n              {/* 2nd card section : Profile Information ~End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\EmailActivationScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\Section.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\PageTitle.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\[hash].js",["665"],"import React from 'react';\r\n\r\nexport default async function verifyUserEmail(req, res) {\r\n  const hash = req.query.hash;\r\n  console.log(`hash: ${hash}`);\r\n  if (!hash) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: 'Cannot Validate The Email Address!' });\r\n  }\r\n\r\n  const response = await fetch(\r\n    `http://localhost:3000/api/users/activate/${hash}`\r\n  );\r\n  if (response.status >= 400) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: 'Cannot Validate The Email Address!' });\r\n  } else {\r\n    res.writeHead(307, { Location: '/users/activated' });\r\n    res.end();\r\n  }\r\n}\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\chapterReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\chapterConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\chapterActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserPendingApproveScreen\\UserPendingApproveScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\paymentTypeReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\paymentTypeConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.js",["666"],"import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport * as S from './ChapterScreen.Styles';\r\nimport {\r\n  deleteChapter,\r\n  listChapters,\r\n  registerChapter,\r\n} from '../../actions/chapterActions';\r\nimport {\r\n  CHAPTER_LIST_RESET,\r\n  CHAPTER_REGISTER_RESET,\r\n} from '../../constants/chapterConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst ChapterScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addChapter, setAddChapter] = useState(false);\r\n  const [chapterName, setChapterName] = useState('');\r\n  const [chapterEmail, setChapterEmail] = useState('');\r\n  const [chapterAddress, setChapterAddress] = useState('');\r\n  const [chapterPhone, setChapterPhone] = useState('');\r\n\r\n  const chapterList = useSelector((state) => state.chapterList);\r\n  const { loading, error, chapters } = chapterList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterRegister = useSelector((state) => state.chapterRegister);\r\n  const {\r\n    loading: registerLoading,\r\n    error: registerError,\r\n    success,\r\n  } = chapterRegister;\r\n\r\n  const chapterDelete = useSelector((state) => state.chapterDelete);\r\n  const { success: successDelete } = chapterDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listChapters());\r\n      dispatch({ type: CHAPTER_LIST_RESET });\r\n      dispatch({ type: CHAPTER_REGISTER_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddChapter((addChapter) => !addChapter);\r\n      setChapterName('');\r\n      setChapterEmail('');\r\n      setChapterAddress('');\r\n      setChapterPhone('');\r\n    }\r\n  }, [dispatch, history, userInfo, success, successDelete]);\r\n\r\n  const deleteChapterHandler = (chapterId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteChapter(chapterId));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      registerChapter(chapterEmail, chapterName, chapterAddress, chapterPhone)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n            {/* 1st card section : member Status~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center text-info' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      onClick={() => setAddChapter(!addChapter)}\r\n                    >\r\n                      Add New Chapter\r\n                    </Link>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {addChapter\r\n                      ? (registerError && (\r\n                          <Message variant='danger'>{registerError}</Message>\r\n                        )) ||\r\n                        (registerLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='chapterName'>\r\n                              <Form.Label>Chapter Name</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterName'\r\n                                placeholder='Please Enter New Chapter Name..'\r\n                                value={chapterName}\r\n                                onChange={(e) => setChapterName(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterEmail'>\r\n                              <Form.Label>Chapter Email</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterEmail'\r\n                                placeholder='Please Enter Admin Email Address for the New Chapter'\r\n                                value={chapterEmail}\r\n                                onChange={(e) =>\r\n                                  setChapterEmail(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterAddress'>\r\n                              <Form.Label>Chapter Address</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterAddress'\r\n                                placeholder='Please Enter Address..'\r\n                                value={chapterAddress}\r\n                                onChange={(e) =>\r\n                                  setChapterAddress(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterPhone'>\r\n                              <Form.Label>Chapter Phone</Form.Label>\r\n                              <Form.Control\r\n                                type='chapterPhone'\r\n                                placeholder='Please Enter Phone..'\r\n                                value={chapterPhone}\r\n                                onChange={(e) =>\r\n                                  setChapterPhone(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='info' block>\r\n                              <i className='fas fa-plus' /> Add\r\n                            </Button>\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                    {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n                    {/* {registerError && (\r\n                        <Message variant='danger'>{registerError}</Message>\r\n                      )}\r\n                      {registerLoading && <Loader />}\r\n                      {} */}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 5th card section : All Chapter List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    All Chapter List\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            {/* <th>ID</th> */}\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>CHAPTER NAME</th>\r\n                            <th>CHAPTER EMAIL</th>\r\n                            <th>CHAPTER PHONE</th>\r\n                            <th>CHAPTER ADDRESS</th>\r\n                            {userInfo &&\r\n                              userInfo.userRole === 'systemAdmin' && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {chapters.map((chapter) => (\r\n                            <tr key={chapter.chapterId}>\r\n                              {/* <td>{chapter.chapterId}</td> */}\r\n                              {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                              <td> {chapter.chapterName}</td>\r\n                              <td>\r\n                                <a href={`mailto: ${chapter.chapterEmail}`}>\r\n                                  {' '}\r\n                                  {chapter.chapterEmail}\r\n                                </a>\r\n                              </td>\r\n                              <td> {chapter.chapterPhone}</td>\r\n                              <td> {chapter.chapterAddress}</td>\r\n                              {/* <td>\r\n                                {user.userRole === 'systemAdmin' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td> */}\r\n                              {/* <td>\r\n                                {user.member.status === 'active' ? (\r\n                                  <i\r\n                                    className='fas fa-check'\r\n                                    style={{ color: 'green' }}\r\n                                  ></i>\r\n                                ) : (\r\n                                  <i\r\n                                    className='fas fa-times'\r\n                                    style={{ color: 'red' }}\r\n                                  ></i>\r\n                                )}\r\n                              </td> */}\r\n                              {userInfo.userRole === 'systemAdmin' && (\r\n                                <td>\r\n                                  <LinkContainer\r\n                                    to={`/chapter/${chapter.chapterId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={() =>\r\n                                      deleteChapterHandler(chapter.chapterId)\r\n                                    }\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Chapter List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChapterScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.js",["667","668","669","670","671","672","673","674","675","676","677","678","679","680","681"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\paymentTypeActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.js",["682"],"import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport * as S from './PaymentTypeScreen.Styles';\r\nimport {\r\n  deletePaymentType,\r\n  listPaymentTypes,\r\n  registerPaymentType,\r\n} from '../../actions/paymentTypeActions';\r\nimport {\r\n  PAYMENT_TYPE_LIST_RESET,\r\n  PAYMENT_TYPE_REGISTER_RESET,\r\n} from '../../constants/paymentTypeConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst PaymentTypeScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addPaymentType, setAddPaymentType] = useState(false);\r\n\r\n  const [paymentTypeName, setPaymentTypeName] = useState('');\r\n  const [paymentTypeAmount, setPaymentTypeAmount] = useState('');\r\n  const [paymentTypeDescription, setPaymentTypeDescription] = useState('');\r\n\r\n  const paymentTypeList = useSelector((state) => state.paymentTypeList);\r\n  const { loading, error, paymentTypes } = paymentTypeList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const paymentTypeDelete = useSelector((state) => state.paymentTypeDelete);\r\n  const { success: successPaymentTypeDelete } = paymentTypeDelete;\r\n\r\n  const paymentTypeRegister = useSelector((state) => state.paymentTypeRegister);\r\n  const {\r\n    loading: registerLoading,\r\n    error: registerError,\r\n    success,\r\n  } = paymentTypeRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listPaymentTypes());\r\n      dispatch({ type: PAYMENT_TYPE_LIST_RESET });\r\n      dispatch({ type: PAYMENT_TYPE_REGISTER_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddPaymentType((addPaymentType) => !addPaymentType);\r\n      setPaymentTypeName('');\r\n      setPaymentTypeAmount('');\r\n      setPaymentTypeDescription('');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successPaymentTypeDelete,\r\n    // paymentTypes,\r\n    success,\r\n  ]);\r\n\r\n  const deletePaymentTypeHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deletePaymentType(id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      registerPaymentType(\r\n        paymentTypeName,\r\n        paymentTypeAmount,\r\n        paymentTypeDescription\r\n      )\r\n    );\r\n  };\r\n  // console.log(addPaymentType);\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-0'\r\n        >\r\n          <>\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-1'\r\n              >\r\n                <>\r\n                  {/* Card Start */}\r\n                  <Card border='info'>\r\n                    <Card.Header className='text-center' as='h2'>\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => setAddPaymentType(!addPaymentType)}\r\n                      >\r\n                        Add New Payment Type\r\n                      </Link>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      {addPaymentType\r\n                        ? (registerError && (\r\n                            <Message variant='danger'>{registerError}</Message>\r\n                          )) ||\r\n                          (registerLoading && <Loader />) ||\r\n                          (success ? (\r\n                            <Message variant='success'>{success}</Message>\r\n                          ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                              <Form.Group controlId='firstName'>\r\n                                <Form.Label>Payment type</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeName'\r\n                                  placeholder='Please Enter Payment Type Name..'\r\n                                  value={paymentTypeName}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeName(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group controlId='lastName'>\r\n                                <Form.Label>Amount</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeAmount'\r\n                                  placeholder='Please Enter an amount for this payment type'\r\n                                  value={paymentTypeAmount}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeAmount(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group controlId='Description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeDescription'\r\n                                  placeholder='Please Enter Description..'\r\n                                  value={paymentTypeDescription}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeDescription(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            </Form>\r\n                          ))\r\n                        : null}\r\n                    </Card.Body>\r\n                  </Card>\r\n                  {/* Card End */}\r\n                </>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              <Col\r\n                md={{ span: 6, order: 12 }}\r\n                lg={{ span: 6, order: 12 }}\r\n                className='mb-2 p-1'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    All Payment Types\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            {/* <th>ID</th> */}\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>NAME</th>\r\n                            <th>AMOUNT</th>\r\n\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {paymentTypes.map((paymentType) => (\r\n                            <tr key={paymentType.paymentTypeId}>\r\n                              {/* <td>{paymentType.paymentTypeId}</td> */}\r\n\r\n                              <td> {paymentType.paymentTypeName}</td>\r\n\r\n                              <td> {paymentType.paymentTypeAmount}</td>\r\n\r\n                              {(userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <td>\r\n                                  <LinkContainer\r\n                                    to={`/paymentType/${paymentType.paymentTypeId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer>\r\n\r\n                                  <Button\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                    onClick={() =>\r\n                                      deletePaymentTypeHandler(\r\n                                        paymentType.paymentTypeId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className='fas fa-trash'></i>\r\n                                  </Button>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Chapter List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentTypeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\PaymentDropdown.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\DatePicker.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.js",["683","684"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\n\r\nimport * as S from './AnnouncementScreen.Styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport {\r\n  allAnnouncements,\r\n  deleteAnnouncement,\r\n  getAnnouncementById,\r\n  newAnnouncement,\r\n  updateAnnouncementById,\r\n} from '../../actions/announcementAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  ANNOUNCEMENT_BY_ID_RESET,\r\n  ANNOUNCEMENT_NEW_RESET,\r\n  ANNOUNCEMENT_UPDATE_BY_ID_RESET,\r\n} from '../../constants/announcementConstants';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\n\r\nconst AnnouncementScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAnnouncement, setAddAnnouncement] = useState(false);\r\n  const [editAnnouncement, setEditAnnouncement] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const announcementsRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const announcementAll = useSelector((state) => state.announcementAll);\r\n  const { loading, error, announcements } = announcementAll;\r\n\r\n  announcementsRef.current = announcements;\r\n\r\n  const announcementNew = useSelector((state) => state.announcementNew);\r\n  const {\r\n    loading: announcementNewLoading,\r\n    error: announcementNewError,\r\n    success,\r\n  } = announcementNew;\r\n\r\n  const announcementById = useSelector((state) => state.announcementById);\r\n  const { success: announcementByIdSuccess, announcement } = announcementById;\r\n\r\n  const announcementUpdate = useSelector((state) => state.announcementUpdate);\r\n  const { success: announcementUpdateSuccess } = announcementUpdate;\r\n\r\n  const announcementDelete = useSelector((state) => state.announcementDelete);\r\n  const { success: successDelete } = announcementDelete;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      setId(userInfo.memberId);\r\n      dispatch(allAnnouncements());\r\n      dispatch({ type: ANNOUNCEMENT_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || announcementUpdateSuccess) {\r\n      setAddAnnouncement(false);\r\n      setEditAnnouncement(false);\r\n\r\n      setTitle('');\r\n      setBody('');\r\n      dispatch({ type: ANNOUNCEMENT_BY_ID_RESET });\r\n    }\r\n    if (announcementByIdSuccess) {\r\n      setAddAnnouncement(true);\r\n      setEditAnnouncement(true);\r\n      setTitle(announcement.title);\r\n      setBody(announcement.body);\r\n      setId(announcement.announcementId);\r\n\r\n      // setId(announcement.announcementId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    announcementByIdSuccess,\r\n    announcement,\r\n    announcementUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editAnnouncementHandler = (rowIndex) => {\r\n    const id = announcementsRef.current[rowIndex].announcementId;\r\n    dispatch({ type: ANNOUNCEMENT_UPDATE_BY_ID_RESET });\r\n    console.log(rowIndex);\r\n    console.log(id);\r\n    dispatch(getAnnouncementById(id));\r\n  };\r\n\r\n  const deleteAnnouncementHandler = (rowIndex) => {\r\n    const id = announcementsRef.current[rowIndex].announcementId;\r\n\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteAnnouncement(id));\r\n    }\r\n  };\r\n\r\n  const addNewAnnouncement = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddAnnouncement(!addAnnouncement);\r\n    setTitle('');\r\n    setBody('');\r\n    setEditAnnouncement(false);\r\n    dispatch({ type: ANNOUNCEMENT_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editAnnouncement) {\r\n      dispatch(updateAnnouncementById(id, title, body));\r\n    } else {\r\n      setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(newAnnouncement(title, body, id));\r\n    }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'Title',\r\n      accessor: 'title',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'Announcement',\r\n      accessor: 'body',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return parse(value);\r\n      },\r\n    },\r\n    {\r\n      Header: 'Date',\r\n      accessor: 'createdAt',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return format(new Date(value), 'dd/mm/yyyy');\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <div>\r\n            <span onClick={() => editAnnouncementHandler(rowIdx)}>\r\n              <i className='far fa-edit action mr-2'></i>\r\n            </span>\r\n\r\n            <span onClick={() => deleteAnnouncementHandler(rowIdx)}>\r\n              <i className='fas fa-trash action'></i>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                      onClick={addNewAnnouncement}\r\n                    >\r\n                      New Announcement\r\n                    </Link>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {addAnnouncement\r\n                      ? (announcementNewError && (\r\n                          <Message variant='danger'>\r\n                            {announcementNewError}\r\n                          </Message>\r\n                        )) ||\r\n                        (announcementNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='title'>\r\n                              <Form.Label>Title</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='body'>\r\n                              <Form.Label>Announcement</Form.Label>\r\n                              <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={body}\r\n                                onChange={(e, editor) => {\r\n                                  const data = editor.getData();\r\n                                  setBody(data);\r\n                                }}\r\n                              />\r\n                              {/* <Form.Control\r\n                                as='textarea'\r\n                                rows='3'\r\n                                placeholder='Please Enter The Announcement'\r\n                                value={body}\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                              ></Form.Control> */}\r\n                            </Form.Group>\r\n\r\n                            {editAnnouncement ? (\r\n                              <Button\r\n                                type='submit'\r\n                                variant='info'\r\n                                block\r\n                                // onClick={() =>\r\n                                //   updateAnnouncementHandler(\r\n                                //     announcement.announcementId\r\n                                //   )\r\n                                // }\r\n                              >\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                    {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n                    {/* {registerError && (\r\n                        <Message variant='danger'>{registerError}</Message>\r\n                      )}\r\n                      {registerLoading && <Loader />}\r\n                      {} */}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    Announcements\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={announcements} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.js",["685"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport {\r\n  allVission,\r\n  deleteVission,\r\n  getVissionById,\r\n  newVission,\r\n  updateVissionById,\r\n} from '../../actions/vissionActions';\r\nimport * as S from './VissionScreen.Styles';\r\nimport {\r\n  VISSION_BY_ID_RESET,\r\n  VISSION_NEW_RESET,\r\n  VISSION_UPDATE_BY_ID_RESET,\r\n} from '../../constants/vissionConstants';\r\n\r\nconst VissionScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addVission, setAddVission] = useState(false);\r\n  const [editVission, setEditVission] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const vissionAll = useSelector((state) => state.vissionAll);\r\n  const { loading, error, vissions } = vissionAll;\r\n\r\n  const vissionNew = useSelector((state) => state.vissionNew);\r\n  const {\r\n    loading: vissionNewLoading,\r\n    error: vissionNewError,\r\n    success,\r\n  } = vissionNew;\r\n\r\n  const vissionById = useSelector((state) => state.vissionById);\r\n  const { success: vissionByIdSuccess, vission } = vissionById;\r\n\r\n  const vissionUpdate = useSelector((state) => state.vissionUpdate);\r\n  const { success: vissionUpdateSuccess } = vissionUpdate;\r\n\r\n  const vissionDelete = useSelector((state) => state.vissionDelete);\r\n  const { success: successDelete } = vissionDelete;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      setId(userInfo.memberId);\r\n      dispatch(allVission());\r\n      dispatch({ type: VISSION_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || vissionUpdateSuccess) {\r\n      setAddVission(false);\r\n      setEditVission(false);\r\n      setTitle('');\r\n      setBody('');\r\n      dispatch({ type: VISSION_BY_ID_RESET });\r\n    }\r\n    if (vissionByIdSuccess) {\r\n      setAddVission((addVission) => !addVission);\r\n      setEditVission((editVission) => !editVission);\r\n      setTitle(vission.title);\r\n      setBody(vission.body);\r\n      setId(vission.chapterId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    vission,\r\n    vissionByIdSuccess,\r\n    vissionUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editVissionHandler = (id) => {\r\n    dispatch({ type: VISSION_UPDATE_BY_ID_RESET });\r\n\r\n    dispatch(getVissionById(id));\r\n  };\r\n\r\n  const deleteVissionHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteVission(id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editVission) {\r\n      dispatch(updateVissionById(id, title, body));\r\n    } else {\r\n      setId(userInfo.memberId);\r\n      dispatch(newVission(id, title, body));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    {vissions && vissions.length !== 0 ? (\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => editVissionHandler(userInfo.chapterId)}\r\n                      >\r\n                        Update Vision\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => setAddVission(!addVission)}\r\n                      >\r\n                        Add Vision\r\n                      </Link>\r\n                    )}\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {addVission\r\n                      ? (vissionNewError && (\r\n                          <Message variant='danger'>{vissionNewError}</Message>\r\n                        )) ||\r\n                        (vissionNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='title'>\r\n                              <Form.Label>Title</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='body'>\r\n                              <Form.Label>Vision</Form.Label>\r\n                              <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={body}\r\n                                onChange={(e, editor) => {\r\n                                  const data = editor.getData();\r\n                                  setBody(data);\r\n                                }}\r\n                              />\r\n                              {/* <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter The Vission'\r\n                                value={body}\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                              ></Form.Control> */}\r\n                            </Form.Group>\r\n                            {editVission ? (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    Vision\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Title</th>\r\n                            <th>Vision</th>\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {vissions.map((vission) => (\r\n                            <tr key={vission.chapterId}>\r\n                              {/* // <td>{announcement.chapterId}</td> */}\r\n                              {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                              <td> {vission.title}</td>\r\n                              <td> {parse(vission.body)}</td>\r\n                              {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <td>\r\n                                    <Button\r\n                                      variant='light'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        editVissionHandler(vission.chapterId)\r\n                                      }\r\n                                    >\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                      variant='danger'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        deleteVissionHandler(vission.chapterId)\r\n                                      }\r\n                                    >\r\n                                      <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                  </td>\r\n                                )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VissionScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.js",["686"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport {\r\n  allHistory,\r\n  deleteHistory,\r\n  getHistoryById,\r\n  newHistory,\r\n  updateHistoryById,\r\n} from '../../actions/historyActions';\r\nimport * as S from './HistoryScreen.Styles';\r\nimport {\r\n  HISTORY_BY_ID_RESET,\r\n  HISTORY_NEW_RESET,\r\n  HISTORY_UPDATE_BY_ID_RESET,\r\n} from '../../constants/historyConstants';\r\n\r\nconst HistoryScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addHistory, setAddHistory] = useState(false);\r\n  const [editHistory, setEditHistory] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const historyAll = useSelector((state) => state.historyAll);\r\n  const { loading, error, histories } = historyAll;\r\n\r\n  const historyNew = useSelector((state) => state.historyNew);\r\n  const {\r\n    loading: historyNewLoading,\r\n    error: historyNewError,\r\n    success,\r\n  } = historyNew;\r\n\r\n  const historyById = useSelector((state) => state.historyById);\r\n  const { success: historyByIdSuccess, historyId } = historyById;\r\n\r\n  const historyUpdate = useSelector((state) => state.historyUpdate);\r\n  const { success: historyUpdateSuccess } = historyUpdate;\r\n\r\n  const historyDelete = useSelector((state) => state.historyDelete);\r\n  const { success: successDelete } = historyDelete;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      setId(userInfo.memberId);\r\n      dispatch(allHistory());\r\n      dispatch({ type: HISTORY_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || historyUpdateSuccess) {\r\n      setAddHistory(false);\r\n      setEditHistory(false);\r\n      setTitle('');\r\n      setBody('');\r\n      dispatch({ type: HISTORY_BY_ID_RESET });\r\n    }\r\n    if (historyByIdSuccess) {\r\n      setAddHistory((addHistory) => !addHistory);\r\n      setEditHistory((editHistory) => !editHistory);\r\n      setTitle(historyId.title);\r\n      setBody(historyId.body);\r\n      setId(historyId.chapterId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    historyByIdSuccess,\r\n    historyId,\r\n    historyUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editHistoryHandler = (id) => {\r\n    dispatch({ type: HISTORY_UPDATE_BY_ID_RESET });\r\n    // setEditHistory(!editHistory);\r\n    // setAddHistory(!addHistory);\r\n    dispatch(getHistoryById(id));\r\n  };\r\n\r\n  const deleteHistoryHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteHistory(id));\r\n    }\r\n  };\r\n\r\n  const addNewHistory = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddHistory(!addHistory);\r\n    setTitle('');\r\n    setBody('');\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editHistory) {\r\n      dispatch(updateHistoryById(id, title, body));\r\n    } else {\r\n      setId(userInfo.memberId);\r\n      console.log(id);\r\n      dispatch(newHistory(title, body, id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h5'>\r\n                    {histories && histories.length !== 0 ? (\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => editHistoryHandler(userInfo.chapterId)}\r\n                      >\r\n                        Update History\r\n                      </Link>\r\n                    ) : (\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={addNewHistory}\r\n                      >\r\n                        Add History\r\n                      </Link>\r\n                    )}\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {addHistory\r\n                      ? (historyNewError && (\r\n                          <Message variant='danger'>{historyNewError}</Message>\r\n                        )) ||\r\n                        (historyNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='title'>\r\n                              <Form.Label>Title</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='body'>\r\n                              <Form.Label>History</Form.Label>\r\n                              <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={body}\r\n                                onChange={(e, editor) => {\r\n                                  const data = editor.getData();\r\n                                  setBody(data);\r\n                                }}\r\n                              />\r\n                              {/* <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter The History'\r\n                                value={body}\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                              ></Form.Control> */}\r\n                            </Form.Group>\r\n                            {editHistory ? (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    History\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Title</th>\r\n                            <th>Vission</th>\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>EDIT/DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {histories.map((history) => (\r\n                            <tr key={history.chapterId}>\r\n                              {/* // <td>{announcement.chapterId}</td> */}\r\n                              {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                              <td> {history.title}</td>\r\n                              <td> {parse(history.body)}</td>\r\n                              {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <td>\r\n                                    <Button\r\n                                      variant='light'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        editHistoryHandler(history.chapterId)\r\n                                      }\r\n                                    >\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                      variant='danger'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        deleteHistoryHandler(history.chapterId)\r\n                                      }\r\n                                    >\r\n                                      <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                  </td>\r\n                                )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HistoryScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.Styles.js",[],["687","688"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegisterScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\vissionReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\announcementReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\missionReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\historyReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\historyConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\vissionConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\missionConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\announcementConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\announcementAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\missionActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\vissionActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\historyActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\imageReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\imageConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\imageActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.js",["689","690","691","692"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Image, Row, Col, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  listUsers,\r\n  deleteUser,\r\n  listPendingUsers,\r\n  deletePendingUser,\r\n  createAdminUser,\r\n  deleteAdminUser,\r\n  getUserProfile,\r\n} from '../../actions/userActions';\r\nimport * as S from './MembersScreen.Styles';\r\nimport { listChapters } from '../../actions/chapterActions';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n// import { COLUMNS } from './MemberColumns';\r\nimport RTable from '../../components/Table/RTable';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MembersScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [columnsAdmin, setColumnsAdmin] = useState([]);\r\n  const usersRef = useRef();\r\n\r\n  // const chapterList = useSelector((state) => state.chapterList);\r\n  // const { loading, error, chapters } = chapterList;\r\n\r\n  const userPendingList = useSelector((state) => state.userPendingList);\r\n  const {\r\n    loading: pendingUsersLoading,\r\n    error: pendingUsersError,\r\n    pendingUsers,\r\n  } = userPendingList;\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const {\r\n    loading: userListLoading,\r\n    error: userListError,\r\n    success: userListSuccess,\r\n    users,\r\n  } = userList;\r\n\r\n  usersRef.current = users;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterDelete = useSelector((state) => state.chapterDelete);\r\n  const { success: successDelete } = chapterDelete;\r\n\r\n  const userCreateAdmin = useSelector((state) => state.userCreateAdmin);\r\n  const { success: successAdmin } = userCreateAdmin;\r\n\r\n  const userDeleteAdmin = useSelector((state) => state.userDeleteAdmin);\r\n  const { success: successDeleteAdmin } = userDeleteAdmin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUserProfile());\r\n      dispatch(listChapters());\r\n      dispatch(listPendingUsers());\r\n      dispatch(listUsers());\r\n\r\n      if (\r\n        userInfo.userRole === 'admin' ||\r\n        userInfo.userRole === 'systemAdmin'\r\n      ) {\r\n        setColumnsAdmin([\r\n          {\r\n            Header: 'Id',\r\n            accessor: 'memberId',\r\n            Filter: ColumnFilter,\r\n          },\r\n          // {\r\n          //   Header: 'Name',\r\n          //   accessor: 'userName',\r\n          // },\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'member.firstName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'member.lastName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'City',\r\n            accessor: 'member.city',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'State',\r\n            accessor: 'member.state',\r\n            Filter: ColumnFilter,\r\n          },\r\n\r\n          {\r\n            Header: 'Actions',\r\n            accessor: 'actions',\r\n            Cell: (props) => {\r\n              const rowIdx = props.row.id;\r\n              return (\r\n                <>\r\n                  <span onClick={() => editUserHandler(rowIdx)}>\r\n                    <i\r\n                      className='far fa-edit action'\r\n                      style={{ color: '#4285F4' }}\r\n                    ></i>\r\n                  </span>\r\n\r\n                  {/* <Button\r\n                    // style={{ color: '#F4B400' }}\r\n                    variant='warning'\r\n                    className='btn btn-sm ml-2 mr-2 btn-outline-warning rounded'\r\n                    onClick={() => createAdminHandler(rowIdx)}\r\n                  >\r\n                    Make admin\r\n                  </Button> */}\r\n\r\n                  <Link\r\n                    className='btn btn-outline-warning btn-sm ml-2 rounded'\r\n                    onClick={() => createAdminHandler(rowIdx)}\r\n                  >\r\n                    Make admin\r\n                  </Link>\r\n\r\n                  <span onClick={() => deleteUserHandler(rowIdx)}>\r\n                    <i\r\n                      className='fas fa-trash action ml-2'\r\n                      style={{ color: 'red' }}\r\n                    ></i>\r\n                  </span>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        ]);\r\n      } else {\r\n        setColumnsAdmin([\r\n          {\r\n            Header: 'Id',\r\n            accessor: 'memberId',\r\n            Filter: ColumnFilter,\r\n          },\r\n          // {\r\n          //   Header: 'Name',\r\n          //   accessor: 'userName',\r\n          // },\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'member.firstName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'member.lastName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'City',\r\n            accessor: 'member.city',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'State',\r\n            accessor: 'member.state',\r\n            Filter: ColumnFilter,\r\n          },\r\n        ]);\r\n      }\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successAdmin,\r\n    successDeleteAdmin,\r\n  ]);\r\n  const editUserHandler = (rowIndex) => {\r\n    const id = usersRef.current[rowIndex].memberId;\r\n    // console.log(rowIndex);\r\n\r\n    history.push(`/admin/users/${id}/edit`);\r\n    // props.history.push(\"/tutorials/\" + id);\r\n    console.log(id);\r\n  };\r\n\r\n  const deleteUserHandler = (rowIndex) => {\r\n    const id = usersRef.current[rowIndex].memberId;\r\n    if (window.confirm('Are you sure about deleting this User?')) {\r\n      dispatch(deleteUser(id));\r\n      // console.log(`User deleted: with id: ${id}`);\r\n    }\r\n  };\r\n\r\n  const deletePendingUserHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePendingUser(id));\r\n    }\r\n  };\r\n\r\n  const createAdminHandler = (rowIndex) => {\r\n    const id = usersRef.current[rowIndex].memberId;\r\n    if (window.confirm('Are you sure about making this user as Admin?')) {\r\n      dispatch(createAdminUser(id));\r\n    }\r\n  };\r\n\r\n  const deleteAdminHandler = (userId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteAdminUser(userId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n            <Row>\r\n              {/* 5th card section : All Email Verified Pending User List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {userInfo &&\r\n              (userInfo.userRole === 'admin' ||\r\n                userInfo.userRole === 'systemAdmin') ? (\r\n                pendingUsersLoading ? (\r\n                  <Loader />\r\n                ) : pendingUsersError ? (\r\n                  <Message variant='danger'>{pendingUsersError}</Message>\r\n                ) : pendingUsers && pendingUsers.length !== 0 ? (\r\n                  <Col\r\n                    md={{ span: 12, order: 1 }}\r\n                    lg={{ span: 12, order: 1 }}\r\n                    className='mb-2 p-0'\r\n                    id='all-chapter'\r\n                  >\r\n                    <Card className='text-center' border='info'>\r\n                      <Card.Header as='h3' className='text-info'>\r\n                        Member Pending List\r\n                      </Card.Header>\r\n\r\n                      <>\r\n                        <Table\r\n                          striped\r\n                          bordered\r\n                          hover\r\n                          responsive\r\n                          className='table-sm'\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              <th>ID</th>\r\n                              {/* <th>IMAGE</th> */}\r\n                              <th>NAME</th>\r\n                              <th>EMAIL</th>\r\n                              <th>EMAIL VERIFIED</th>\r\n                              <th>PHONE</th>\r\n                              {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <>\r\n                                    <th>APPROVE</th>\r\n                                    <th>DELETE</th>\r\n                                  </>\r\n                                )}\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            {pendingUsers.map((pendingUser) => (\r\n                              <tr key={pendingUser.pendingId}>\r\n                                <td>{pendingUser.pendingId}</td>\r\n                                {/* <td>\r\n                                  {' '}\r\n                                  <Image src={user.image} thumbnail />\r\n                                </td> */}\r\n                                <td>\r\n                                  {pendingUser.firstName} {pendingUser.lastName}\r\n                                </td>\r\n                                <td>\r\n                                  <a href={`mailto: ${pendingUser.email}`}>\r\n                                    {' '}\r\n                                    {pendingUser.email}\r\n                                  </a>\r\n                                </td>\r\n                                <td>\r\n                                  {pendingUser.emailVerified === true ? (\r\n                                    <i\r\n                                      className='fas fa-check'\r\n                                      style={{ color: 'green' }}\r\n                                    ></i>\r\n                                  ) : (\r\n                                    <i\r\n                                      className='fas fa-times'\r\n                                      style={{ color: 'red' }}\r\n                                    ></i>\r\n                                  )}\r\n                                </td>\r\n                                <td> {pendingUser.primaryPhone}</td>\r\n\r\n                                {(userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <>\r\n                                    <td>\r\n                                      <LinkContainer\r\n                                        to={`/users/${pendingUser.pendingId}/pending`}\r\n                                      >\r\n                                        <Button\r\n                                          variant='light'\r\n                                          className='btn-sm'\r\n                                        >\r\n                                          <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                      </LinkContainer>\r\n                                    </td>\r\n                                    <td>\r\n                                      <Button\r\n                                        variant='danger'\r\n                                        className='btn-sm'\r\n                                        onClick={() =>\r\n                                          deletePendingUserHandler(\r\n                                            pendingUser.pendingId\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <i className='fas fa-trash'></i>\r\n                                      </Button>\r\n                                    </td>\r\n                                  </>\r\n                                )}\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </Table>\r\n                      </>\r\n                    </Card>\r\n                  </Col>\r\n                ) : null\r\n              ) : null}\r\n\r\n              {/* 5th card section : All Email Verified Pending User List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 6th card section : Admin List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-member'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    Admins\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {userListLoading ? (\r\n                      <Loader />\r\n                    ) : userListError ? (\r\n                      <Message variant='danger'>{userListError}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            {/* <th>Last Name</th> */}\r\n                            <th>EMAIL</th>\r\n                            <th>Phone</th>\r\n\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <>\r\n                                  {/* <th>EDIT/DELETE</th> */}\r\n                                  <th>Action</th>\r\n                                </>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {users &&\r\n                            users.map((user, index) => (\r\n                              <tr key={index}>\r\n                                {(user.userRole === 'admin' ||\r\n                                  user.userRole === 'systemAdmin') && (\r\n                                  <>\r\n                                    <td>{user.memberId}</td>\r\n                                    {/* <td>\r\n                                      {' '}\r\n                                      <Image src={user.member.firstName} />\r\n                                    </td> */}\r\n                                    <td> {user.userName}</td>\r\n                                    <td>\r\n                                      <a href={`mailto: ${user.email}`}>\r\n                                        {' '}\r\n                                        {user.email}\r\n                                      </a>\r\n                                    </td>\r\n                                    <td>{user.member.primaryPhone}</td>\r\n                                    {/* {(userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') && (\r\n                                      <td>\r\n                                        <LinkContainer\r\n                                          to={`/users/${user.memberId}/edit`}\r\n                                        >\r\n                                          <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                          >\r\n                                            <i className='fas fa-edit'></i>\r\n                                          </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button\r\n                                          variant='danger'\r\n                                          className='btn-sm'\r\n                                          onClick={() =>\r\n                                            deleteUserHandler(user.memberId)\r\n                                          }\r\n                                        >\r\n                                          <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                      </td>\r\n                                    )} */}\r\n                                    {(userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') &&\r\n                                      (user.userRole === 'member' ? (\r\n                                        <td>\r\n                                          <Button\r\n                                            variant='warning'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              createAdminHandler(user.memberId)\r\n                                            }\r\n                                          >\r\n                                            {' '}\r\n                                            Make ADMIN\r\n                                            {/* <i className='fas fa-trash'></i> */}\r\n                                          </Button>{' '}\r\n                                        </td>\r\n                                      ) : (\r\n                                        <td>\r\n                                          <Button\r\n                                            variant='success'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              deleteAdminHandler(user.memberId)\r\n                                            }\r\n                                          >\r\n                                            {' '}\r\n                                            Remove Admin\r\n                                            {/* <i className='fas fa-trash'></i> */}\r\n                                          </Button>\r\n                                        </td>\r\n                                      ))}\r\n                                  </>\r\n                                )}\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n              {/* 6th card section : Admin List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 7th card section : All Member List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-member'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    Chapter Members\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {userListLoading ? (\r\n                      <Loader />\r\n                    ) : userListError ? (\r\n                      <Message variant='danger'>{userListError}</Message>\r\n                    ) : (\r\n                      <>\r\n                        {users && users.length !== 0 && (\r\n                          <RTable users={users} COLUMNS={columnsAdmin} />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n              {/* 7th card section : All Member List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MembersScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\ImageCarousel.js",["693"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport { allImage, getHomeScreenImage } from '../../actions/imageActions';\r\n\r\nconst ImageCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const imageHomeScreen = useSelector((state) => state.imageHomeScreen);\r\n  const { loading, error, homeScreenImages } = imageHomeScreen;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHomeScreenImage());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel\r\n      pause='hover'\r\n      className='bg-dark'\r\n      controls={false}\r\n      indicators={false}\r\n      fade\r\n    >\r\n      {homeScreenImages &&\r\n        homeScreenImages.map((image, index) => (\r\n          <Carousel.Item key={index}>\r\n            <Link to={`/image/${image.imageId}`}>\r\n              <Image\r\n                src={image.image}\r\n                alt={image.imageDescription}\r\n                fluid\r\n                style={{ height: '500px', width: '100%' }}\r\n                className='chapterIconicImage'\r\n              />\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\HeaderCarousel.js",["694"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport { allImage, getNavbarImage } from '../../actions/imageActions';\r\n\r\nconst HeaderCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const imageNavbar = useSelector((state) => state.imageNavbar);\r\n  const { loading, error, images } = imageNavbar;\r\n\r\n  useEffect(() => {\r\n    dispatch(getNavbarImage());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel\r\n      pause='hover'\r\n      className='bg-dark'\r\n      controls={false}\r\n      indicators={false}\r\n    >\r\n      {images &&\r\n        images.map((image, index) => (\r\n          <Carousel.Item key={index}>\r\n            <Link to={`/image/${image.imageId}`}>\r\n              <Image\r\n                src={image.image}\r\n                alt={image.imageDescription}\r\n                fluid\r\n                style={{ height: '100px' }}\r\n              />\r\n\r\n              {/* <Carousel.Caption className='carousel-caption'>\r\n              <h2>{image.imageName}</h2>\r\n            </Carousel.Caption> */}\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default HeaderCarousel;\r\n",["695","696"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\committeeReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\committeeConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\committeeActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MemberColumns.js",[],["697","698"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\GlobalFilter.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\ColumnFilter.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\RTable.js",["699","700"],"import React, { useMemo } from 'react';\r\nimport { Button, Col, Row, Table } from 'react-bootstrap';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  useFilters,\r\n  usePagination,\r\n  useRowSelect,\r\n} from 'react-table';\r\nimport { Checkbox } from './CheckBox';\r\nimport GlobalFilter from './GlobalFilter';\r\n\r\nconst RTable = ({ users, COLUMNS }) => {\r\n  const data = useMemo(() => users, []);\r\n  const columns = useMemo(() => COLUMNS, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    // rows,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    selectedFlatRows,\r\n  } = useTable(\r\n    {\r\n      data: data,\r\n      columns: columns,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: 'selection',\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n            ),\r\n            Cell: ({ row }) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    }\r\n  );\r\n  console.log({\r\n    selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n  });\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <Table\r\n        {...getTableProps()}\r\n        striped\r\n        bordered\r\n        hover\r\n        responsive\r\n        className='table-sm'\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? '  ▼'\r\n                        : '  ▲'\r\n                      : ''}\r\n                  </span>\r\n                  {/* <div>{column.canFilter ? column.render('Filter') : null}</div> */}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {/* <pre>\r\n          <code>\r\n            {JSON.stringify({\r\n              selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n            })}\r\n          </code>\r\n        </pre> */}\r\n      </Table>\r\n      <Row className='justify-content-md-center'>\r\n        <Col>\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {'<<'}\r\n          </Button>\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {' '}\r\n            Previous\r\n            {/* <i className='fas fa-trash'></i> */}\r\n          </Button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span>\r\n            | Go to page:{' '}\r\n            <input\r\n              type='number'\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const pageNumber = e.target.value\r\n                  ? Number(e.target.value) - 1\r\n                  : 0;\r\n                gotoPage(pageNumber);\r\n              }}\r\n              style={{ width: '50px' }}\r\n              min={1}\r\n            />\r\n          </span>\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => setPageSize(Number(e.target.value))}\r\n          >\r\n            {[2, 5, 10, 25, 50, 100].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {' '}\r\n            Next\r\n            {/* <i className='fas fa-trash'></i> */}\r\n          </Button>\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {'>>'}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RTable;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\CheckBox.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\SearchBar\\SearchBar.js",[],["701","702"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\Announcement.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\Mission.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\Vission.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\History.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\PauseOnHover.js",["703"],"import React, { Component, useEffect } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport { getNavbarImage } from '../../actions/imageActions';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\n\r\nconst PauseOnHover = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const imageNavbar = useSelector((state) => state.imageNavbar);\r\n  const { loading, error, images } = imageNavbar;\r\n\r\n  useEffect(() => {\r\n    dispatch(getNavbarImage());\r\n  }, [dispatch]);\r\n\r\n  var settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    arrows: false,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    pauseOnHover: true,\r\n    adaptiveHeight: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1300,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          dots: false,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          dots: false,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n          initialSlide: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {images &&\r\n            images.map((image, index) => (\r\n              <div key={index}>\r\n                <Link to={`/image/${image.imageId}`}>\r\n                  <Image\r\n                    src={image.image}\r\n                    alt={image.imageDescription}\r\n                    fluid\r\n                    style={{ width: '100%' }}\r\n                    className='navbarEventImage'\r\n                  />\r\n\r\n                  {/* <Carousel.Caption className='carousel-caption'>\r\n              <h2>{image.imageName}</h2>\r\n            </Carousel.Caption> */}\r\n                </Link>\r\n              </div>\r\n            ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PauseOnHover;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\EditProfileScreen.js",["704","705","706","707","708"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/FormContainer';\r\nimport {\r\n  getUserDetailsById,\r\n  getUserProfile,\r\n  updateUser,\r\n  updateUserProfile,\r\n} from '../../actions/userActions';\r\nimport {\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_RESET,\r\n} from '../../constants/userConstants';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst EditProfileScreen = ({ match, history }) => {\r\n  // const memberId = match.params.id;\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [address2, setAddress2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [alternatePhone, setAlternatePhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [alternateEmail, setAlternateEmail] = useState('');\r\n  const [certificates, setCertificates] = useState('');\r\n  const [profilePicture, setProfilePicture] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdateProfile;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      if (successUpdate) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        history.push('/profile');\r\n      } else {\r\n        if (!user.memberId) {\r\n          dispatch(getUserProfile());\r\n        } else {\r\n          setFirstName(user.firstName);\r\n          setMInit(user.mInit);\r\n          setLastName(user.lastName);\r\n          setAddress1(user.address1);\r\n          setAddress2(user.address2);\r\n          setCity(user.city);\r\n          setState(user.state);\r\n          setZipcode(user.zipcode);\r\n          setPrimaryPhone(user.primaryPhone);\r\n          setAlternatePhone(user.alternatePhone);\r\n          setDegree(user.degree);\r\n          setDegreeYear(new Date(user.degreeYear).getFullYear());\r\n          setMajor(user.major);\r\n          setCollegeName(user.collegeName);\r\n          setEmail(user.primaryEmail);\r\n          setAlternateEmail(user.alternateEmail);\r\n          setProfilePicture(user.profilePicture);\r\n          setCertificates(user.certificates);\r\n        }\r\n      }\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n\r\n    // }\r\n    // }\r\n  }, [dispatch, history, user, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setProfilePicture(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      updateUserProfile({\r\n        // id,\r\n\r\n        firstName,\r\n        mInit,\r\n        lastName,\r\n        address1,\r\n        address2,\r\n        city,\r\n        state,\r\n        zipcode,\r\n        alternateEmail,\r\n        primaryPhone,\r\n        alternatePhone,\r\n        degree,\r\n        degreeYear,\r\n        major,\r\n        collegeName,\r\n        certificates,\r\n        profilePicture,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {userInfo.userRole === 'systemAdmin' ? (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-info'\r\n          to='/systemAdmin'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      ) : (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-info'\r\n          to='/profile'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      <>\r\n        <Card border='info'>\r\n          <Card.Header className='text-center text-info' as='h5'>\r\n            Edit Profile\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n              <Row>\r\n                <Col md={8}>\r\n                  <Form onSubmit={submitHandler}>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Name:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>M. Initial: </Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='mInit'>\r\n                                      <Form.Control\r\n                                        type='mInit'\r\n                                        placeholder=' Please Enter Your M. Initial: Mr / Ms'\r\n                                        value={mInit}\r\n                                        onChange={(e) =>\r\n                                          setMInit(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>First Name: </Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='firstName'>\r\n                                      <Form.Control\r\n                                        type='firstName'\r\n                                        placeholder='Please Enter Your First Name..'\r\n                                        value={firstName}\r\n                                        onChange={(e) =>\r\n                                          setFirstName(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Last Name: </Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='lastName'>\r\n                                      <Form.Control\r\n                                        type='lastName'\r\n                                        placeholder='Please Enter Your Last Name..'\r\n                                        value={lastName}\r\n                                        onChange={(e) =>\r\n                                          setLastName(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Education:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Highest degree Earned :</Col>\r\n                                  <Col>\r\n                                    {' '}\r\n                                    <Form.Group controlId='degree'>\r\n                                      <Form.Control\r\n                                        type='degree'\r\n                                        placeholder='Enter Your Last Degree Received..'\r\n                                        value={degree}\r\n                                        onChange={(e) =>\r\n                                          setDegree(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>College/University Name :</Col>\r\n                                  <Col>\r\n                                    {' '}\r\n                                    <Form.Group controlId='collegeName'>\r\n                                      <Form.Control\r\n                                        type='collegeName'\r\n                                        placeholder='Enter Your University/College Name..'\r\n                                        value={collegeName}\r\n                                        onChange={(e) =>\r\n                                          setCollegeName(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Year the Degree Earned :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='degreeYear'>\r\n                                      <Form.Control\r\n                                        type='degreeYear'\r\n                                        placeholder='Enter The Year of Degree Awarded..'\r\n                                        value={degreeYear}\r\n                                        onChange={(e) =>\r\n                                          setDegreeYear(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Major :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='major'>\r\n                                      <Form.Control\r\n                                        type='major'\r\n                                        placeholder='Enter Your Major..'\r\n                                        value={major}\r\n                                        onChange={(e) =>\r\n                                          setMajor(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Contact Details:</Col>\r\n                          <Col>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Address :</Col>\r\n                                  <Col>\r\n                                    {' '}\r\n                                    <Form.Group controlId='address1'>\r\n                                      <Form.Label>Primary Address</Form.Label>\r\n                                      <Form.Control\r\n                                        type='address1'\r\n                                        placeholder='Please Enter Address..'\r\n                                        value={address1}\r\n                                        onChange={(e) =>\r\n                                          setAddress1(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='address2'>\r\n                                      <Form.Label>\r\n                                        Alternative Address\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='address2'\r\n                                        placeholder='Please Enter Address..'\r\n                                        value={address2}\r\n                                        onChange={(e) =>\r\n                                          setAddress2(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>State :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='state'>\r\n                                      <Form.Control\r\n                                        type='state'\r\n                                        placeholder='Enter State..'\r\n                                        value={state}\r\n                                        onChange={(e) =>\r\n                                          setState(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>City :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='city'>\r\n                                      <Form.Control\r\n                                        type='city'\r\n                                        placeholder='Enter City..'\r\n                                        value={city}\r\n                                        onChange={(e) =>\r\n                                          setCity(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Zipcode :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='zipcode'>\r\n                                      <Form.Control\r\n                                        type='zipcode'\r\n                                        placeholder='Enter Zipcode..'\r\n                                        value={zipcode}\r\n                                        onChange={(e) =>\r\n                                          setZipcode(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Phone Number :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='primaryPhone'>\r\n                                      <Form.Label>\r\n                                        Primary Phone Number\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='primaryPhone'\r\n                                        placeholder='Enter Your Phone Number..'\r\n                                        value={primaryPhone}\r\n                                        onChange={(e) =>\r\n                                          setPrimaryPhone(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='alternatePhone'>\r\n                                      <Form.Label>\r\n                                        Alternate Phone Number\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='alternatePhone'\r\n                                        placeholder='Enter additional Phone Number..'\r\n                                        value={alternatePhone}\r\n                                        onChange={(e) =>\r\n                                          setAlternatePhone(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={4}>Email :</Col>\r\n                                  <Col>\r\n                                    <Form.Group controlId='email'>\r\n                                      <Form.Label>Email Address</Form.Label>\r\n                                      <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter Email..'\r\n                                        value={email}\r\n                                        onChange={(e) =>\r\n                                          setEmail(e.target.value)\r\n                                        }\r\n                                        readOnly\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='alternateEmail'>\r\n                                      <Form.Label>\r\n                                        Alternate Email Address\r\n                                      </Form.Label>\r\n                                      <Form.Control\r\n                                        type='alternateEmail'\r\n                                        placeholder='Enter another Email..'\r\n                                        value={alternateEmail}\r\n                                        onChange={(e) =>\r\n                                          setAlternateEmail(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>{' '}\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Profile Picture:</Col>\r\n                          <Col>\r\n                            <Form.Group controlId='profilePicture'>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url..'\r\n                                value={profilePicture}\r\n                                onChange={(e) =>\r\n                                  setProfilePicture(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                              <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                              ></Form.File>\r\n                              {uploading && <Loader />}\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n\r\n                      <Button type='submit' variant='primary' block>\r\n                        Update\r\n                      </Button>\r\n                    </ListGroup>\r\n                  </Form>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Card.Header>Profile Picture</Card.Header>\r\n                  <Card.Img src={user.profilePicture} variant='top' />\r\n\r\n                  <Card.Header>Certificate</Card.Header>\r\n                  <Card.Img src={user.certificates} variant='top' />\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </Card.Body>\r\n          {/* <Card.Footer className='text-muted'>2 days ago</Card.Footer> */}\r\n        </Card>\r\n      </>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditProfileScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeMemberScreens.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AboutScreen\\About.js",["709","710","711","712","713","714","715","716"],"import React, { useEffect } from 'react';\r\nimport { Card, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getAnnouncementById } from '../../actions/announcementAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport parse from 'html-react-parser';\r\n\r\nconst About = ({ history, match }) => {\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Card.Header className='text-info' as='h2'>\r\n          Overview of AABEA\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <section class='article-content clearfix' itemprop='articleBody'>\r\n            <p className='text-justify'>\r\n              <span>\r\n                American Association of Bangladeshi Engineers and Architects,\r\n                Inc., (AABEA) (www.aabea.org) is a non-profit professional\r\n                organization established in 1984 and registered in the State of\r\n                Pennsylvania. At present, it consists of 12 Chapters in various\r\n                states/regions nationwide, and a Central Executive Committee,\r\n                which rotates every two years among Chapters’ areas. The mission\r\n                of the organization is to provide services to its members as\r\n                well as greater Bangladeshi community in various areas in North\r\n                America. The present Central Executive Committee (CEC) is\r\n                located in Silicon Valley, California.&nbsp; All services\r\n                provided under the auspices of AABEA are funded from generous\r\n                contributions by its members and other community members.\r\n              </span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp;</p>\r\n            <p className='text-justify'>\r\n              <span>\r\n                Some of the services that AABEA has provided during last few\r\n                years are:\r\n              </span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp;</p>\r\n            <ol start='1'>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  Provided Career Development Services for Engineers,\r\n                  Architects, and IT professionals through various workshops and\r\n                  technical seminars;\r\n                </span>\r\n              </li>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  Provided Engineer-in- Training (EIT), Professional Engineering\r\n                  (PE), and AutoCAD software training classes for Bangladeshi\r\n                  American students and engineers;\r\n                </span>\r\n              </li>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  Provided various workshops for women to enhance their\r\n                  participation and skills in workplace;\r\n                </span>\r\n              </li>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  Organized Science Fair and Art competitions for K1-12 students\r\n                  annually as part of the youth development program;\r\n                </span>\r\n              </li>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  Providing limited scholarships for needy Bangladeshi students\r\n                  in pursuing their college education{' '}\r\n                </span>\r\n              </li>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  AABEA has a job search sub-committee that continuously helps\r\n                  job seekers to find jobs, to prepare resume and to enhance\r\n                  interview skill;\r\n                </span>\r\n              </li>\r\n              <li className='text-justify'>\r\n                <span>\r\n                  AABEA hosts various Job Fairs by inviting Federal agencies as\r\n                  well as public and private enterprises.\r\n                </span>\r\n              </li>\r\n            </ol>\r\n            <p>&nbsp;</p>\r\n            <p>&nbsp;</p>\r\n            <p className='text-justify'>\r\n              <span>\r\n                In addition, AABEA offers educational and research support to\r\n                improve technical education in Bangladesh so that their\r\n                graduates can compete in the world market. &nbsp;AABEA, in\r\n                collaboration with Intel Engineers and Intel Foundation’s\r\n                matching grant, developed a new state-of-the-art computer&nbsp;\r\n                lab at Bangladesh University of Engineering and Technology\r\n                (BUET), Dhaka, and another at Chittagong University of\r\n                Engineering &amp; Technology (CUET), Bangladesh. This effort\r\n                included development of the laboratory, development of modem\r\n                curricula for undergraduate engineering program and initiating\r\n                Very Large Scale Integrated (VLSI) Circuit area graduate\r\n                program. The cost of this program stood at $160,000.00 at BUET\r\n                and $20,000 at CUET. AABEA also developed the Robert Noyce\r\n                Simulation Lab (RNSL) and Linux Lab for BUET with necessary\r\n                Ansoft SW design package license.&nbsp; AABEA also initiated a\r\n                Joint Research Center for Advanced System Engineering (JRCASE)\r\n                project to facilitate Education, Research &amp; Development\r\n                (R&amp;D) on Very Large Scale Integrated (VLSI) Circuit at East\r\n                West University (EWU), Dhaka, and at CUET, Bangladesh.&nbsp; So\r\n                far, about $30,000.00 has been spent on this project\r\n              </span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n\r\n            <p className='text-justify'>\r\n              <span>\r\n                AABEA also developed the marketing tools for Bangladeshi IT\r\n                companies to sell their products in US market places in\r\n                collaboration with the World Bank.\r\n              </span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>\r\n              <span></span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p className='text-justify'>\r\n              <span>\r\n                &nbsp;As for its humanitarian activities, AABEA raised funds to\r\n                help the disaster-stricken areas of the world, including cyclone\r\n                disasters in Bangladesh, earthquake in Haiti, and\r\n                tsunami-devastated countries, in association with Salvation Army\r\n                and Bangladesh Mission in USA to name a few.\r\n              </span>\r\n            </p>\r\n          </section>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SettingScreen\\SettingScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\eventReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\eventConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\eventActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventNewScreen.js",["717","718","719","720","721","722","723"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../actions/userActions';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { USER_REGISTER_RESET } from '../../constants/userConstants';\r\nimport swal from 'sweetalert';\r\nimport { newEvent } from '../../actions/eventActions';\r\nimport { EVENT_NEW_RESET } from '../../constants/eventConstants';\r\n\r\nconst EventNewScreen = ({ location, history }) => {\r\n  // const [username, setUsername] = useState('');\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n  const [eventStartDate, setEventStartDate] = useState('');\r\n  const [eventEndDate, setEventEndDate] = useState('');\r\n  const [eventStartTime, setEventStartTime] = useState('');\r\n  const [eventEndTime, setEventEndTime] = useState('');\r\n  const [eventAddress, setEventAddress] = useState('');\r\n  const [adultFee, setAdultFee] = useState(0);\r\n  const [minorFee, setMinorFee] = useState(0);\r\n  const [cap, setCap] = useState(0);\r\n  const [startDate, setStartDate] = useState('');\r\n  // const [certificate, setCertificate] = useState('');\r\n  // const [email, setEmail] = useState('');\r\n  // const [password, setPassword] = useState('');\r\n  // const [confirmPassword, setConfirmPassword] = useState('');\r\n  // const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const eventNew = useSelector((state) => state.eventNew);\r\n  const { loading, error, success, newCreatedEvent } = eventNew;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      !(userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      // console.log(success);\r\n      swal('Success!', 'New event createed successfully', 'success').then(\r\n        (value) => {\r\n          history.push(`/event/${newCreatedEvent.eventId}`);\r\n          dispatch({ type: EVENT_NEW_RESET });\r\n        }\r\n      );\r\n    } else if (error) {\r\n      console.log(error);\r\n      swal('Error!', error, 'error');\r\n    }\r\n  }, [dispatch, history, success, error]);\r\n\r\n  // const uploadFileHandler = async (e) => {\r\n  //   const file = e.target.files[0];\r\n  //   const formData = new FormData();\r\n  //   formData.append('image', file);\r\n  //   setUploading(true);\r\n\r\n  //   try {\r\n  //     const config = {\r\n  //       headers: {\r\n  //         'Content-Type': 'multipart/form-data',\r\n  //       },\r\n  //     };\r\n\r\n  //     const { data } = await axios.post('/api/upload', formData, config);\r\n  //     setCertificate(data);\r\n  //     setUploading(false);\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     setUploading(false);\r\n  //   }\r\n  // };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      // Dispatch Register\r\n      // setStartDate(eventStartDate + 'T' + eventStartTime);\r\n      const eventDate = [\r\n        { value: new Date(eventStartDate + 'T' + eventStartTime) },\r\n        { value: new Date(eventEndDate + 'T' + eventEndTime) },\r\n      ];\r\n\r\n      // console.log(startDate);\r\n      console.log(eventStartDate);\r\n      console.log(eventStartTime);\r\n      console.log(eventDate);\r\n\r\n      dispatch(\r\n        newEvent(\r\n          eventName,\r\n          eventDescription,\r\n          // eventStartDate,\r\n          // eventEndDate,\r\n          // eventStartTime,\r\n          // eventEndTime,\r\n          eventDate,\r\n          eventAddress,\r\n          adultFee,\r\n          minorFee,\r\n          cap\r\n        )\r\n      );\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Link className='btn btn-light my-3 btn-sm btn-outline-info' to='/events'>\r\n        Cancel\r\n      </Link>\r\n      {/* Card Start */}\r\n      <Card border='info'>\r\n        <Card.Header className='text-center text-info' as='h5'>\r\n          New Event\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <Message variant='success'>{success}</Message>\r\n          ) : (\r\n            <>\r\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\r\n                <>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Event Name</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId='eventName'>\r\n                      <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Event Name'\r\n                        value={eventName}\r\n                        onChange={(e) => setEventName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Description</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId='eventDescription'>\r\n                      <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Event Description'\r\n                        value={eventDescription}\r\n                        onChange={(e) => setEventDescription(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Date</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='5' controlId='eventStartDate'>\r\n                      <Form.Label>Start Date:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='date'\r\n                        placeholder='Enter Your Start Date'\r\n                        value={eventStartDate}\r\n                        onChange={(e) => setEventStartDate(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md='5' controlId='eventEndDate'>\r\n                      <Form.Label>End Date:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='date'\r\n                        placeholder='Enter The End Date'\r\n                        value={eventEndDate}\r\n                        onChange={(e) => setEventEndDate(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      md={{ span: 5, offset: 2 }}\r\n                      controlId='eventStartTime'\r\n                    >\r\n                      <Form.Label>Start Time:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='time'\r\n                        placeholder='Enter Start time'\r\n                        value={eventStartTime}\r\n                        onChange={(e) => setEventStartTime(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md='5' controlId='eventEndTime'>\r\n                      <Form.Label>Start Time:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='time'\r\n                        placeholder='Enter End time'\r\n                        value={eventEndTime}\r\n                        onChange={(e) => setEventEndTime(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Event Location</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='eventAddress'>\r\n                      <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Location Address'\r\n                        value={eventAddress}\r\n                        onChange={(e) => setEventAddress(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Adult Fee</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='adultFee'>\r\n                      <Form.Control\r\n                        required\r\n                        type='number'\r\n                        min='0'\r\n                        placeholder='Set Audult Fee'\r\n                        value={adultFee}\r\n                        onChange={(e) => setAdultFee(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Minor Fee</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='minorFee'>\r\n                      <Form.Control\r\n                        required\r\n                        type='number'\r\n                        min='0'\r\n                        placeholder='Set Minor Fee'\r\n                        value={minorFee}\r\n                        onChange={(e) => setMinorFee(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Cap</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='cap'>\r\n                      <Form.Control\r\n                        required\r\n                        type='number'\r\n                        min='0'\r\n                        placeholder='Set cap'\r\n                        value={cap}\r\n                        onChange={(e) => setCap(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                </>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col md={{ span: 10, offset: 2 }}>\r\n                    <Button type='submit' variant='info' block>\r\n                      Create Event\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n        {/* <Card.Footer className='text-muted text-right'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              Have an Account?{' '}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                <span className='text-info'>Login</span>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer> */}\r\n      </Card>\r\n      {/* Card End */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventNewScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventByIdScreen.js",["724","725","726","727","728","729","730","731","732","733"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getAnnouncementById } from '../../actions/announcementAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport parse from 'html-react-parser';\r\nimport {\r\n  eventAllContact,\r\n  getEventById,\r\n  getEventContactById,\r\n  newEventContact,\r\n  publishEvent,\r\n  unpublishEvent,\r\n  updateEventContactById,\r\n  deleteEventContact,\r\n  updateEventById,\r\n} from '../../actions/eventActions';\r\nimport {\r\n  EVENT_CONTACT_BY_ID_RESET,\r\n  EVENT_CONTACT_NEW_RESET,\r\n  EVENT_CONTACT_UPDATE_BY_ID_RESET,\r\n  EVENT_PUBLISH_RESET,\r\n  EVENT_UNPUBLISH_RESET,\r\n} from '../../constants/eventConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst EventByIdScreen = ({ history, match }) => {\r\n  const id = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [addEventContact, setAddEventContact] = useState(false);\r\n  const [editEventContact, setEditEventContact] = useState(false);\r\n  const [eventContactId, setEventContactId] = useState('');\r\n  const [memberId, setMemberId] = useState('');\r\n  const [positionName, setPositionName] = useState('');\r\n  const [contactEmail, setContactEmail] = useState('');\r\n  const [contactPhone, setContactPhone] = useState('');\r\n  // const [id, setId] = useState('');\r\n\r\n  const [editEvent, setEditEvent] = useState(false);\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n  const [eventStartDate, setEventStartDate] = useState('');\r\n  const [eventEndDate, setEventEndDate] = useState('');\r\n  const [eventStartTime, setEventStartTime] = useState('');\r\n  const [eventEndTime, setEventEndTime] = useState('');\r\n  const [eventAddress, setEventAddress] = useState('');\r\n  const [adultFee, setAdultFee] = useState(0);\r\n  const [minorFee, setMinorFee] = useState(0);\r\n  const [cap, setCap] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const eventById = useSelector((state) => state.eventById);\r\n  const { loading, error, event } = eventById;\r\n\r\n  const eventUpdate = useSelector((state) => state.eventUpdate);\r\n  const {\r\n    loading: eventUpdateLoading,\r\n    error: eventUpdateError,\r\n    success: eventUpdateSuccess,\r\n    event: updatedEvent,\r\n  } = eventUpdate;\r\n\r\n  const eventContactNew = useSelector((state) => state.eventContactNew);\r\n  const {\r\n    loading: eventContactNewLoading,\r\n    error: eventContactNewError,\r\n    success,\r\n  } = eventContactNew;\r\n\r\n  const eventContactAll = useSelector((state) => state.eventContactAll);\r\n  const {\r\n    loading: eventContactsLoading,\r\n    error: eventContactsError,\r\n    eventContacts,\r\n  } = eventContactAll;\r\n\r\n  const eventContactById = useSelector((state) => state.eventContactById);\r\n  const { success: eventContactByIdSuccess, eventContact } = eventContactById;\r\n\r\n  const eventContactUpdate = useSelector((state) => state.eventContactUpdate);\r\n  const { success: eventContactUpdateSuccess } = eventContactUpdate;\r\n\r\n  const eventContactDelete = useSelector((state) => state.eventContactDelete);\r\n  const { success: successDelete } = eventContactDelete;\r\n\r\n  const eventPublish = useSelector((state) => state.eventPublish);\r\n  const {\r\n    loading: eventPublishLoading,\r\n    error: eventPublishError,\r\n    success: eventPublishSuccess,\r\n  } = eventPublish;\r\n\r\n  const eventUnpublish = useSelector((state) => state.eventUnpublish);\r\n  const {\r\n    loading: eventUnpublishLoading,\r\n    error: eventUnpublishError,\r\n    success: eventUnpublishSuccess,\r\n  } = eventUnpublish;\r\n\r\n  useEffect(() => {\r\n    dispatch(getEventById(id));\r\n    dispatch(eventAllContact(id));\r\n\r\n    if (userInfo) {\r\n      dispatch({ type: EVENT_CONTACT_NEW_RESET });\r\n    }\r\n    // else {\r\n    //   history.push('/login');\r\n    // }\r\n\r\n    // if (eventUpdateSuccess) {\r\n    //   setEventName(updatedEvent.eventName);\r\n    //   setEventDescription(updatedEvent.eventDescription);\r\n    //   setEventStartDate(new Date(updatedEvent.eventDate[0].value));\r\n    //   setEventEndDate(new Date(updatedEvent.eventDate[1].value));\r\n    //   // setEventStartTime();\r\n    //   // setEventEndTime();\r\n    //   setEventAddress(updatedEvent.eventAddress);\r\n    //   setAdultFee(updatedEvent.adultFee);\r\n    //   setMinorFee(updatedEvent.minorFee);\r\n    //   setCap(updatedEvent.cap);\r\n    // }\r\n\r\n    if (success || eventContactUpdateSuccess) {\r\n      setAddEventContact(false);\r\n      setEditEventContact(false);\r\n\r\n      setEventContactId('');\r\n      setMemberId('');\r\n      setPositionName('');\r\n      setContactEmail('');\r\n      setContactPhone('');\r\n      dispatch({ type: EVENT_CONTACT_BY_ID_RESET });\r\n    }\r\n\r\n    if (eventPublishSuccess || eventUnpublishSuccess) {\r\n      swal(\r\n        'Success!',\r\n        eventPublishSuccess || eventUnpublishSuccess,\r\n        'success'\r\n      ).then((value) => {\r\n        history.push('/events');\r\n        dispatch({ type: EVENT_PUBLISH_RESET });\r\n        dispatch({ type: EVENT_UNPUBLISH_RESET });\r\n      });\r\n    } else if (eventPublishError || eventUnpublishError) {\r\n      swal('Error!', eventPublishError || eventUnpublishError, 'error');\r\n    }\r\n\r\n    if (eventContactByIdSuccess) {\r\n      setAddEventContact(true);\r\n      setEditEventContact(true);\r\n      setEventContactId(eventContact.eventContactId);\r\n      setMemberId(eventContact.memberId);\r\n      setPositionName(eventContact.positionName);\r\n      setContactEmail(eventContact.contactEmail);\r\n      setContactPhone(eventContact.contactPhone);\r\n\r\n      // setId(announcement.announcementId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    id,\r\n    success,\r\n    eventUpdateSuccess,\r\n    eventContactByIdSuccess,\r\n    eventContactUpdateSuccess,\r\n    successDelete,\r\n    eventPublishSuccess,\r\n    eventUnpublishSuccess,\r\n    eventUnpublishSuccess,\r\n    eventUnpublishError,\r\n  ]);\r\n\r\n  const addNewEventContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddEventContact(!addEventContact);\r\n    setMemberId('');\r\n    setPositionName('');\r\n    setContactEmail('');\r\n    setContactPhone('');\r\n    setEditEventContact(false);\r\n    dispatch({ type: EVENT_CONTACT_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editEventContact) {\r\n      dispatch(\r\n        updateEventContactById(\r\n          eventContactId,\r\n          memberId,\r\n          positionName,\r\n          contactEmail,\r\n          contactPhone\r\n        )\r\n      );\r\n    } else {\r\n      // setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(\r\n        newEventContact(id, memberId, positionName, contactEmail, contactPhone)\r\n      );\r\n    }\r\n  };\r\n\r\n  const editEventContactHandler = (id) => {\r\n    dispatch({ type: EVENT_CONTACT_UPDATE_BY_ID_RESET });\r\n    // console.log(rowIndex);\r\n    console.log(id);\r\n    dispatch(getEventContactById(id));\r\n  };\r\n\r\n  const deleteEventContactHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteEventContact(id));\r\n    }\r\n  };\r\n\r\n  const editEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditEvent(!editEvent);\r\n\r\n    setEventName(event.eventName);\r\n    setEventDescription(event.eventDescription);\r\n    setEventStartDate(new Date(event.eventDate[0].value));\r\n    setEventEndDate(new Date(event.eventDate[1].value));\r\n    setEventStartTime();\r\n    setEventEndTime();\r\n    setEventAddress(event.eventAddress);\r\n    setAdultFee(event.adultFee);\r\n    setMinorFee(event.minorFee);\r\n    setCap(event.cap);\r\n    // dispatch({ type: EVENT_CONTACT_UPDATE_BY_ID_RESET });\r\n    // console.log(rowIndex);\r\n    // console.log(id);\r\n    // dispatch(getEventContactById(id));\r\n  };\r\n\r\n  const updateEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditEvent(!editEvent);\r\n    console.log(eventName);\r\n    const eventDate = [\r\n      { value: new Date(eventStartDate) },\r\n      { value: new Date(eventEndDate) },\r\n    ];\r\n    console.log(eventDate);\r\n\r\n    dispatch(\r\n      updateEventById(\r\n        id,\r\n        eventName,\r\n        eventDescription,\r\n        // eventStartDate,\r\n        // eventEndDate,\r\n        // eventStartTime,\r\n        // eventEndTime,\r\n        eventDate,\r\n        eventAddress,\r\n        adultFee,\r\n        minorFee,\r\n        cap\r\n      )\r\n    );\r\n  };\r\n\r\n  const publishEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(publishEvent(id));\r\n  };\r\n\r\n  const unpublishEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(unpublishEvent(id));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin') ? (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-info'\r\n          to='/events'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      ) : (\r\n        <Link className='btn btn-light my-3 btn-sm btn-outline-info' to='/'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : event ? (\r\n        event && (\r\n          <>\r\n            <Row>\r\n              <Col md={8} className='m-0 p-1'>\r\n                <Card>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Event Name:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='eventName'>\r\n                            <Form.Control\r\n                              required\r\n                              type='text'\r\n                              placeholder='Event Name'\r\n                              value={eventName}\r\n                              onChange={(e) => setEventName(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>{event.eventName}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Description:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='eventDescription'>\r\n                            <Form.Control\r\n                              required\r\n                              type='text'\r\n                              placeholder='Event Description'\r\n                              value={eventDescription}\r\n                              onChange={(e) =>\r\n                                setEventDescription(e.target.value)\r\n                              }\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>{event.eventDescription}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Date:</Col>\r\n                        <Col>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item className='p-0'>\r\n                              <Row>\r\n                                {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') &&\r\n                                editEvent ? (\r\n                                  <Form.Group\r\n                                    as={Col}\r\n                                    // md='5'\r\n                                    controlId='eventStartDate'\r\n                                  >\r\n                                    <Form.Label>Start Date:</Form.Label>\r\n                                    <Form.Control\r\n                                      required\r\n                                      type='text'\r\n                                      placeholder='Enter Your Start Date'\r\n                                      value={eventStartDate}\r\n                                      onChange={(e) =>\r\n                                        setEventStartDate(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                ) : (\r\n                                  <>\r\n                                    <Col md={4}>Start Date :</Col>\r\n                                    {event.eventDate &&\r\n                                    event.eventDate.length !== 0 ? (\r\n                                      <Col>{event.eventDate[0].value}</Col>\r\n                                    ) : null}\r\n                                  </>\r\n                                )}\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className='p-0'>\r\n                              <Row>\r\n                                {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') &&\r\n                                editEvent ? (\r\n                                  <Form.Group\r\n                                    as={Col}\r\n                                    // md='5'\r\n                                    controlId='eventEndDate'\r\n                                  >\r\n                                    <Form.Label>End Date:</Form.Label>\r\n                                    <Form.Control\r\n                                      required\r\n                                      type='text'\r\n                                      placeholder='Enter The End Date'\r\n                                      value={eventEndDate}\r\n                                      onChange={(e) =>\r\n                                        setEventEndDate(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                ) : (\r\n                                  <>\r\n                                    <Col md={4}>End Date :</Col>\r\n                                    {event.eventDate &&\r\n                                    event.eventDate.length !== 0 ? (\r\n                                      <Col>{event.eventDate[1].value}</Col>\r\n                                    ) : null}\r\n                                  </>\r\n                                )}\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Event Location:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='eventAddress'>\r\n                            <Form.Control\r\n                              required\r\n                              type='text'\r\n                              placeholder='Enter Location Address'\r\n                              value={eventAddress}\r\n                              onChange={(e) => setEventAddress(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>{event.eventAddress}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Adult Fee:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='adultFee'>\r\n                            <Form.Control\r\n                              required\r\n                              type='number'\r\n                              min='0'\r\n                              placeholder='Set Audult Fee'\r\n                              value={adultFee}\r\n                              onChange={(e) => setAdultFee(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>$ {event.adultFee}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Minor Fee:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='minorFee'>\r\n                            <Form.Control\r\n                              required\r\n                              type='number'\r\n                              min='0'\r\n                              placeholder='Set Minor Fee'\r\n                              value={minorFee}\r\n                              onChange={(e) => setMinorFee(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>$ {event.minorFee}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {userInfo &&\r\n                      (userInfo.userRole === 'systemAdmin' ||\r\n                        userInfo.userRole === 'admin') && (\r\n                        <>\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col md={3}>Cap:</Col>\r\n                              {editEvent ? (\r\n                                <Form.Group as={Col} controlId='cap'>\r\n                                  <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    min='0'\r\n                                    placeholder='Set cap'\r\n                                    value={cap}\r\n                                    onChange={(e) => setCap(e.target.value)}\r\n                                  ></Form.Control>\r\n                                </Form.Group>\r\n                              ) : (\r\n                                <Col>{event.cap}</Col>\r\n                              )}\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </>\r\n                      )}\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col md={4} className='m-0 p-1'>\r\n                <Card>\r\n                  {userInfo &&\r\n                    (userInfo.userRole === 'systemAdmin' ||\r\n                      userInfo.userRole === 'admin') && (\r\n                      <>\r\n                        <Card.Header className='text-center' as='h5'>\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={addNewEventContact}\r\n                          >\r\n                            Create new contact for event\r\n                          </Link>\r\n                        </Card.Header>\r\n\r\n                        <Card.Body>\r\n                          {addEventContact\r\n                            ? (eventContactNewError && (\r\n                                <Message variant='danger'>\r\n                                  {eventContactNewError}\r\n                                </Message>\r\n                              )) ||\r\n                              (eventContactNewLoading && <Loader />) ||\r\n                              (success ? (\r\n                                <Message variant='success'>{success}</Message>\r\n                              ) : (\r\n                                <Form onSubmit={submitHandler}>\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Position Name</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='Position Name'\r\n                                      value={positionName}\r\n                                      onChange={(e) =>\r\n                                        setPositionName(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Member Id</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='ID'\r\n                                      value={memberId}\r\n                                      onChange={(e) =>\r\n                                        setMemberId(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Contact Email</Form.Label>\r\n                                    <Form.Control\r\n                                      type='email'\r\n                                      placeholder='Email'\r\n                                      value={contactEmail}\r\n                                      onChange={(e) =>\r\n                                        setContactEmail(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Contact Phone</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='Phone Number'\r\n                                      value={contactPhone}\r\n                                      onChange={(e) =>\r\n                                        setContactPhone(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  {editEventContact ? (\r\n                                    <Button\r\n                                      type='submit'\r\n                                      variant='info'\r\n                                      block\r\n                                      // onClick={() =>\r\n                                      //   updateAnnouncementHandler(\r\n                                      //     announcement.announcementId\r\n                                      //   )\r\n                                      // }\r\n                                    >\r\n                                      <i className='fas fa-plus' /> Update\r\n                                    </Button>\r\n                                  ) : (\r\n                                    <Button type='submit' variant='info' block>\r\n                                      <i className='fas fa-plus' /> Add\r\n                                    </Button>\r\n                                  )}\r\n                                </Form>\r\n                              ))\r\n                            : null}\r\n                        </Card.Body>\r\n                      </>\r\n                    )}\r\n\r\n                  <Card.Header className='text-info text-center'>\r\n                    Contacts:\r\n                  </Card.Header>\r\n\r\n                  {eventContactsLoading ? (\r\n                    <Loader />\r\n                  ) : eventContactsError ? (\r\n                    <Message variant='danger'>{eventContactsError}</Message>\r\n                  ) : (\r\n                    <>\r\n                      <ListGroup variant='flush'>\r\n                        {eventContacts && eventContacts.length !== 0\r\n                          ? eventContacts.map((eventContact) => (\r\n                              <>\r\n                                <ListGroup.Item\r\n                                  key={eventContact.eventContactId}\r\n                                >\r\n                                  <Row>\r\n                                    <Col md={4}>Position :</Col>\r\n                                    <Col>{eventContact.positionName}</Col>\r\n                                  </Row>\r\n\r\n                                  <Row>\r\n                                    <Col md={4}>Name :</Col>\r\n                                    <Col>{eventContact.contactName}</Col>\r\n                                  </Row>\r\n\r\n                                  <Row>\r\n                                    <Col md={4}>Email :</Col>\r\n                                    <Col>{eventContact.contactEmail}</Col>\r\n                                  </Row>\r\n\r\n                                  <Row>\r\n                                    <Col md={4}>Phone :</Col>\r\n                                    <Col>{eventContact.contactPhone}</Col>\r\n                                  </Row>\r\n\r\n                                  {userInfo &&\r\n                                    (userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') && (\r\n                                      <div className='text-center'>\r\n                                        <span\r\n                                          onClick={() =>\r\n                                            editEventContactHandler(\r\n                                              eventContact.eventContactId\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <i className='far fa-edit action mr-2'></i>\r\n                                        </span>\r\n\r\n                                        <span\r\n                                          onClick={() =>\r\n                                            deleteEventContactHandler(\r\n                                              eventContact.eventContactId\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <i className='fas fa-trash action'></i>\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                              </>\r\n                            ))\r\n                          : null}{' '}\r\n                      </ListGroup>\r\n                    </>\r\n                  )}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={8}>\r\n                <Row>\r\n                  {userInfo &&\r\n                  (userInfo.userRole === 'systemAdmin' ||\r\n                    userInfo.userRole === 'admin') ? (\r\n                    <>\r\n                      <Col className='m-0 p-1'>\r\n                        {/* <Card.Footer className='text-muted'> */}\r\n                        {editEvent ? (\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={updateEventHandler}\r\n                          >\r\n                            Update\r\n                          </Link>\r\n                        ) : (\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={editEventHandler}\r\n                          >\r\n                            Edit\r\n                          </Link>\r\n                        )}\r\n\r\n                        {/* </Card.Footer> */}\r\n                      </Col>\r\n                      <Col className='m-0 p-1'>\r\n                        {/* <Card.Footer className='text-muted'> */}\r\n                        {editEvent ? (\r\n                          <Link\r\n                            className='btn btn-outline-danger btn-sm btn-block  rounded'\r\n                            onClick={editEventHandler}\r\n                          >\r\n                            Cancel\r\n                          </Link>\r\n                        ) : !event.eventStatus ? (\r\n                          <Link\r\n                            className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                            onClick={publishEventHandler}\r\n                          >\r\n                            Publish\r\n                          </Link>\r\n                        ) : (\r\n                          <Link\r\n                            className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                            onClick={unpublishEventHandler}\r\n                          >\r\n                            Un-Publish\r\n                          </Link>\r\n                        )}\r\n\r\n                        {/* </Card.Footer> */}\r\n                      </Col>\r\n                    </>\r\n                  ) : event && event.eventStatus ? (\r\n                    <Col className='m-0 p-1'>\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                        to={`/event/register/${event.eventId}`}\r\n                      >\r\n                        Register\r\n                      </Link>\r\n                    </Col>\r\n                  ) : null}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventByIdScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventRegistrationScreen.js",["734","735","736","737","738","739","740"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Container,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../actions/userActions';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { USER_REGISTER_RESET } from '../../constants/userConstants';\r\nimport swal from 'sweetalert';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { registerEvent, getEventById } from '../../actions/eventActions';\r\n\r\nconst EventRegisterScreen = ({ match, history }) => {\r\n  const { id } = match.params;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [mInit, setMInit] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [eventName, setEventName] = useState('');\r\n  const [isMember, setIsMember] = useState(false);\r\n  const [memberId, setMemberId] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [numberOfAdults, setNumberOfAdults] = useState(1);\r\n  const [numberOfMinors, setNumberOfMinors] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const eventRegister = useSelector((state) => state.eventRegister);\r\n  const {\r\n    error: eventRegisterError,\r\n    success: eventRegisterSuccess,\r\n  } = eventRegister;\r\n\r\n  // const userLogin = useSelector((state) => state.userLogin);\r\n  // const { userInfo } = userLogin;\r\n\r\n  const eventById = useSelector((state) => state.eventById);\r\n  const { loading, error, event } = eventById;\r\n\r\n  useEffect(() => {\r\n    console.log(id);\r\n    dispatch(getEventById(id));\r\n\r\n    if (eventRegisterSuccess) {\r\n      console.log(eventRegisterSuccess);\r\n      swal('Success!', eventRegisterSuccess, 'success').then(() => {\r\n        history.push('/');\r\n      });\r\n    } else if (eventRegisterError) {\r\n      swal('Error!', eventRegisterError, 'error');\r\n    }\r\n\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!window.paypal) {\r\n      addPaypalScript();\r\n    } else {\r\n      setSdkReady(true);\r\n    }\r\n  }, [dispatch, history, eventRegisterSuccess, eventRegisterError]);\r\n\r\n  // const submitHandler = (paymentResult) => {\r\n\r\n  // };\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(\r\n      registerEvent(\r\n        id,\r\n        event.eventName,\r\n        mInit,\r\n        firstName,\r\n        lastName,\r\n        isMember,\r\n        memberId,\r\n        email,\r\n        phone,\r\n        numberOfAdults,\r\n        numberOfMinors,\r\n        paymentResult\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <>\r\n        <Card border='info'>\r\n          <Card.Header className='text-center text-info' as='h5'>\r\n            Event Registration\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col md={8}>\r\n                <Form>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <Form.Row>\r\n                        <Form.Group as={Col} md='2'>\r\n                          <Form.Label>Name</Form.Label>\r\n                        </Form.Group>\r\n                        <Col>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>M. Initial: </Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='mInit'>\r\n                                    <Form.Control\r\n                                      required\r\n                                      as='select'\r\n                                      type='text'\r\n                                      value={mInit}\r\n                                      onChange={(e) => setMInit(e.target.value)}\r\n                                    >\r\n                                      <option value='Mr'>Mr</option>\r\n                                      <option value='Mrs'>Mrs</option>\r\n                                      <option value='Miss'>Ms</option>\r\n                                    </Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>First Name: </Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='firstName'>\r\n                                    <Form.Control\r\n                                      type='firstName'\r\n                                      placeholder='Please Enter Your First Name..'\r\n                                      value={firstName}\r\n                                      onChange={(e) =>\r\n                                        setFirstName(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>Last Name: </Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='lastName'>\r\n                                    <Form.Control\r\n                                      type='lastName'\r\n                                      placeholder='Please Enter Your Last Name..'\r\n                                      value={lastName}\r\n                                      onChange={(e) =>\r\n                                        setLastName(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Member ? :</Col>\r\n                        <Col>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col>\r\n                                  <Form.Control\r\n                                    required\r\n                                    as='select'\r\n                                    type='text'\r\n                                    value={isMember}\r\n                                    onChange={(e) =>\r\n                                      setIsMember(e.target.value)\r\n                                    }\r\n                                  >\r\n                                    <option value='false'>No</option>\r\n                                    <option value='true'>Yes</option>\r\n                                  </Form.Control>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {isMember ? (\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col>\r\n                                    <Form.Group controlId='memberId'>\r\n                                      <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Please Enter the member Id..'\r\n                                        value={memberId}\r\n                                        onChange={(e) =>\r\n                                          setMemberId(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                            ) : (\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col>\r\n                                    <Form.Group controlId='memberId'>\r\n                                      <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Please enter a referrel Member Id..'\r\n                                        value={memberId}\r\n                                        onChange={(e) =>\r\n                                          setMemberId(e.target.value)\r\n                                        }\r\n                                      ></Form.Control>\r\n                                    </Form.Group>\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                            )}\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Contact Details:</Col>\r\n                        <Col>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>Phone Number :</Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='phone'>\r\n                                    <Form.Control\r\n                                      type='phone'\r\n                                      placeholder='Enter Your Phone Number..'\r\n                                      value={phone}\r\n                                      onChange={(e) => setPhone(e.target.value)}\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>Email :</Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='email'>\r\n                                    <Form.Control\r\n                                      type='email'\r\n                                      placeholder='Enter Email..'\r\n                                      value={email}\r\n                                      onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Number Of Participants:</Col>\r\n                        <Col>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>Adults :</Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='numberOfAdults'>\r\n                                    <Form.Control\r\n                                      type='number'\r\n                                      placeholder='Enter number of adults'\r\n                                      value={numberOfAdults}\r\n                                      onChange={(e) =>\r\n                                        setNumberOfAdults(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col md={3}>Minors :</Col>\r\n                                <Col>\r\n                                  <Form.Group controlId='minors'>\r\n                                    <Form.Control\r\n                                      type='number'\r\n                                      placeholder='Enter number of minors..'\r\n                                      value={numberOfMinors}\r\n                                      onChange={(e) =>\r\n                                        setNumberOfMinors(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {/* <Button type='submit' variant='primary' block>\r\n                      Update\r\n                    </Button> */}\r\n                  </ListGroup>\r\n                </Form>\r\n              </Col>\r\n              <Col md={4}>\r\n                <Card>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <h5 className='text-info'>Registration Summary</h5>\r\n                    </ListGroup.Item>\r\n\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : event ? (\r\n                      event && (\r\n                        <>\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col>Event Name:</Col>\r\n                              <Col>{event.eventName}</Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col>No. Of Adults:</Col>\r\n                              <Col>{numberOfAdults}</Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col>No. Of Minors:</Col>\r\n                              <Col>{numberOfMinors}</Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col>Total Payment</Col>\r\n                              <Col>\r\n                                $\r\n                                {numberOfAdults * event.adultFee +\r\n                                  numberOfMinors * event.minorFee}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col>\r\n                                Please make the payment to complete registration\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                            {!sdkReady ? (\r\n                              <Loader />\r\n                            ) : (\r\n                              <PayPalButton\r\n                                amount={\r\n                                  numberOfAdults * event.adultFee +\r\n                                  numberOfMinors * event.minorFee\r\n                                }\r\n                                onSuccess={successPaymentHandler}\r\n                              />\r\n                            )}\r\n                          </ListGroup.Item>\r\n                        </>\r\n                      )\r\n                    ) : null}\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n          {/* <Card.Footer className='text-muted'>2 days ago</Card.Footer> */}\r\n        </Card>\r\n      </>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventRegisterScreen;\r\n\r\n// ///// Register attributes\r\n// {\r\n\r\n//   \"firstName\": \"jobayer\", done\r\n//   \"mInit\": \"Mr.\", done\r\n//   \"lastName\": \"Ahmad\", done\r\n//   \"address1\": \"30 long Island Steet, NY,USA\", Done\r\n//   \"address2\": \"31 long Island Steet, NY,USA\", //////////////// not in from register\r\n//   \"city\": \"Newyork\", Done\r\n//   \"state\": \"NY\",\r\n//   \"zipcode\": \"123456\",\r\n//   \"email\": \"jobayer@example.com\",\r\n//   \"password\": \"123456\",\r\n//   \"alternateEmail\": \"jobayer_alter@example.com\",\r\n//   \"primaryPhone\": \"1234567890\",\r\n//   \"alternatePhone\": \"1234567890\",\r\n//   \"degree\": \"B.Sc\",\r\n//   \"degreeYear\": \"2000\",\r\n//   \"major\": \"EEE\",\r\n//   \"collegeName\": \"AIUB\",\r\n//   \"status\": \"active\",\r\n//   \"balance\": \"10000.05\"\r\n\r\n// state,\r\n// zipcode,\r\n//\r\n//\r\n// primaryPhone,\r\n//  degree,\r\n//   degreeYear,\r\n//   major,\r\n//   collegeName\r\n\r\n// }\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailScreen\\EmailScreen.js",["741","742","743","744","745","746","747","748","749","750","751","752","753"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  DropdownButton,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  InputGroup,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n// import DecoupledEditor from '@ckeditor/ckeditor5-editor-decoupled';\r\n// import DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\r\nimport parse from 'html-react-parser';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport {\r\n  allAnnouncements,\r\n  deleteAnnouncement,\r\n  getAnnouncementById,\r\n  newAnnouncement,\r\n  updateAnnouncementById,\r\n} from '../../actions/announcementAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  ANNOUNCEMENT_BY_ID_RESET,\r\n  ANNOUNCEMENT_NEW_RESET,\r\n  ANNOUNCEMENT_UPDATE_BY_ID_RESET,\r\n} from '../../constants/announcementConstants';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\nimport { allEmails, getEmailById } from '../../actions/emailActions';\r\nimport { EMAIL_NEW_RESET } from '../../constants/emailConstants';\r\n\r\nconst EmailScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addEmail, setAddEmail] = useState(false);\r\n  // const [editAnnouncement, setEditAnnouncement] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  // const [id, setId] = useState('');\r\n  const [selected, setSelected] = useState('');\r\n\r\n  const emailsRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const emailAll = useSelector((state) => state.emailAll);\r\n  const { loading, error, emails } = emailAll;\r\n\r\n  emailsRef.current = emails;\r\n\r\n  const emailNew = useSelector((state) => state.emailNew);\r\n  const { loading: emailNewLoading, error: emailNewError, success } = emailNew;\r\n\r\n  const emailById = useSelector((state) => state.emailById);\r\n  const { success: emailByIdSuccess, email } = emailById;\r\n\r\n  // const announcementUpdate = useSelector((state) => state.announcementUpdate);\r\n  // const { success: announcementUpdateSuccess } = announcementUpdate;\r\n\r\n  // const announcementDelete = useSelector((state) => state.announcementDelete);\r\n  // const { success: successDelete } = announcementDelete;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      // setId(userInfo.memberId);\r\n      dispatch(allEmails());\r\n      dispatch({ type: EMAIL_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddEmail(false);\r\n\r\n      setTitle('');\r\n      setBody('');\r\n      setSelected('');\r\n    }\r\n  }, [dispatch, history, userInfo, success, email]);\r\n\r\n  const viewEmailHandler = (rowIndex) => {\r\n    const id = emailsRef.current[rowIndex].emailId;\r\n    console.log(rowIndex);\r\n    console.log(id);\r\n    dispatch(getEmailById(id));\r\n  };\r\n\r\n  const addNewEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddEmail(!addEmail);\r\n    setTitle('');\r\n    setBody('');\r\n    setSelected('');\r\n  };\r\n\r\n  const handleSelect = (e) => {\r\n    // e.preventDefault();\r\n\r\n    setSelected(e.target.value);\r\n    console.log(selected);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('Sent clicked');\r\n    console.log(selected);\r\n\r\n    // if (editAnnouncement) {\r\n    //   dispatch(updateAnnouncementById(id, title, body));\r\n    // } else {\r\n    //   setId(userInfo.memberId);\r\n    //   // console.log(id);\r\n    //   dispatch(newAnnouncement(title, body, id));\r\n    // }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'Title',\r\n      accessor: 'title',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'Body',\r\n      accessor: 'body',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return parse(value);\r\n      },\r\n    },\r\n    {\r\n      Header: 'To',\r\n      accessor: 'to',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'Date',\r\n      accessor: 'createdAt',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return format(new Date(value), 'dd/mm/yyyy');\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'View Mail',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <Link\r\n            className='btn btn-outline-info btn-sm ml-2 rounded'\r\n            onClick={() => viewEmailHandler(rowIdx)}\r\n          >\r\n            View\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                      onClick={addNewEmail}\r\n                    >\r\n                      New Email\r\n                    </Link>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {addEmail\r\n                      ? (emailNewError && (\r\n                          <Message variant='danger'>{emailNewError}</Message>\r\n                        )) ||\r\n                        (emailNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='to'>\r\n                              {/* <Form.Label>To : </Form.Label> */}\r\n\r\n                              <InputGroup hasValidation>\r\n                                <InputGroup.Prepend>\r\n                                  <InputGroup.Text>To :</InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                  as='select'\r\n                                  type='text'\r\n                                  required\r\n                                  value={selected}\r\n                                  onChange={handleSelect}\r\n                                >\r\n                                  <option value='allMember'>All Member</option>\r\n                                  <option value='allCommitteeMember'>\r\n                                    All Committee Member\r\n                                  </option>\r\n                                  <option value='custom'>Custom</option>\r\n                                </Form.Control>\r\n                                <Form.Control.Feedback type='invalid'>\r\n                                  Please choose reciepent.\r\n                                </Form.Control.Feedback>\r\n                              </InputGroup>\r\n\r\n                              {/* <ButtonGroup> */}\r\n                              {/* <DropdownButton\r\n                                as={ButtonGroup}\r\n                                title='Please select'\r\n                                id='bg-nested-dropdown'\r\n                                variant='info'\r\n                                className='btn btn-sm rounded'\r\n                                onSelect={handleSelect}\r\n                              >\r\n                                <Dropdown.Item eventKey='allMember'>\r\n                                  All Member\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item eventKey='allCommitteeMember'>\r\n                                  All Committee Member\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item eventKey='custom'>\r\n                                  Single/Few Member/s\r\n                                </Dropdown.Item>\r\n                              </DropdownButton> */}\r\n                              {/* </ButtonGroup> */}\r\n\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Address'\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='title'>\r\n                              <Form.Label>Title</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='body'>\r\n                              <Form.Label>Mail</Form.Label>\r\n                              <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={body}\r\n                                onChange={(e, editor) => {\r\n                                  const data = editor.getData();\r\n                                  setBody(data);\r\n                                }}\r\n                              />\r\n                              {/* <Form.Control\r\n                                as='textarea'\r\n                                rows='3'\r\n                                placeholder='Please Enter The Announcement'\r\n                                value={body}\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                              ></Form.Control> */}\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='info' block>\r\n                              Send\r\n                            </Button>\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-email'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    Sent Box\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={emails} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\emailReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\emailConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\emailActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\categoryReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\blogReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\categoryConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\blogConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\commentReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\replyReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\replyConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\commentConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreen.js",["754"],"import React, { useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\n\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { allblogs } from '../../actions/blogAction';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport { BLOG_BY_ID_RESET } from '../../constants/blogConstants';\r\n\r\nconst BlogScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const blogAll = useSelector((state) => state.blogAll);\r\n  const { loading, error, blogs } = blogAll;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(allblogs());\r\n      dispatch({ type: BLOG_BY_ID_RESET });\r\n    }\r\n  }, [dispatch, userInfo]);\r\n\r\n  const newBlogHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log('Edit clicked');\r\n    history.push(`/blog/new`);\r\n\r\n    // dispatch(approveUser(pendingId));\r\n    // history.push('/systemAdmin');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col md={{ span: 8, order: 1 }} className='m-0 p-1'>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : blogs && blogs.length !== 0 ? (\r\n            <>\r\n              {blogs.map((blog) => (\r\n                <>\r\n                  <Row key={blog.blogId}>\r\n                    <Col md={6}>\r\n                      {/* Preview Image */}\r\n                      <Card.Img variant='top' src={blog.photoId} alt='pic' />\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                      {/* Title */}\r\n                      <h1>{blog.title}</h1>\r\n\r\n                      {/* Author */}\r\n                      <p class='lead'>\r\n                        by <span>{blog.userId}</span>\r\n                      </p>\r\n\r\n                      <hr />\r\n\r\n                      {/* Date/Time */}\r\n                      <p>\r\n                        <span class='glyphicon glyphicon-time'></span> Posted on{' '}\r\n                        {blog.createdAt.substring(0, 10)}\r\n                      </p>\r\n\r\n                      <hr />\r\n\r\n                      {/* Post Content */}\r\n                      <p class='lead'>\r\n                        {parse(blog.body.substring(0, 100))}...\r\n                        <Link to={`/blog/${blog.blogId}`}>read more</Link>\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                </>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <p>No Blog Available!</p>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={{ span: 4, order: 12 }} className='m-0 p-1'>\r\n          <Card>\r\n            <Card.Header className='text-center' as='h2'>\r\n              <Link\r\n                className='btn btn-outline-info btn-sm btn-block rounded'\r\n                // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                onClick={newBlogHandler}\r\n              >\r\n                Create new Blog\r\n              </Link>\r\n            </Card.Header>\r\n          </Card>\r\n\r\n          {/* <!-- Blog Search Well --> */}\r\n          {/* <div class='well'>\r\n            <h4>Blog Search</h4>\r\n\r\n            {/* <!-- /.input-group --> */}\r\n          {/* </div> */}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\CreateBlogScreen.js",["755"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Form, Row } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport swal from 'sweetalert';\r\nimport { newBlog } from '../../actions/blogAction';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport { BLOG_NEW_RESET } from '../../constants/blogConstants';\r\n\r\nconst CreateBlogScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [validated, setValidated] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [photoId, setPhotoId] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const blogNew = useSelector((state) => state.blogNew);\r\n  const { loading, error, success } = blogNew;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      swal('Success!', success, 'success').then((value) => {\r\n        dispatch({ type: BLOG_NEW_RESET });\r\n        history.push('/blog');\r\n      });\r\n    }\r\n  }, [dispatch, history, userInfo, success]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setPhotoId(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      dispatch(newBlog(title, body, category, photoId));\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {/* Card Start */}\r\n      <Card border='info'>\r\n        <Card.Header className='text-center text-info' as='h2'>\r\n          New Blog\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <Message variant='success'>{success}</Message>\r\n          ) : (\r\n            <>\r\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\r\n                <Form.Row>\r\n                  {/* <Row> */}\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Title</Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='10' controlId='title'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Blog title'\r\n                      value={title}\r\n                      onChange={(e) => setTitle(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Category</Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='10' controlId='category'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='type'\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Picture</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='photo'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      // placeholder='Enter your last certificate url..'\r\n                      value={photoId}\r\n                      onChange={(e) => setPhotoId(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Form.File\r\n                      id='image-file'\r\n                      label='Choose File'\r\n                      custom\r\n                      onChange={uploadFileHandler}\r\n                    ></Form.File>\r\n                    {uploading && <Loader />}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Body</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='body'>\r\n                    <Form.Control\r\n                      as='textarea'\r\n                      required\r\n                      type='text'\r\n                      placeholder='Add your text here..'\r\n                      value={body}\r\n                      onChange={(e) => setBody(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col md={{ span: 10, offset: 2 }}>\r\n                    <Button type='submit' variant='info' block>\r\n                      Post Blog\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n      {/* Card End */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateBlogScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\blogAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreenById.js",["756","757","758"],"import React, { useEffect } from 'react';\r\nimport { Card, Col, Image, Row } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBlogById } from '../../actions/blogAction';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\n\r\nconst BlogScreenById = ({ match, history }) => {\r\n  const id = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const blogById = useSelector((state) => state.blogById);\r\n  const { loading, error, blog } = blogById;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(getBlogById(id));\r\n    }\r\n  }, [dispatch, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col md={{ span: 8, order: 1 }} className='m-0 p-1'>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            blog && (\r\n              <>\r\n                {/* Title */}\r\n                <h1>{blog.title}</h1>\r\n\r\n                {/* Author */}\r\n                <p class='lead'>\r\n                  by <a href='#'>{blog.userId}</a>\r\n                </p>\r\n\r\n                <hr />\r\n\r\n                {/* Date/Time */}\r\n                <p>\r\n                  <span class='glyphicon glyphicon-time'></span> Posted on{' '}\r\n                  {blog.createdAt.substring(0, 10)}\r\n                </p>\r\n\r\n                <hr />\r\n\r\n                {/* Preview Image */}\r\n                <Card.Img src={blog.photoId} alt='' />\r\n\r\n                <hr />\r\n\r\n                {/* Post Content */}\r\n                <p class='lead'>{blog.body}</p>\r\n                <hr />\r\n              </>\r\n            )\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={{ span: 4, order: 12 }} className='m-0 p-1'>\r\n          Search area\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogScreenById;\r\n",{"ruleId":"759","replacedBy":"760"},{"ruleId":"761","replacedBy":"762"},{"ruleId":"763","severity":1,"message":"764","line":9,"column":8,"nodeType":"765","messageId":"766","endLine":9,"endColumn":23},{"ruleId":"763","severity":1,"message":"767","line":6,"column":3,"nodeType":"765","messageId":"766","endLine":6,"endColumn":16},{"ruleId":"763","severity":1,"message":"768","line":7,"column":3,"nodeType":"765","messageId":"766","endLine":7,"endColumn":12},{"ruleId":"763","severity":1,"message":"769","line":8,"column":3,"nodeType":"765","messageId":"766","endLine":8,"endColumn":9},{"ruleId":"763","severity":1,"message":"770","line":11,"column":3,"nodeType":"765","messageId":"766","endLine":11,"endColumn":8},{"ruleId":"771","severity":1,"message":"772","line":38,"column":37,"nodeType":"773","messageId":"774","endLine":38,"endColumn":39},{"ruleId":"759","replacedBy":"775"},{"ruleId":"761","replacedBy":"776"},{"ruleId":"763","severity":1,"message":"777","line":6,"column":8,"nodeType":"765","messageId":"766","endLine":6,"endColumn":21},{"ruleId":"763","severity":1,"message":"778","line":9,"column":3,"nodeType":"765","messageId":"766","endLine":9,"endColumn":17},{"ruleId":"763","severity":1,"message":"779","line":11,"column":3,"nodeType":"765","messageId":"766","endLine":11,"endColumn":20},{"ruleId":"763","severity":1,"message":"780","line":15,"column":3,"nodeType":"765","messageId":"766","endLine":15,"endColumn":28},{"ruleId":"781","severity":1,"message":"782","line":95,"column":6,"nodeType":"783","endLine":95,"endColumn":46,"suggestions":"784"},{"ruleId":"759","replacedBy":"785"},{"ruleId":"761","replacedBy":"786"},{"ruleId":"763","severity":1,"message":"787","line":4,"column":3,"nodeType":"765","messageId":"766","endLine":4,"endColumn":9},{"ruleId":"763","severity":1,"message":"770","line":10,"column":3,"nodeType":"765","messageId":"766","endLine":10,"endColumn":8},{"ruleId":"763","severity":1,"message":"788","line":11,"column":3,"nodeType":"765","messageId":"766","endLine":11,"endColumn":14},{"ruleId":"763","severity":1,"message":"789","line":2,"column":8,"nodeType":"765","messageId":"766","endLine":2,"endColumn":14},{"ruleId":"759","replacedBy":"790"},{"ruleId":"761","replacedBy":"791"},{"ruleId":"763","severity":1,"message":"792","line":15,"column":13,"nodeType":"765","messageId":"766","endLine":15,"endColumn":14},{"ruleId":"763","severity":1,"message":"793","line":44,"column":10,"nodeType":"765","messageId":"766","endLine":44,"endColumn":16},{"ruleId":"763","severity":1,"message":"794","line":3,"column":10,"nodeType":"765","messageId":"766","endLine":3,"endColumn":23},{"ruleId":"763","severity":1,"message":"795","line":5,"column":3,"nodeType":"765","messageId":"766","endLine":5,"endColumn":8},{"ruleId":"763","severity":1,"message":"769","line":6,"column":3,"nodeType":"765","messageId":"766","endLine":6,"endColumn":9},{"ruleId":"763","severity":1,"message":"770","line":7,"column":3,"nodeType":"765","messageId":"766","endLine":7,"endColumn":8},{"ruleId":"763","severity":1,"message":"796","line":17,"column":3,"nodeType":"765","messageId":"766","endLine":17,"endColumn":12},{"ruleId":"763","severity":1,"message":"792","line":22,"column":13,"nodeType":"765","messageId":"766","endLine":22,"endColumn":14},{"ruleId":"763","severity":1,"message":"797","line":28,"column":10,"nodeType":"765","messageId":"766","endLine":28,"endColumn":22},{"ruleId":"763","severity":1,"message":"798","line":28,"column":24,"nodeType":"765","messageId":"766","endLine":28,"endColumn":39},{"ruleId":"763","severity":1,"message":"799","line":31,"column":11,"nodeType":"765","messageId":"766","endLine":31,"endColumn":18},{"ruleId":"763","severity":1,"message":"800","line":31,"column":20,"nodeType":"765","messageId":"766","endLine":31,"endColumn":25},{"ruleId":"763","severity":1,"message":"801","line":31,"column":27,"nodeType":"765","messageId":"766","endLine":31,"endColumn":32},{"ruleId":"763","severity":1,"message":"802","line":68,"column":9,"nodeType":"765","messageId":"766","endLine":68,"endColumn":22},{"ruleId":"763","severity":1,"message":"803","line":1,"column":8,"nodeType":"765","messageId":"766","endLine":1,"endColumn":13},{"ruleId":"763","severity":1,"message":"792","line":8,"column":13,"nodeType":"765","messageId":"766","endLine":8,"endColumn":14},{"ruleId":"763","severity":1,"message":"770","line":6,"column":3,"nodeType":"765","messageId":"766","endLine":6,"endColumn":8},{"ruleId":"763","severity":1,"message":"804","line":10,"column":3,"nodeType":"765","messageId":"766","endLine":10,"endColumn":14},{"ruleId":"763","severity":1,"message":"805","line":11,"column":3,"nodeType":"765","messageId":"766","endLine":11,"endColumn":6},{"ruleId":"763","severity":1,"message":"806","line":14,"column":10,"nodeType":"765","messageId":"766","endLine":14,"endColumn":14},{"ruleId":"763","severity":1,"message":"796","line":19,"column":3,"nodeType":"765","messageId":"766","endLine":19,"endColumn":12},{"ruleId":"763","severity":1,"message":"807","line":20,"column":3,"nodeType":"765","messageId":"766","endLine":20,"endColumn":13},{"ruleId":"763","severity":1,"message":"808","line":21,"column":3,"nodeType":"765","messageId":"766","endLine":21,"endColumn":19},{"ruleId":"763","severity":1,"message":"809","line":22,"column":3,"nodeType":"765","messageId":"766","endLine":22,"endColumn":20},{"ruleId":"763","severity":1,"message":"810","line":23,"column":3,"nodeType":"765","messageId":"766","endLine":23,"endColumn":18},{"ruleId":"763","severity":1,"message":"811","line":24,"column":3,"nodeType":"765","messageId":"766","endLine":24,"endColumn":18},{"ruleId":"763","severity":1,"message":"812","line":27,"column":10,"nodeType":"765","messageId":"766","endLine":27,"endColumn":23},{"ruleId":"763","severity":1,"message":"813","line":27,"column":25,"nodeType":"765","messageId":"766","endLine":27,"endColumn":37},{"ruleId":"763","severity":1,"message":"777","line":34,"column":8,"nodeType":"765","messageId":"766","endLine":34,"endColumn":21},{"ruleId":"763","severity":1,"message":"814","line":58,"column":14,"nodeType":"765","messageId":"766","endLine":58,"endColumn":29},{"ruleId":"763","severity":1,"message":"815","line":59,"column":12,"nodeType":"765","messageId":"766","endLine":59,"endColumn":25},{"ruleId":"763","severity":1,"message":"792","line":8,"column":13,"nodeType":"765","messageId":"766","endLine":8,"endColumn":14},{"ruleId":"763","severity":1,"message":"795","line":2,"column":40,"nodeType":"765","messageId":"766","endLine":2,"endColumn":45},{"ruleId":"763","severity":1,"message":"792","line":9,"column":13,"nodeType":"765","messageId":"766","endLine":9,"endColumn":14},{"ruleId":"763","severity":1,"message":"792","line":20,"column":13,"nodeType":"765","messageId":"766","endLine":20,"endColumn":14},{"ruleId":"763","severity":1,"message":"792","line":20,"column":13,"nodeType":"765","messageId":"766","endLine":20,"endColumn":14},{"ruleId":"759","replacedBy":"816"},{"ruleId":"761","replacedBy":"817"},{"ruleId":"763","severity":1,"message":"770","line":3,"column":25,"nodeType":"765","messageId":"766","endLine":3,"endColumn":30},{"ruleId":"763","severity":1,"message":"792","line":16,"column":13,"nodeType":"765","messageId":"766","endLine":16,"endColumn":14},{"ruleId":"763","severity":1,"message":"818","line":43,"column":14,"nodeType":"765","messageId":"766","endLine":43,"endColumn":29},{"ruleId":"781","severity":1,"message":"819","line":180,"column":6,"nodeType":"783","endLine":187,"endColumn":4,"suggestions":"820"},{"ruleId":"763","severity":1,"message":"821","line":7,"column":10,"nodeType":"765","messageId":"766","endLine":7,"endColumn":18},{"ruleId":"763","severity":1,"message":"821","line":7,"column":10,"nodeType":"765","messageId":"766","endLine":7,"endColumn":18},{"ruleId":"759","replacedBy":"822"},{"ruleId":"761","replacedBy":"823"},{"ruleId":"759","replacedBy":"824"},{"ruleId":"761","replacedBy":"825"},{"ruleId":"781","severity":1,"message":"826","line":15,"column":37,"nodeType":"783","endLine":15,"endColumn":39,"suggestions":"827"},{"ruleId":"781","severity":1,"message":"828","line":16,"column":42,"nodeType":"783","endLine":16,"endColumn":44,"suggestions":"829"},{"ruleId":"759","replacedBy":"830"},{"ruleId":"761","replacedBy":"831"},{"ruleId":"763","severity":1,"message":"832","line":1,"column":17,"nodeType":"765","messageId":"766","endLine":1,"endColumn":26},{"ruleId":"763","severity":1,"message":"777","line":14,"column":8,"nodeType":"765","messageId":"766","endLine":14,"endColumn":21},{"ruleId":"763","severity":1,"message":"833","line":16,"column":3,"nodeType":"765","messageId":"766","endLine":16,"endColumn":21},{"ruleId":"763","severity":1,"message":"834","line":18,"column":3,"nodeType":"765","messageId":"766","endLine":18,"endColumn":13},{"ruleId":"763","severity":1,"message":"835","line":23,"column":3,"nodeType":"765","messageId":"766","endLine":23,"endColumn":20},{"ruleId":"781","severity":1,"message":"836","line":101,"column":6,"nodeType":"783","endLine":101,"endColumn":46,"suggestions":"837"},{"ruleId":"763","severity":1,"message":"838","line":1,"column":17,"nodeType":"765","messageId":"766","endLine":1,"endColumn":26},{"ruleId":"763","severity":1,"message":"806","line":3,"column":10,"nodeType":"765","messageId":"766","endLine":3,"endColumn":14},{"ruleId":"763","severity":1,"message":"839","line":5,"column":10,"nodeType":"765","messageId":"766","endLine":5,"endColumn":29},{"ruleId":"763","severity":1,"message":"840","line":6,"column":10,"nodeType":"765","messageId":"766","endLine":6,"endColumn":21},{"ruleId":"763","severity":1,"message":"841","line":6,"column":23,"nodeType":"765","messageId":"766","endLine":6,"endColumn":34},{"ruleId":"763","severity":1,"message":"842","line":7,"column":8,"nodeType":"765","messageId":"766","endLine":7,"endColumn":15},{"ruleId":"763","severity":1,"message":"843","line":8,"column":8,"nodeType":"765","messageId":"766","endLine":8,"endColumn":14},{"ruleId":"763","severity":1,"message":"844","line":9,"column":8,"nodeType":"765","messageId":"766","endLine":9,"endColumn":13},{"ruleId":"763","severity":1,"message":"845","line":1,"column":8,"nodeType":"765","messageId":"766","endLine":1,"endColumn":13},{"ruleId":"763","severity":1,"message":"846","line":6,"column":10,"nodeType":"765","messageId":"766","endLine":6,"endColumn":18},{"ruleId":"763","severity":1,"message":"847","line":9,"column":10,"nodeType":"765","messageId":"766","endLine":9,"endColumn":29},{"ruleId":"763","severity":1,"message":"848","line":17,"column":19,"nodeType":"765","messageId":"766","endLine":17,"endColumn":29},{"ruleId":"763","severity":1,"message":"849","line":30,"column":10,"nodeType":"765","messageId":"766","endLine":30,"endColumn":19},{"ruleId":"763","severity":1,"message":"850","line":30,"column":21,"nodeType":"765","messageId":"766","endLine":30,"endColumn":33},{"ruleId":"781","severity":1,"message":"851","line":64,"column":6,"nodeType":"783","endLine":64,"endColumn":41,"suggestions":"852"},{"ruleId":"763","severity":1,"message":"839","line":13,"column":10,"nodeType":"765","messageId":"766","endLine":13,"endColumn":29},{"ruleId":"763","severity":1,"message":"844","line":17,"column":8,"nodeType":"765","messageId":"766","endLine":17,"endColumn":13},{"ruleId":"763","severity":1,"message":"853","line":56,"column":10,"nodeType":"765","messageId":"766","endLine":56,"endColumn":24},{"ruleId":"763","severity":1,"message":"854","line":57,"column":10,"nodeType":"765","messageId":"766","endLine":57,"endColumn":22},{"ruleId":"763","severity":1,"message":"855","line":71,"column":14,"nodeType":"765","messageId":"766","endLine":71,"endColumn":32},{"ruleId":"763","severity":1,"message":"856","line":72,"column":12,"nodeType":"765","messageId":"766","endLine":72,"endColumn":28},{"ruleId":"763","severity":1,"message":"857","line":74,"column":12,"nodeType":"765","messageId":"766","endLine":74,"endColumn":24},{"ruleId":"763","severity":1,"message":"858","line":102,"column":14,"nodeType":"765","messageId":"766","endLine":102,"endColumn":33},{"ruleId":"763","severity":1,"message":"859","line":109,"column":14,"nodeType":"765","messageId":"766","endLine":109,"endColumn":35},{"ruleId":"781","severity":1,"message":"860","line":175,"column":6,"nodeType":"783","endLine":188,"endColumn":4,"suggestions":"861"},{"ruleId":"763","severity":1,"message":"806","line":3,"column":10,"nodeType":"765","messageId":"766","endLine":3,"endColumn":14},{"ruleId":"763","severity":1,"message":"769","line":6,"column":3,"nodeType":"765","messageId":"766","endLine":6,"endColumn":9},{"ruleId":"763","severity":1,"message":"846","line":14,"column":10,"nodeType":"765","messageId":"766","endLine":14,"endColumn":18},{"ruleId":"763","severity":1,"message":"847","line":17,"column":10,"nodeType":"765","messageId":"766","endLine":17,"endColumn":29},{"ruleId":"763","severity":1,"message":"862","line":29,"column":10,"nodeType":"765","messageId":"766","endLine":29,"endColumn":19},{"ruleId":"763","severity":1,"message":"863","line":29,"column":21,"nodeType":"765","messageId":"766","endLine":29,"endColumn":33},{"ruleId":"781","severity":1,"message":"864","line":81,"column":6,"nodeType":"783","endLine":81,"endColumn":67,"suggestions":"865"},{"ruleId":"763","severity":1,"message":"795","line":8,"column":3,"nodeType":"765","messageId":"766","endLine":8,"endColumn":8},{"ruleId":"763","severity":1,"message":"866","line":9,"column":3,"nodeType":"765","messageId":"766","endLine":9,"endColumn":17},{"ruleId":"763","severity":1,"message":"867","line":10,"column":3,"nodeType":"765","messageId":"766","endLine":10,"endColumn":14},{"ruleId":"763","severity":1,"message":"868","line":11,"column":3,"nodeType":"765","messageId":"766","endLine":11,"endColumn":11},{"ruleId":"763","severity":1,"message":"869","line":24,"column":3,"nodeType":"765","messageId":"766","endLine":24,"endColumn":19},{"ruleId":"763","severity":1,"message":"870","line":25,"column":3,"nodeType":"765","messageId":"766","endLine":25,"endColumn":21},{"ruleId":"763","severity":1,"message":"839","line":26,"column":3,"nodeType":"765","messageId":"766","endLine":26,"endColumn":22},{"ruleId":"763","severity":1,"message":"871","line":27,"column":3,"nodeType":"765","messageId":"766","endLine":27,"endColumn":18},{"ruleId":"763","severity":1,"message":"872","line":28,"column":3,"nodeType":"765","messageId":"766","endLine":28,"endColumn":25},{"ruleId":"763","severity":1,"message":"873","line":34,"column":3,"nodeType":"765","messageId":"766","endLine":34,"endColumn":27},{"ruleId":"763","severity":1,"message":"874","line":35,"column":3,"nodeType":"765","messageId":"766","endLine":35,"endColumn":25},{"ruleId":"763","severity":1,"message":"875","line":36,"column":3,"nodeType":"765","messageId":"766","endLine":36,"endColumn":34},{"ruleId":"763","severity":1,"message":"876","line":67,"column":20,"nodeType":"765","messageId":"766","endLine":67,"endColumn":36},{"ruleId":"781","severity":1,"message":"877","line":29,"column":6,"nodeType":"783","endLine":29,"endColumn":26,"suggestions":"878"},{"ruleId":"763","severity":1,"message":"848","line":15,"column":19,"nodeType":"765","messageId":"766","endLine":15,"endColumn":29},{"ruleId":"763","severity":1,"message":"770","line":2,"column":21,"nodeType":"765","messageId":"766","endLine":2,"endColumn":26},{"ruleId":"781","severity":1,"message":"879","line":26,"column":6,"nodeType":"783","endLine":26,"endColumn":26,"suggestions":"880"},{"ruleId":"881","severity":1,"message":"882","line":44,"column":22,"nodeType":"883","endLine":44,"endColumn":34},"no-native-reassign",["884"],"no-negated-in-lhs",["885"],"no-unused-vars","'DashboardScreen' is defined but never used.","Identifier","unusedVar","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["884"],["885"],"'FormContainer' is defined but never used.","'getUserProfile' is defined but never used.","'updateUserProfile' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["886"],["884"],["885"],"'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Routes' is defined but never used.",["884"],["885"],"'S' is defined but never used.","'tenure' is assigned a value but never used.","'LinkContainer' is defined but never used.","'Table' is defined but never used.","'listUsers' is defined but never used.","'lastDonation' is assigned a value but never used.","'setLastDonation' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'users' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","'React' is defined but never used.","'CardColumns' is defined but never used.","'Nav' is defined but never used.","'Link' is defined but never used.","'deleteUser' is defined but never used.","'listPendingUsers' is defined but never used.","'deletePendingUser' is defined but never used.","'createAdminUser' is defined but never used.","'deleteAdminUser' is defined but never used.","'deleteChapter' is defined but never used.","'listChapters' is defined but never used.","'registerLoading' is assigned a value but never used.","'registerError' is assigned a value but never used.",["884"],["885"],"'userListSuccess' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createAdminHandler', 'deleteUserHandler', and 'editUserHandler'. Either include them or remove the dependency array.",["887"],"'allImage' is defined but never used.",["884"],["885"],["884"],["885"],"React Hook useMemo has a missing dependency: 'users'. Either include it or remove the dependency array.",["888"],"React Hook useMemo has a missing dependency: 'COLUMNS'. Either include it or remove the dependency array.",["889"],["884"],["885"],"'Component' is defined but never used.","'getUserDetailsById' is defined but never used.","'updateUser' is defined but never used.","'USER_UPDATE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["890"],"'useEffect' is defined but never used.","'getAnnouncementById' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'parse' is defined but never used.","'axios' is defined but never used.","'register' is defined but never used.","'USER_REGISTER_RESET' is defined but never used.","'setMessage' is assigned a value but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'newCreatedEvent.eventId' and 'userInfo'. Either include them or remove the dependency array.",["891"],"'eventStartTime' is assigned a value but never used.","'eventEndTime' is assigned a value but never used.","'eventUpdateLoading' is assigned a value but never used.","'eventUpdateError' is assigned a value but never used.","'updatedEvent' is assigned a value but never used.","'eventPublishLoading' is assigned a value but never used.","'eventUnpublishLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eventContact.contactEmail', 'eventContact.contactPhone', 'eventContact.eventContactId', 'eventContact.memberId', 'eventContact.positionName', 'eventPublishError', and 'userInfo'. Either include them or remove the dependency array.",["892"],"'eventName' is assigned a value but never used.","'setEventName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["893"],"'DropdownButton' is defined but never used.","'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.","'allAnnouncements' is defined but never used.","'deleteAnnouncement' is defined but never used.","'newAnnouncement' is defined but never used.","'updateAnnouncementById' is defined but never used.","'ANNOUNCEMENT_BY_ID_RESET' is defined but never used.","'ANNOUNCEMENT_NEW_RESET' is defined but never used.","'ANNOUNCEMENT_UPDATE_BY_ID_RESET' is defined but never used.","'emailByIdSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["894"],"React Hook useEffect has missing dependencies: 'history' and 'id'. Either include them or remove the dependency array.",["895"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"896","fix":"897"},{"desc":"898","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"desc":"904","fix":"905"},{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},"Update the dependencies array to be: [dispatch, history, user, successUpdate, userInfo, id]",{"range":"916","text":"917"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successAdmin, successDeleteAdmin, editUserHandler, createAdminHandler, deleteUserHandler]",{"range":"918","text":"919"},"Update the dependencies array to be: [users]",{"range":"920","text":"921"},"Update the dependencies array to be: [COLUMNS]",{"range":"922","text":"923"},"Update the dependencies array to be: [dispatch, history, user, successUpdate, userInfo]",{"range":"924","text":"925"},"Update the dependencies array to be: [dispatch, history, success, error, userInfo, newCreatedEvent.eventId]",{"range":"926","text":"927"},"Update the dependencies array to be: [dispatch, history, id, success, eventUpdateSuccess, eventContactByIdSuccess, eventContactUpdateSuccess, successDelete, eventPublishSuccess, eventUnpublishSuccess, eventUnpublishError, userInfo, eventPublishError, eventContact.eventContactId, eventContact.memberId, eventContact.positionName, eventContact.contactEmail, eventContact.contactPhone]",{"range":"928","text":"929"},"Update the dependencies array to be: [dispatch, history, eventRegisterSuccess, eventRegisterError, id]",{"range":"930","text":"931"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"932","text":"933"},"Update the dependencies array to be: [dispatch, history, id, userInfo]",{"range":"934","text":"935"},[3325,3365],"[dispatch, history, user, successUpdate, userInfo, id]",[5459,5573],"[dispatch, history, userInfo, successDelete, successAdmin, successDeleteAdmin, editUserHandler, createAdminHandler, deleteUserHandler]",[395,397],"[users]",[442,444],"[COLUMNS]",[3313,3353],"[dispatch, history, user, successUpdate, userInfo]",[2545,2580],"[dispatch, history, success, error, userInfo, newCreatedEvent.eventId]",[5808,6081],"[dispatch, history, id, success, eventUpdateSuccess, eventContactByIdSuccess, eventContactUpdateSuccess, successDelete, eventPublishSuccess, eventUnpublishSuccess, eventUnpublishError, userInfo, eventPublishError, eventContact.eventContactId, eventContact.memberId, eventContact.positionName, eventContact.contactEmail, eventContact.contactPhone]",[2649,2710],"[dispatch, history, eventRegisterSuccess, eventRegisterError, id]",[911,931],"[dispatch, history, userInfo]",[776,796],"[dispatch, history, id, userInfo]"]