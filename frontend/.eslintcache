[{"F:\\aabea\\project\\aabea\\frontend\\src\\index.js":"1","F:\\aabea\\project\\aabea\\frontend\\src\\store.js":"2","F:\\aabea\\project\\aabea\\frontend\\src\\App.js":"3","F:\\aabea\\project\\aabea\\frontend\\src\\reportWebVitals.js":"4","F:\\aabea\\project\\aabea\\frontend\\src\\reducers\\userReducers.js":"5","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\DashboardScreen.js":"6","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Footer.js":"7","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\HomeScreen.js":"8","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Header.js":"9","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\LoginScreen.js":"10","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserListScreen.js":"11","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\RegisterScreen.js":"12","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserEditScreen.js":"13","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Message.js":"14","F:\\aabea\\project\\aabea\\frontend\\src\\components\\FormContainer.js":"15","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Loader.js":"16","F:\\aabea\\project\\aabea\\frontend\\src\\constants\\userConstants.js":"17","F:\\aabea\\project\\aabea\\frontend\\src\\actions\\userActions.js":"18","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\index.js":"19","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\store.js":"20","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reportWebVitals.js":"21","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.js":"22","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\LoginScreen.js":"23","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Footer.js":"24","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserEditScreen.js":"25","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserListScreen.js":"26","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\userReducers.js":"27","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Message.js":"28","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\FormContainer.js":"29","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Loader.js":"30","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\userActions.js":"31","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\userConstants.js":"32","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HomeScreen\\HomeScreen.js":"33","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.styles.js":"34","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar.js":"35","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar\\Sidebar.js":"36","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.Styles.js":"37","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.js":"38","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonateScreen\\DonateScreen.js":"39","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\TrainingScreen\\TrainingScreen.js":"40","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteesScreen.js":"41","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\Routes.js":"42","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.js":"43","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.Styles.js":"44","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.js":"45","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.Styles.js":"46","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.js":"47","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\EmailActivationScreen.js":"48","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\Section.js":"49","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\PageTitle.js":"50","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\[hash].js":"51","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\chapterReducers.js":"52","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\chapterConstants.js":"53","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.js":"54","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.Styles.js":"55","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\chapterActions.js":"56","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserPendingApproveScreen\\UserPendingApproveScreen.js":"57","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\paymentTypeReducers.js":"58","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\paymentTypeConstants.js":"59","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.js":"60","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.Styles.js":"61","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.js":"62","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\paymentTypeActions.js":"63","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.js":"64","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\PaymentDropdown.js":"65","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\DatePicker.js":"66","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.js":"67","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.Styles.js":"68","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.js":"69","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.js":"70","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.js":"71","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.Styles.js":"72","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.Styles.js":"73","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.Styles.js":"74","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegisterScreen.js":"75","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.js":"76","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.Styles.js":"77","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.js":"78","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.Styles.js":"79","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\vissionReducers.js":"80","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\announcementReducers.js":"81","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\missionReducers.js":"82","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\historyReducers.js":"83","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\historyConstants.js":"84","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\vissionConstants.js":"85","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\missionConstants.js":"86","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\announcementConstants.js":"87","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\announcementAction.js":"88","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\missionActions.js":"89","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js":"90","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\vissionActions.js":"91","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\historyActions.js":"92","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\imageReducers.js":"93","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\imageConstants.js":"94","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.js":"95","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.Styles.js":"96","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\imageActions.js":"97","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.js":"98","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.Styles.js":"99","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\ImageCarousel.js":"100","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\HeaderCarousel.js":"101","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\committeeReducers.js":"102","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\committeeConstants.js":"103","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeScreen.Styles.js":"104","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\committeeActions.js":"105","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MemberColumns.js":"106","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\GlobalFilter.js":"107","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\ColumnFilter.js":"108","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\RTable.js":"109","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\CheckBox.js":"110","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\SearchBar\\SearchBar.js":"111","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\Announcement.js":"112","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\Mission.js":"113","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\Vission.js":"114","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\History.js":"115","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\PauseOnHover.js":"116","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\EditProfileScreen.js":"117","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeMemberScreens.js":"118","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AboutScreen\\About.js":"119","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventScreen.js":"120","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SettingScreen\\SettingScreen.js":"121","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\eventReducers.js":"122","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\eventConstants.js":"123","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\eventActions.js":"124","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventNewScreen.js":"125","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventByIdScreen.js":"126","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventRegistrationScreen.js":"127","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailScreen\\EmailScreen.js":"128","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\emailReducers.js":"129","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\emailConstants.js":"130","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\emailActions.js":"131","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\categoryReducers.js":"132","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\blogReducers.js":"133","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\categoryConstants.js":"134","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\blogConstants.js":"135","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\commentReducers.js":"136","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\replyReducers.js":"137","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\replyConstants.js":"138","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\commentConstants.js":"139","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreen.js":"140","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\CreateBlogScreen.js":"141","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\blogAction.js":"142","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreenById.js":"143","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\commentAction.js":"144","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\replyAction.js":"145","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\SearchBox\\SearchBox.js":"146","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\donationTypeReducers.js":"147","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\donationTypeConstant.js":"148","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonationTypeScreen\\DonationTypeScreen.js":"149","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\donationTypeAction.js":"150","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegistrationScreen_New.js":"151","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImageByEventScreen\\ImageByEventScreen.js":"152","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HelpContactScreen\\HelpContactScreen.js":"153","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\QuickLinkScreen\\QuickLinkScreen.js":"154","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\helpContactReducers.js":"155","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\quickLinkReducers.js":"156","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\helpContactConstants.js":"157","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\quickLinkConstants.js":"158","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\helpActions.js":"159","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\linkActions.js":"160","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\MyTexyInput.js":"161","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\MySelect.js":"162","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\MyCheckbox.js":"163","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImageByIdScreen.js":"164","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\cartAction.js":"165","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\cartConstants.js":"166","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\cartReducers.js":"167","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventRegistrationPayment.js":"168"},{"size":597,"mtime":1611348613797,"results":"169","hashOfConfig":"170"},{"size":1051,"mtime":1611373294914,"results":"171","hashOfConfig":"170"},{"size":1137,"mtime":1611775129043,"results":"172","hashOfConfig":"170"},{"size":362,"mtime":499162500000,"results":"173","hashOfConfig":"170"},{"size":3625,"mtime":1611434427903,"results":"174","hashOfConfig":"170"},{"size":1045,"mtime":1611775040016,"results":"175","hashOfConfig":"170"},{"size":446,"mtime":1611772949677,"results":"176","hashOfConfig":"170"},{"size":5147,"mtime":1611261050924,"results":"177","hashOfConfig":"170"},{"size":4289,"mtime":1611443754148,"results":"178","hashOfConfig":"170"},{"size":2277,"mtime":1611444019672,"results":"179","hashOfConfig":"170"},{"size":4113,"mtime":1611859105296,"results":"180","hashOfConfig":"170"},{"size":3340,"mtime":1611847398274,"results":"181","hashOfConfig":"170"},{"size":4701,"mtime":1611851104005,"results":"182","hashOfConfig":"170"},{"size":256,"mtime":1603458280349,"results":"183","hashOfConfig":"170"},{"size":352,"mtime":1611368948725,"results":"184","hashOfConfig":"170"},{"size":410,"mtime":1603387806125,"results":"185","hashOfConfig":"170"},{"size":1593,"mtime":1611432914339,"results":"186","hashOfConfig":"170"},{"size":6154,"mtime":1611460368070,"results":"187","hashOfConfig":"170"},{"size":685,"mtime":1617949234743,"results":"188","hashOfConfig":"189"},{"size":8839,"mtime":1623462843645,"results":"190","hashOfConfig":"189"},{"size":362,"mtime":499162500000,"results":"191","hashOfConfig":"189"},{"size":7193,"mtime":1623457075118,"results":"192","hashOfConfig":"189"},{"size":5498,"mtime":1622956639620,"results":"193","hashOfConfig":"189"},{"size":603,"mtime":1622581726759,"results":"194","hashOfConfig":"189"},{"size":24682,"mtime":1622075242386,"results":"195","hashOfConfig":"189"},{"size":5844,"mtime":1616921399755,"results":"196","hashOfConfig":"189"},{"size":12782,"mtime":1622949512587,"results":"197","hashOfConfig":"189"},{"size":256,"mtime":1603458280349,"results":"198","hashOfConfig":"189"},{"size":349,"mtime":1614383733812,"results":"199","hashOfConfig":"189"},{"size":459,"mtime":1622238920234,"results":"200","hashOfConfig":"189"},{"size":21779,"mtime":1622993899095,"results":"201","hashOfConfig":"189"},{"size":5930,"mtime":1622949467942,"results":"202","hashOfConfig":"189"},{"size":12364,"mtime":1623002477484,"results":"203","hashOfConfig":"189"},{"size":191,"mtime":1613507729017,"results":"204","hashOfConfig":"189"},{"size":2400,"mtime":1613352800838,"results":"205","hashOfConfig":"206"},{"size":8798,"mtime":1622154949453,"results":"207","hashOfConfig":"189"},{"size":272,"mtime":1616638090353,"results":"208","hashOfConfig":"189"},{"size":12017,"mtime":1623004047753,"results":"209","hashOfConfig":"189"},{"size":18338,"mtime":1623004470516,"results":"210","hashOfConfig":"189"},{"size":942,"mtime":1619952049738,"results":"211","hashOfConfig":"189"},{"size":20410,"mtime":1622951400525,"results":"212","hashOfConfig":"189"},{"size":710,"mtime":1613520803905,"results":"213","hashOfConfig":"189"},{"size":301,"mtime":1613524691788,"results":"214","hashOfConfig":"189"},{"size":758,"mtime":1613526042009,"results":"215","hashOfConfig":"189"},{"size":10655,"mtime":1622954222934,"results":"216","hashOfConfig":"189"},{"size":253,"mtime":1613613566640,"results":"217","hashOfConfig":"189"},{"size":5424,"mtime":1622537013068,"results":"218","hashOfConfig":"189"},{"size":2246,"mtime":1616933916003,"results":"219","hashOfConfig":"189"},{"size":156,"mtime":1614366800255,"results":"220","hashOfConfig":"189"},{"size":247,"mtime":1614366889834,"results":"221","hashOfConfig":"189"},{"size":572,"mtime":1616871116897,"results":"222","hashOfConfig":"189"},{"size":5342,"mtime":1622173541717,"results":"223","hashOfConfig":"189"},{"size":2571,"mtime":1622123234176,"results":"224","hashOfConfig":"189"},{"size":18909,"mtime":1616922054100,"results":"225","hashOfConfig":"189"},{"size":253,"mtime":1614899146910,"results":"226","hashOfConfig":"189"},{"size":9349,"mtime":1623015266792,"results":"227","hashOfConfig":"189"},{"size":8119,"mtime":1622950198757,"results":"228","hashOfConfig":"189"},{"size":1752,"mtime":1615078826899,"results":"229","hashOfConfig":"189"},{"size":849,"mtime":1615068453267,"results":"230","hashOfConfig":"189"},{"size":12002,"mtime":1622232828400,"results":"231","hashOfConfig":"189"},{"size":253,"mtime":1615070536282,"results":"232","hashOfConfig":"189"},{"size":10392,"mtime":1615075945664,"results":"233","hashOfConfig":"189"},{"size":2989,"mtime":1616569674424,"results":"234","hashOfConfig":"189"},{"size":10368,"mtime":1622078859599,"results":"235","hashOfConfig":"189"},{"size":3004,"mtime":1615512010247,"results":"236","hashOfConfig":"189"},{"size":887,"mtime":1616869632151,"results":"237","hashOfConfig":"189"},{"size":11049,"mtime":1622537943083,"results":"238","hashOfConfig":"189"},{"size":253,"mtime":1615630905796,"results":"239","hashOfConfig":"189"},{"size":10925,"mtime":1622074189729,"results":"240","hashOfConfig":"189"},{"size":10577,"mtime":1620075366282,"results":"241","hashOfConfig":"189"},{"size":11160,"mtime":1622074542514,"results":"242","hashOfConfig":"189"},{"size":253,"mtime":1615631295699,"results":"243","hashOfConfig":"189"},{"size":253,"mtime":1615631368581,"results":"244","hashOfConfig":"189"},{"size":253,"mtime":1615631214574,"results":"245","hashOfConfig":"189"},{"size":14958,"mtime":1622956586127,"results":"246","hashOfConfig":"189"},{"size":2813,"mtime":1622993817034,"results":"247","hashOfConfig":"189"},{"size":1118,"mtime":1616218420594,"results":"248","hashOfConfig":"189"},{"size":3220,"mtime":1622074673898,"results":"249","hashOfConfig":"189"},{"size":1118,"mtime":1616241271921,"results":"250","hashOfConfig":"189"},{"size":2566,"mtime":1616809668394,"results":"251","hashOfConfig":"189"},{"size":2886,"mtime":1616801590511,"results":"252","hashOfConfig":"189"},{"size":2633,"mtime":1616805757821,"results":"253","hashOfConfig":"189"},{"size":2639,"mtime":1616869700646,"results":"254","hashOfConfig":"189"},{"size":1134,"mtime":1616809975660,"results":"255","hashOfConfig":"189"},{"size":1134,"mtime":1616807824313,"results":"256","hashOfConfig":"189"},{"size":1134,"mtime":1616805711449,"results":"257","hashOfConfig":"189"},{"size":1323,"mtime":1616801554789,"results":"258","hashOfConfig":"189"},{"size":4765,"mtime":1622540414207,"results":"259","hashOfConfig":"189"},{"size":4204,"mtime":1622205741243,"results":"260","hashOfConfig":"189"},{"size":7559,"mtime":1622074731601,"results":"261","hashOfConfig":"189"},{"size":4136,"mtime":1618742976257,"results":"262","hashOfConfig":"189"},{"size":4194,"mtime":1622161581503,"results":"263","hashOfConfig":"189"},{"size":3655,"mtime":1622137063035,"results":"264","hashOfConfig":"189"},{"size":1830,"mtime":1622124865607,"results":"265","hashOfConfig":"189"},{"size":18048,"mtime":1623212317213,"results":"266","hashOfConfig":"189"},{"size":253,"mtime":1616850764913,"results":"267","hashOfConfig":"189"},{"size":5593,"mtime":1622977701867,"results":"268","hashOfConfig":"189"},{"size":21870,"mtime":1623019968297,"results":"269","hashOfConfig":"189"},{"size":253,"mtime":1616866245541,"results":"270","hashOfConfig":"189"},{"size":1467,"mtime":1623205311740,"results":"271","hashOfConfig":"189"},{"size":1440,"mtime":1617946742196,"results":"272","hashOfConfig":"189"},{"size":2959,"mtime":1617247825521,"results":"273","hashOfConfig":"189"},{"size":1476,"mtime":1617245731939,"results":"274","hashOfConfig":"189"},{"size":253,"mtime":1617247414053,"results":"275","hashOfConfig":"189"},{"size":4677,"mtime":1622535819128,"results":"276","hashOfConfig":"189"},{"size":630,"mtime":1617643672474,"results":"277","hashOfConfig":"189"},{"size":1047,"mtime":1617644439310,"results":"278","hashOfConfig":"189"},{"size":815,"mtime":1617643817124,"results":"279","hashOfConfig":"189"},{"size":5259,"mtime":1617996449836,"results":"280","hashOfConfig":"189"},{"size":416,"mtime":1617650549828,"results":"281","hashOfConfig":"189"},{"size":540,"mtime":1617789293615,"results":"282","hashOfConfig":"189"},{"size":1635,"mtime":1622232340412,"results":"283","hashOfConfig":"189"},{"size":1360,"mtime":1618742710684,"results":"284","hashOfConfig":"189"},{"size":1362,"mtime":1618743205302,"results":"285","hashOfConfig":"189"},{"size":1369,"mtime":1618743605213,"results":"286","hashOfConfig":"189"},{"size":2531,"mtime":1623216123862,"results":"287","hashOfConfig":"189"},{"size":23200,"mtime":1622075418425,"results":"288","hashOfConfig":"189"},{"size":3427,"mtime":1618741962624,"results":"289","hashOfConfig":"189"},{"size":6484,"mtime":1622231091527,"results":"290","hashOfConfig":"189"},{"size":6823,"mtime":1622538025178,"results":"291","hashOfConfig":"189"},{"size":15039,"mtime":1623221996229,"results":"292","hashOfConfig":"189"},{"size":7245,"mtime":1619808527421,"results":"293","hashOfConfig":"189"},{"size":3408,"mtime":1619729476598,"results":"294","hashOfConfig":"189"},{"size":12941,"mtime":1622535687136,"results":"295","hashOfConfig":"189"},{"size":10656,"mtime":1622075977078,"results":"296","hashOfConfig":"189"},{"size":30872,"mtime":1623447726066,"results":"297","hashOfConfig":"189"},{"size":19944,"mtime":1623524998468,"results":"298","hashOfConfig":"189"},{"size":11695,"mtime":1622076174230,"results":"299","hashOfConfig":"189"},{"size":1521,"mtime":1620167952081,"results":"300","hashOfConfig":"189"},{"size":599,"mtime":1620167737024,"results":"301","hashOfConfig":"189"},{"size":2496,"mtime":1620168396373,"results":"302","hashOfConfig":"189"},{"size":2682,"mtime":1621578790045,"results":"303","hashOfConfig":"189"},{"size":2492,"mtime":1621579015605,"results":"304","hashOfConfig":"189"},{"size":1170,"mtime":1621578272445,"results":"305","hashOfConfig":"189"},{"size":1026,"mtime":1621578302612,"results":"306","hashOfConfig":"189"},{"size":1612,"mtime":1621579182513,"results":"307","hashOfConfig":"189"},{"size":1558,"mtime":1621579300285,"results":"308","hashOfConfig":"189"},{"size":673,"mtime":1621578387988,"results":"309","hashOfConfig":"189"},{"size":717,"mtime":1621578348638,"results":"310","hashOfConfig":"189"},{"size":3643,"mtime":1622547757707,"results":"311","hashOfConfig":"189"},{"size":6068,"mtime":1622037597327,"results":"312","hashOfConfig":"189"},{"size":4262,"mtime":1622547706783,"results":"313","hashOfConfig":"189"},{"size":21200,"mtime":1622076497587,"results":"314","hashOfConfig":"189"},{"size":2739,"mtime":1622056448228,"results":"315","hashOfConfig":"189"},{"size":2692,"mtime":1621586152444,"results":"316","hashOfConfig":"189"},{"size":987,"mtime":1622065757027,"results":"317","hashOfConfig":"189"},{"size":1780,"mtime":1622077047798,"results":"318","hashOfConfig":"189"},{"size":871,"mtime":1622076864755,"results":"319","hashOfConfig":"189"},{"size":10583,"mtime":1622078822761,"results":"320","hashOfConfig":"189"},{"size":2721,"mtime":1622078352104,"results":"321","hashOfConfig":"189"},{"size":12622,"mtime":1622749653217,"results":"322","hashOfConfig":"189"},{"size":10815,"mtime":1622154335399,"results":"323","hashOfConfig":"189"},{"size":12303,"mtime":1622539735904,"results":"324","hashOfConfig":"189"},{"size":9077,"mtime":1622950556328,"results":"325","hashOfConfig":"189"},{"size":2822,"mtime":1622158271115,"results":"326","hashOfConfig":"189"},{"size":2713,"mtime":1622156417640,"results":"327","hashOfConfig":"189"},{"size":1323,"mtime":1622155570558,"results":"328","hashOfConfig":"189"},{"size":1248,"mtime":1622156167386,"results":"329","hashOfConfig":"189"},{"size":4764,"mtime":1622543749825,"results":"330","hashOfConfig":"189"},{"size":4316,"mtime":1622542178271,"results":"331","hashOfConfig":"189"},{"size":693,"mtime":1622718837227,"results":"332","hashOfConfig":"189"},{"size":444,"mtime":1622718856266,"results":"333","hashOfConfig":"189"},{"size":826,"mtime":1622697604383,"results":"334","hashOfConfig":"189"},{"size":3850,"mtime":1623221133200,"results":"335","hashOfConfig":"189"},{"size":1392,"mtime":1623462810598,"results":"336","hashOfConfig":"189"},{"size":194,"mtime":1623442855693,"results":"337","hashOfConfig":"189"},{"size":625,"mtime":1623451094018,"results":"338","hashOfConfig":"189"},{"size":25584,"mtime":1623529629432,"results":"339","hashOfConfig":"189"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},"1shrj8b",{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"342"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"342"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"342"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"342"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},"4o7zxk",{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"383"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"383"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l0jjdi",{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"383"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"383"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"383"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"383"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"416"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"383"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"383"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"383"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"507"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"383"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"383"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"383"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"383"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"567"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"578"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"383"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"590"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"383"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"383"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"383"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"383"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"383"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"383"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"383"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"383"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"383"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"383"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"383"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"383"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\aabea\\project\\aabea\\frontend\\src\\index.js",[],["717","718"],"F:\\aabea\\project\\aabea\\frontend\\src\\store.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\App.js",["719"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          {/* <Route path='/dashboard' component={DashboardScreen} /> */}\n          <Route path='/dashboard' component={UserListScreen} />\n          <Route path='/users/:id/edit' component={UserEditScreen} />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","F:\\aabea\\project\\aabea\\frontend\\src\\reportWebVitals.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\reducers\\userReducers.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\DashboardScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\Footer.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\HomeScreen.js",["720","721","722"],"import React from 'react';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Button,\r\n  Carousel,\r\n} from 'react-bootstrap';\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6} lg={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Announcements</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore\r\n                officiis facilis beatae consequatur reiciendis dicta quia\r\n                voluptatem, ab, voluptatum eligendi ullam libero facere impedit\r\n                molestiae repudiandae ipsa, necessitatibus numquam velit?\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>Events:</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore\r\n                officiis facilis beatae consequatur reiciendis dicta quia\r\n                voluptatem, ab, voluptatum eligendi ullam libero facere impedit\r\n                molestiae repudiandae ipsa, necessitatibus numquam velit?\r\n              </Card.Text>\r\n            </Card.Body>\r\n\r\n            <Card.Body>\r\n              <Card.Link href='#'>Card Link</Card.Link>\r\n              <Card.Link href='#'>Another Link</Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={6}>\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Mission</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Special title treatment</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Vission</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Vission title </Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>History</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>History Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-center mb-2'>\r\n            <Card.Header>Any other Main Topic</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>Topic Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={6} lg={3}>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>Quick Links</Card.Title>\r\n              <Card.Link href='#'>Link 1</Card.Link>\r\n              <Card.Link href='#'>Link 2</Card.Link>\r\n              <Card.Link href='#'>Link 3</Card.Link>\r\n              <Card.Link href='#'>Link 4</Card.Link>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>Current Committee:</Card.Title>\r\n\r\n              <Carousel controls={false} indicators={false}>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?building'\r\n                    alt='First slide'\r\n                  />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?nature'\r\n                    alt='Third slide'\r\n                  />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img\r\n                    className='d-block w-100'\r\n                    src='https://source.unsplash.com/random/?people'\r\n                    alt='Third slide'\r\n                  />\r\n                </Carousel.Item>\r\n              </Carousel>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Header.js",["723"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      {/* First */}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xs={2} href='/' className='text-center'>\r\n            <h1>Logo</h1>\r\n          </Col>\r\n          <Col>\r\n            <Carousel controls={false} indicators={false}>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='First slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n              <Carousel.Item>\r\n                <img\r\n                  className='d-block w-100'\r\n                  src='https://source.unsplash.com/random/800x50'\r\n                  alt='Third slide'\r\n                />\r\n              </Carousel.Item>\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Second */}\r\n      <Navbar\r\n        bg='light'\r\n        variant='light'\r\n        expand='lg'\r\n        sticky='top'\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AABEA</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='mr-auto'>\r\n              <LinkContainer to='/'>\r\n                <Nav.Link>Home</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <LinkContainer to='/dashboard'>\r\n                  <Nav.Link>Dashboard</Nav.Link>\r\n                </LinkContainer>\r\n              ) : (\r\n                <LinkContainer to='/about'>\r\n                  <Nav.Link>About</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n            <Nav className='ml-auto'>\r\n              {userInfo && (\r\n                <>\r\n                  <LinkContainer to='/committees'>\r\n                    <Nav.Link>Committees</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n\r\n              <LinkContainer to='/donate'>\r\n                <Nav.Link>Donate</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                  <NavDropdown title={userInfo.username} id='username'>\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to='/register'>\r\n                    <Nav.Link>Registration</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'></i>\r\n                      Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>{' '}\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\RegisterScreen.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\screens\\UserEditScreen.js",["724"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [username, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/dashboard');\r\n    } else {\r\n      if (!user.username || user.id != userId) {\r\n        console.log(userId);\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.username);\r\n        setEmail(user.email);\r\n        setImage(user.image);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, user, userId, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUser({ id: userId, username, email, image, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        className='btn btn-light my-3 btn-sm btn-outline-success'\r\n        to='/dashboard'\r\n      >\r\n        Go Back\r\n      </Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='username'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='username'\r\n                placeholder='Enter Name..'\r\n                value={username}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email..'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image :</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url..'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isAdmin'>\r\n              {/* <Form.Label>Admin</Form.Label> */}\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","F:\\aabea\\project\\aabea\\frontend\\src\\components\\Message.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\FormContainer.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\components\\Loader.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\constants\\userConstants.js",[],"F:\\aabea\\project\\aabea\\frontend\\src\\actions\\userActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\index.js",[],["725","726"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\store.js",["727"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reportWebVitals.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\LoginScreen.js",["728"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login, logout, resendVerifyEmail } from '../actions/userActions';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport swal from 'sweetalert';\r\nimport {\r\n  USER_LOGOUT,\r\n  USER_PASSWORD_RESET_RESET,\r\n} from '../constants/userConstants';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [userRole, setUserRole] = useState('member');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error: errorLogin, userInfo } = userLogin;\r\n\r\n  const userVerifyEmailResend = useSelector(\r\n    (state) => state.userVerifyEmailResend\r\n  );\r\n  const { error: veResendError, success } = userVerifyEmailResend;\r\n\r\n  const redirect = location.search\r\n    ? location.search.split('=')[1]\r\n    : '/dashboard';\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: USER_PASSWORD_RESET_RESET });\r\n\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    } else if (errorLogin) {\r\n      // console.log(errorLogin);\r\n      if (errorLogin === 'Invalid User' || errorLogin === 'Invalid Password!') {\r\n        swal('Error!', errorLogin, 'error');\r\n        dispatch({ type: USER_LOGOUT });\r\n      } else if (\r\n        errorLogin ===\r\n        'Your application is under review. You will be notified once it is reviewed!'\r\n      ) {\r\n        swal('Error!', errorLogin, 'error');\r\n        dispatch({ type: USER_LOGOUT });\r\n      } else if (success) {\r\n        console.log(success);\r\n        swal('Success!', success, 'success').then(() => {\r\n          dispatch(logout());\r\n        });\r\n      } else if (veResendError) {\r\n        console.log(veResendError);\r\n        swal('Error!', veResendError, 'error').then(() => {\r\n          dispatch(logout());\r\n        });\r\n      } else {\r\n        swal('Error!', errorLogin, {\r\n          buttons: {\r\n            catch: {\r\n              text: 'Resend Verification Link',\r\n              value: 'resend',\r\n            },\r\n\r\n            ok: true,\r\n          },\r\n        }).then((value) => {\r\n          switch (value) {\r\n            case 'ok':\r\n              swal.close();\r\n              dispatch(logout());\r\n              break;\r\n\r\n            case 'resend':\r\n              dispatch(resendVerifyEmail(email, password, checkChapter));\r\n\r\n              break;\r\n\r\n            default:\r\n              swal.close();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    email,\r\n    password,\r\n    redirect,\r\n    errorLogin,\r\n    veResendError,\r\n  ]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Dispatch Login\r\n    dispatch(login(userRole, email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      {/* Card start */}\r\n      <Card border='info'>\r\n        <Card.Header\r\n          className='text-center'\r\n          as='h2'\r\n          style={{ color: '#033c73' }}\r\n        >\r\n          LOGIN\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {errorLogin && <Message variant='danger'>{errorLogin}</Message>}\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter Email..'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value.toLowerCase())}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password..'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='userRole'>\r\n              <Form.Label>Sign In As: </Form.Label>\r\n              <Form.Control\r\n                as='select'\r\n                // onChange={qtyChangeHandler}\r\n                onChange={(e) => setUserRole(e.target.value)}\r\n              >\r\n                <option value='member'>Member</option>\r\n                <option value='admin'>Admin</option>\r\n                <option value='systemAdmin'>System Admin</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='info' block>\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n        <Card.Footer className='text-muted'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              New ?{' '}\r\n              <Link\r\n                to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n              >\r\n                Register\r\n              </Link>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Link to={'/password/recover'}>Forgot your password?</Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n\r\n      {/* card above */}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Footer.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserEditScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\userReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Message.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\FormContainer.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Loader.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\userActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\userConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HomeScreen\\HomeScreen.js",["729","730"],"import React, { useEffect } from 'react';\r\nimport { Col, Row, Card, ListGroup, Container, Media } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { allAnnouncements } from '../../actions/announcementAction';\r\nimport { allMission } from '../../actions/missionActions';\r\nimport ImageCarousel from '../../components/ImageCarousel/ImageCarousel';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport parse from 'html-react-parser';\r\nimport { allVission } from '../../actions/vissionActions';\r\nimport { allHistory } from '../../actions/historyActions';\r\nimport { allCMembers } from '../../actions/committeeActions';\r\nimport { allEvents } from '../../actions/eventActions';\r\nimport { allHelps } from '../../actions/helpActions';\r\nimport { allLinks } from '../../actions/linkActions';\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const announcementAll = useSelector((state) => state.announcementAll);\r\n  const { loading, error, announcements } = announcementAll;\r\n\r\n  const helpAll = useSelector((state) => state.helpAll);\r\n  const {\r\n    loading: helpAllLoading,\r\n    error: helpAllError,\r\n    helpContacts,\r\n  } = helpAll;\r\n\r\n  const linkAll = useSelector((state) => state.linkAll);\r\n  const { loading: linkAllLoading, error: linkAllError, links } = linkAll;\r\n\r\n  const eventAll = useSelector((state) => state.eventAll);\r\n  const { loading: eventsLoading, error: eventsError, events } = eventAll;\r\n\r\n  const missionAll = useSelector((state) => state.missionAll);\r\n  const { loading: missionLoading, error: missionError, missions } = missionAll;\r\n\r\n  const vissionAll = useSelector((state) => state.vissionAll);\r\n  const { loading: vissionLoading, error: vissionError, vissions } = vissionAll;\r\n\r\n  const historyAll = useSelector((state) => state.historyAll);\r\n  const {\r\n    loading: historyLoading,\r\n    error: historyError,\r\n    histories,\r\n  } = historyAll;\r\n\r\n  const cMemberAll = useSelector((state) => state.cMemberAll);\r\n  const {\r\n    loading: cMemeberLoading,\r\n    error: cMemberError,\r\n    cMembers,\r\n  } = cMemberAll;\r\n\r\n  const checkChapter = window.location.host;\r\n  // const subDomain = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    console.log('domain: ' + checkChapter);\r\n    // console.log(checkChapter);\r\n    // console.log(typeof checkChapter);\r\n    dispatch(allAnnouncements(checkChapter)); // Done\r\n    dispatch(allHelps(checkChapter)); // done\r\n    dispatch(allLinks(checkChapter)); // done\r\n    dispatch(allEvents(checkChapter)); // done\r\n    dispatch(allMission());\r\n    dispatch(allVission());\r\n    dispatch(allHistory());\r\n    dispatch(allCMembers(checkChapter)); // done\r\n  }, [dispatch]);\r\n  // console.log(cMembers);\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ span: 6, order: 1 }} lg={{ span: 3, order: 1 }}>\r\n          <Card className='mb-2'>\r\n            <Card.Header className='text-info' as='h4'>\r\n              Announcements\r\n            </Card.Header>\r\n\r\n            <>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {announcements.map((announcement, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Link\r\n                        to={`/announcements/${announcement.announcementId}`}\r\n                      >\r\n                        <span className='text-info'> {announcement.title}</span>\r\n                      </Link>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </>\r\n          </Card>\r\n          <Card className='mb-2'>\r\n            <Card.Header className='text-info' as='h4'>\r\n              Events :\r\n            </Card.Header>\r\n            <>\r\n              {eventsLoading ? (\r\n                <Loader />\r\n              ) : eventsError ? (\r\n                <Message variant='danger'>{eventsError}</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {events.map((event, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Link to={`/event/${event.eventId}`}>\r\n                        <span className='text-info d-flex justify-content-between align-items-center'>\r\n                          {event.eventName}\r\n                          {event.eventStatus ? (\r\n                            <span className='badge badge-info badge-pill'>\r\n                              live\r\n                            </span>\r\n                          ) : null}\r\n                        </span>\r\n                      </Link>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </>\r\n          </Card>\r\n\r\n          <Card className='mb-2'>\r\n            <Card.Header className='text-info' as='h4'>\r\n              Contacts for help/support\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {helpAllLoading ? (\r\n                <Loader />\r\n              ) : helpAllError ? (\r\n                <Message variant='danger'>{helpAllError}</Message>\r\n              ) : helpContacts && helpContacts.length !== 0 ? (\r\n                <>\r\n                  {helpContacts.map((helpContact, index) => (\r\n                    <>\r\n                      <Media key={index}>\r\n                        <img\r\n                          width={64}\r\n                          height={64}\r\n                          className='mr-3'\r\n                          src={helpContact.profilePicture}\r\n                          alt='picture'\r\n                        />\r\n                        <Media.Body>\r\n                          <h5>{helpContact.contactName}</h5>\r\n                          <p>{helpContact.helpFor}</p>\r\n                          <p>\r\n                            Email :\r\n                            <a href={`mailTo: ${helpContact.contactEmail}`}>\r\n                              {helpContact.contactEmail}\r\n                            </a>\r\n                          </p>\r\n\r\n                          <p>\r\n                            Phone :\r\n                            <a href={`tel: ${helpContact.contactPhone}`}>\r\n                              {helpContact.contactPhone}\r\n                            </a>\r\n                          </p>\r\n                        </Media.Body>\r\n                      </Media>\r\n                      <hr />\r\n                    </>\r\n                  ))}\r\n                </>\r\n              ) : null}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='mb-2'>\r\n            <Card.Header className='text-info'>Quick Links</Card.Header>\r\n            {linkAllLoading ? (\r\n              <Loader />\r\n            ) : linkAllError ? (\r\n              <Message variant='danger'>{linkAllError}</Message>\r\n            ) : links && links.length !== 0 ? (\r\n              <>\r\n                {links.map((linku, index) => (\r\n                  <Card.Body key={index}>\r\n                    <Card.Link href={linku.link}>{linku.linkTitle}</Card.Link>\r\n                  </Card.Body>\r\n                ))}\r\n              </>\r\n            ) : null}\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col md={{ order: 12 }} lg={{ span: 6, order: 2 }}>\r\n          <Card className='text-center mb-2 home-carousal'>\r\n            <ImageCarousel />\r\n          </Card>\r\n\r\n          <Card className='text-justify mb-2'>\r\n            <Card.Header className='text-info text-center' as='h4'>\r\n              Mission\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {missionLoading ? (\r\n                <Loader />\r\n              ) : missionError ? (\r\n                <Message variant='danger'>{missionError}</Message>\r\n              ) : (\r\n                <>\r\n                  {missions.map((mission, index) => (\r\n                    <Card.Body key={index}>\r\n                      <Card.Text>\r\n                        {parse(mission.body.substring(0, 300))}...\r\n                        <Link to={`/chapters/mission/${mission.chapterId}`}>\r\n                          Read more\r\n                        </Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-justify mb-2'>\r\n            <Card.Header className='text-info text-center' as='h4'>\r\n              Vision\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {vissionLoading ? (\r\n                <Loader />\r\n              ) : vissionError ? (\r\n                <Message variant='danger'>{vissionError}</Message>\r\n              ) : (\r\n                <>\r\n                  {vissions.map((vission, index) => (\r\n                    <Card.Body key={index}>\r\n                      <Card.Text>\r\n                        {parse(vission.body.substring(0, 300))}...\r\n                        <Link to={`/chapters/vission/${vission.chapterId}`}>\r\n                          Read more\r\n                        </Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className='text-justify mb-2'>\r\n            <Card.Header className='text-info text-center' as='h4'>\r\n              History\r\n            </Card.Header>\r\n            <>\r\n              {historyLoading ? (\r\n                <Loader />\r\n              ) : historyError ? (\r\n                <Message variant='danger'>{historyError}</Message>\r\n              ) : (\r\n                <>\r\n                  {histories.map((history, index) => (\r\n                    <Card.Body key={index}>\r\n                      <Card.Text>\r\n                        {parse(history.body.substring(0, 300))}...\r\n                        <Link to={`/chapters/history/${history.chapterId}`}>\r\n                          Read more\r\n                        </Link>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </>\r\n          </Card>\r\n\r\n          {/* <Card className='text-justify mb-2'>\r\n            <Card.Header className='text-info text-center' as='h4'>\r\n              Any other Main Topic\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title className='text-info'>Topic Title</Card.Title>\r\n              <Card.Text>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                ipsa amet, optio mollitia rem hic odit aliquam quaerat dolor\r\n                minus molestias iusto sint, quia, quis laudantium ducimus animi\r\n                possimus inventore!\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card> */}\r\n        </Col>\r\n\r\n        <Col md={{ span: 6, order: 2 }} lg={{ span: 3, order: 12 }}>\r\n          {cMemeberLoading ? (\r\n            <Loader />\r\n          ) : cMemberError ? (\r\n            <Message variant='danger'>{cMemberError}</Message>\r\n          ) : (\r\n            cMembers.length !== 0 &&\r\n            cMembers.map((cMember, index) => (\r\n              <Card key={index} className='text-justify mb-2'>\r\n                {cMember.member.profilePicture && (\r\n                  <Card.Img\r\n                    variant='top'\r\n                    src={cMember.member.profilePicture}\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                )}\r\n\r\n                <Card.Header className='text-info'>\r\n                  {cMember.position.toUpperCase()}\r\n                  <Card.Title className='text-info'>\r\n                    {cMember.member.mInit} {cMember.member.firstName}{' '}\r\n                    {cMember.member.lastName}\r\n                  </Card.Title>\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                  {parse(cMember.bio.substring(0, 100))}...\r\n                  <Link to={`/committee/${cMember.cId}`}>Read more</Link>\r\n                </Card.Body>\r\n              </Card>\r\n            ))\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\App.styles.js",[],["731","732"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar.js",["733","734","735"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Sidebar\\Sidebar.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.js",["736","737"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { Table, Row, Col, Card, ListGroup, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getUserPaymentDetails,\r\n  getUserProfile,\r\n  payUser,\r\n} from '../../actions/userActions';\r\nimport { USER_PAY_RESET } from '../../constants/userConstants';\r\n// import { listUsers, deleteUser } from '../actions/userActions';\r\nimport { listPaymentTypes } from '../../actions/paymentTypeActions';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const [paymentTypeName, setPaymentTypeName] = useState('');\r\n  const [paymentTypeAmount, setPaymentTypeAmount] = useState('');\r\n  const [qty, setQty] = useState(1);\r\n  const [totalPayment, setTotalPayment] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userPaymentDetails = useSelector((state) => state.userPaymentDetails);\r\n  const {\r\n    loading: paymentLoading,\r\n    error: paymentErrors,\r\n    payments,\r\n  } = userPaymentDetails;\r\n\r\n  const paymentTypeList = useSelector((state) => state.paymentTypeList);\r\n  const {\r\n    loading: loadingPaymentTypes,\r\n    error: errorPaymentTypes,\r\n    paymentTypes,\r\n  } = paymentTypeList;\r\n\r\n  const userPay = useSelector((state) => state.userPay);\r\n  const { success: successPay, error: errorPay } = userPay;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(getUserProfile());\r\n\r\n      dispatch(listPaymentTypes());\r\n      dispatch(getUserPaymentDetails());\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n\r\n      const addPaypalScript = async () => {\r\n        const { data: clientId } = await axios.get(\r\n          `/api/chapters/paypal/${checkChapter}`,\r\n          config\r\n        );\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n        script.async = true;\r\n        script.onload = () => {\r\n          setSdkReady(true);\r\n        };\r\n        document.body.appendChild(script);\r\n      };\r\n\r\n      if (successPay) {\r\n        swal('Success!', successPay, 'success').then(() => {\r\n          dispatch({ type: USER_PAY_RESET });\r\n        });\r\n      } else if (errorPay) {\r\n        console.log(errorPay);\r\n        swal('Error!', errorPay, 'error').then(() => {\r\n          dispatch({ type: USER_PAY_RESET });\r\n        });\r\n      }\r\n      if (!window.paypal) {\r\n        addPaypalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [history, dispatch, userInfo, successPay, errorPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payUser(userInfo.memberId, paymentTypeName, qty, paymentResult));\r\n  };\r\n\r\n  const paymentTypeChangeHandler = (e) => {\r\n    // e.preventDefault();\r\n\r\n    // setPaymentTypeName(e.target.value);\r\n    setPaymentTypeName(e.target.value.split(',')[0]);\r\n    setPaymentTypeAmount(e.target.value.split(',')[1]);\r\n    // setTotalPayment(paymentTypeAmount * qty);\r\n  };\r\n\r\n  const qtyChangeHandler = (e) => {\r\n    // e.preventDefault();\r\n\r\n    setQty(e.target.value);\r\n    setTotalPayment(paymentTypeAmount * qty);\r\n  };\r\n  // console.log(paymentTypeAmount);\r\n  // console.log(paymentTypeName);\r\n  // console.log(qty);\r\n  // console.log(totalPayment);\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-0'\r\n        >\r\n          <>\r\n            <Row>\r\n              <Col md={8} className='mb-2 p-1'>\r\n                <Card>\r\n                  <h3 className='text-info text-center'>Payment</h3>\r\n                  {loadingPaymentTypes ? (\r\n                    <Loader />\r\n                  ) : errorPaymentTypes ? (\r\n                    <Message variant='danger'>{paymentErrors}</Message>\r\n                  ) : (\r\n                    <>\r\n                      <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                          <label>Payment Type</label>\r\n                          <Form.Control\r\n                            as='select'\r\n                            onChange={paymentTypeChangeHandler}\r\n                          >\r\n                            <option>Select Payment Type</option>\r\n                            {paymentTypes.map((paymentType, index) => (\r\n                              <option\r\n                                key={index}\r\n                                value={[\r\n                                  paymentType.paymentTypeName,\r\n                                  paymentType.paymentTypeAmount,\r\n                                ]}\r\n                              >\r\n                                {paymentType.paymentTypeName}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                          {paymentTypeName === 'nominationFee' ? (\r\n                            <>\r\n                              {user && user.status === 'inactive' ? (\r\n                                <Message variant='danger'>\r\n                                  Please Pay your registration fee first to\r\n                                  activate your account\r\n                                </Message>\r\n                              ) : (\r\n                                <>\r\n                                  <label>Please Select Year</label>\r\n                                  <Form.Control\r\n                                    as='select'\r\n                                    value={qty}\r\n                                    onChange={qtyChangeHandler}\r\n                                    // onChange={(e) => setQty(e.target.value)}\r\n                                  >\r\n                                    <option>\r\n                                      Select Number of Years for Payment\r\n                                    </option>\r\n\r\n                                    <option value={1}>1</option>\r\n                                  </Form.Control>\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <label>Number of Years</label>\r\n                              <Form.Control\r\n                                as='select'\r\n                                // type='number'\r\n                                // min='1'\r\n                                placeholder='Please enter number of years of payment'\r\n                                value={qty}\r\n                                onChange={qtyChangeHandler}\r\n                                // onChange={(e) => setQty(e.target.value)}\r\n                              >\r\n                                <option>\r\n                                  Select Number of Years for Payment\r\n                                </option>\r\n\r\n                                <option value={1}>1</option>\r\n                                <option value={2}>2</option>\r\n                                <option value={3}>3</option>\r\n                                <option value={4}>4</option>\r\n                                <option value={5}>5</option>\r\n                                <option value={6}>6</option>\r\n                                <option value={7}>7</option>\r\n                                <option value={8}>8</option>\r\n                                <option value={9}>9</option>\r\n                                <option value={10}>10</option>\r\n                              </Form.Control>\r\n                            </>\r\n                          )}\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </>\r\n                  )}\r\n                  <>\r\n                    <Card.Header as='h5' className='text-info text-center'>\r\n                      Payments\r\n                    </Card.Header>\r\n                    {paymentLoading ? (\r\n                      <Loader />\r\n                    ) : paymentErrors ? (\r\n                      <Message variant='danger'>{paymentErrors}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>Payment Type</th>\r\n                            <th>Amount</th>\r\n                            <th>Date</th>\r\n                            <th>Year</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {payments.map((payment, index) => (\r\n                            <tr key={index}>\r\n                              <td>{payment.paymentId}</td>\r\n                              <td>{payment.paymentType}</td>\r\n                              <td>{payment.amount}</td>\r\n                              <td>{payment.paymentDate.substring(0, 10)}</td>\r\n                              <td>{payment.year}</td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col md={4} className='mb-2 p-1'>\r\n                <Card>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <h5 className='text-info'>Payment Summary</h5>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Payment Type:</Col>\r\n                        <Col>{paymentTypeName}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Payment Year</Col>\r\n                        <Col>{qty}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Total</Col>\r\n                        <Col>${paymentTypeAmount * qty}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {!sdkReady ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={paymentTypeAmount * qty}\r\n                          onSuccess={successPaymentHandler}\r\n                        />\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n        {/* Payment History End */}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonateScreen\\DonateScreen.js",["738"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { Table, Row, Col, Card, ListGroup, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getUserDonationDetails,\r\n  donateUser,\r\n  donateUserGuest,\r\n  getUserProfile,\r\n} from '../../actions/userActions';\r\nimport { USER_DONATE_RESET } from '../../constants/userConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport swal from 'sweetalert';\r\nimport { listDonationTypes } from '../../actions/donationTypeAction';\r\n\r\nconst DonateScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [addDonation, setAddDonation] = useState(false);\r\n\r\n  const [guest, setGuest] = useState(false);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('Mr');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [donationTypeName, setDonationTypeName] = useState('');\r\n  const [donateAmount, setDonateAmount] = useState(5);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userDonateDetails = useSelector((state) => state.userDonateDetails);\r\n  const {\r\n    loading: donateLoading,\r\n    error: donateErrors,\r\n    donations,\r\n  } = userDonateDetails;\r\n\r\n  const userDonate = useSelector((state) => state.userDonate);\r\n  const {\r\n    loading: loadingDonate,\r\n    success: successDonate,\r\n    error: errorDonate,\r\n    donateResulte,\r\n  } = userDonate;\r\n\r\n  const donationTypeList = useSelector((state) => state.donationTypeList);\r\n  const {\r\n    loading: loadingDonationTypes,\r\n    error: errorDonationTypes,\r\n    donationTypes,\r\n  } = donationTypeList;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUserProfile());\r\n      dispatch(getUserDonationDetails());\r\n    } else {\r\n      setFirstName('');\r\n      setMInit('');\r\n      setLastName('');\r\n      setEmail('');\r\n      setDonateAmount(5);\r\n    }\r\n\r\n    dispatch(listDonationTypes());\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get(\r\n        `/api/chapters/paypal/${checkChapter}`,\r\n        config\r\n      );\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (donateResulte) {\r\n      swal('Success!', donateResulte, 'success').then(() => {\r\n        dispatch({ type: USER_DONATE_RESET });\r\n        setDonateAmount(0);\r\n        setDonationTypeName('');\r\n      });\r\n    }\r\n    if (!window.paypal) {\r\n      addPaypalScript();\r\n    } else {\r\n      setSdkReady(true);\r\n    }\r\n    // }\r\n  }, [history, dispatch, userInfo, addDonation, donateResulte]);\r\n\r\n  const donationTypeChangeHandler = (e) => {\r\n    // e.preventDefault();\r\n\r\n    setDonationTypeName(e.target.value);\r\n  };\r\n\r\n  const successDonationHandler = (paymentResult) => {\r\n    // console.log(paymentResult);\r\n    dispatch(donateUser(userInfo.memberId, donationTypeName, paymentResult));\r\n    setAddDonation(!addDonation);\r\n  };\r\n\r\n  const successDonationHandlerGuest = (paymentResult) => {\r\n    console.log(paymentResult);\r\n\r\n    dispatch(\r\n      donateUserGuest(\r\n        checkChapter,\r\n        guest,\r\n        email,\r\n        firstName,\r\n        mInit,\r\n        lastName,\r\n        donationTypeName,\r\n        paymentResult\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row className='content'>\r\n      {userInfo ? (\r\n        <>\r\n          <Col\r\n            md={{ span: 3, order: 1 }}\r\n            lg={{ span: 3, order: 1 }}\r\n            // id='sidebar-wrapper'\r\n            className='m-0 p-1'\r\n          >\r\n            <Sidebar />\r\n          </Col>\r\n          <Col\r\n            md={{ span: 9, order: 12 }}\r\n            lg={{ span: 9, order: 12 }}\r\n            id='page-content-wrapper'\r\n            className='m-0 p-1'\r\n          >\r\n            <Card border='info' className='mb-2'>\r\n              <Card.Header className='text-center' as='h2'>\r\n                <Link\r\n                  className='btn btn-outline-info btn-sm btn-block rounded'\r\n                  onClick={() => setAddDonation(!addDonation)}\r\n                >\r\n                  Make Donation\r\n                </Link>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                {addDonation\r\n                  ? (errorDonate && (\r\n                      <Message variant='danger'>{errorDonate}</Message>\r\n                    )) ||\r\n                    (loadingDonate && <Loader />) ||\r\n                    (successDonate ? (\r\n                      <Message variant='success'>{successDonate}</Message>\r\n                    ) : (\r\n                      <Row>\r\n                        <Col md={8}>\r\n                          <Form>\r\n                            <ListGroup variant='flush'>\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={3}>Name:</Col>\r\n                                  <Col>\r\n                                    {user.mInit} {user.firstName}{' '}\r\n                                    {user.lastName}\r\n                                  </Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n\r\n                              <ListGroup.Item>\r\n                                <Row>\r\n                                  <Col md={3}>E-mail:</Col>\r\n\r\n                                  <Col>{user.primaryEmail}</Col>\r\n                                </Row>\r\n                              </ListGroup.Item>\r\n                            </ListGroup>\r\n                            {loadingDonationTypes ? (\r\n                              <Loader />\r\n                            ) : errorDonationTypes ? (\r\n                              <Message variant='danger'>\r\n                                {errorDonationTypes}\r\n                              </Message>\r\n                            ) : (\r\n                              donationTypes &&\r\n                              donationTypes.length !== 0 && (\r\n                                <Form.Group>\r\n                                  <label>Donation Cause</label>\r\n                                  <Form.Control\r\n                                    as='select'\r\n                                    onChange={donationTypeChangeHandler}\r\n                                  >\r\n                                    <option>Select cause</option>\r\n                                    {donationTypes.map(\r\n                                      (donationType, index) => (\r\n                                        <option\r\n                                          key={index}\r\n                                          value={donationType.donationTypeName}\r\n                                        >\r\n                                          {donationType.donationTypeName}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </Form.Control>\r\n                                </Form.Group>\r\n                              )\r\n                            )}\r\n\r\n                            <Form.Group controlId='donateAmount'>\r\n                              <Form.Label>Donate Amount</Form.Label>\r\n                              <Form.Control\r\n                                type='number'\r\n                                placeholder='Please Enter Donation Amount'\r\n                                min='5'\r\n                                value={donateAmount}\r\n                                onChange={(e) =>\r\n                                  setDonateAmount(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n                          </Form>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col>Donation Cause</Col>\r\n                                <Col>{donationTypeName}</Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Row>\r\n                                <Col>Donation Amount</Col>\r\n                                <Col>${donateAmount}</Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              {loadingDonate && <Loader />}\r\n                              {!sdkReady ? (\r\n                                <Loader />\r\n                              ) : (\r\n                                <PayPalButton\r\n                                  amount={donateAmount}\r\n                                  onSuccess={successDonationHandler}\r\n                                />\r\n                              )}\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    ))\r\n                  : null}\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className='text-center' border='info'>\r\n              <Card.Header as='h3' className='text-info'>\r\n                Donation\r\n              </Card.Header>\r\n              {donateLoading ? (\r\n                <Loader />\r\n              ) : donateErrors ? (\r\n                <Message variant='danger'>{donateErrors}</Message>\r\n              ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                  <thead>\r\n                    <tr>\r\n                      {/* <th>ID</th> */}\r\n                      <th>Donation Type</th>\r\n                      <th>Amount</th>\r\n                      <th>Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {donations.map((donation) => (\r\n                      <tr key={donation.payerId}>\r\n                        {/* <td>{donation.memberId}</td> */}\r\n                        <td>{donation.donationType}</td>\r\n                        <td>{donation.amount}</td>\r\n                        <td>{donation.donationDate.substring(0, 10)}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <Col id='page-content-wrapper'>\r\n          <Card border='info'>\r\n            <Card.Header as='h4' className='text-center text-info'>\r\n              Donation\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={8}>\r\n                  <Form>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} md='2'>\r\n                        <Form.Label>Member ?</Form.Label>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group as={Col} md='4' controlId='guest'>\r\n                        <Form.Control\r\n                          required\r\n                          as='select'\r\n                          type='text'\r\n                          value={guest}\r\n                          onChange={(e) => setGuest(e.target.value)}\r\n                        >\r\n                          <option value='false'>No</option>\r\n                          <option value='true'>Yes</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} md='2'>\r\n                        <Form.Label>Name</Form.Label>\r\n                      </Form.Group>\r\n\r\n                      <Form.Group as={Col} md='10'>\r\n                        <Form.Group controlId='mInit'>\r\n                          <Form.Control\r\n                            required\r\n                            as='select'\r\n                            type='text'\r\n                            value={mInit}\r\n                            onChange={(e) => setMInit(e.target.value)}\r\n                          >\r\n                            <option value='Mr'>Mr</option>\r\n                            <option value='Mrs'>Mrs</option>\r\n                            <option value='Miss'>Ms</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='firstName'>\r\n                          <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='First Name'\r\n                            value={firstName}\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='lastName'>\r\n                          <Form.Control\r\n                            required\r\n                            placeholder='Last Name'\r\n                            type='text'\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} md='2'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} md='10' controlId='email'>\r\n                        <Form.Control\r\n                          required\r\n                          type='email'\r\n                          placeholder='Enter Email..'\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    {loadingDonationTypes ? (\r\n                      <Loader />\r\n                    ) : errorDonationTypes ? (\r\n                      <Message variant='danger'>{errorDonationTypes}</Message>\r\n                    ) : (\r\n                      donationTypes &&\r\n                      donationTypes.length !== 0 && (\r\n                        <Form.Row>\r\n                          <Form.Group as={Col} md='2'>\r\n                            <Form.Label>Donation Cause</Form.Label>\r\n                          </Form.Group>\r\n                          <Form.Group\r\n                            as={Col}\r\n                            md='10'\r\n                            controlId='donationTypeName'\r\n                          >\r\n                            <Form.Control\r\n                              as='select'\r\n                              onChange={donationTypeChangeHandler}\r\n                            >\r\n                              <option>Select cause</option>\r\n                              {donationTypes.map((donationType, index) => (\r\n                                <option\r\n                                  key={index}\r\n                                  value={donationType.donationTypeName}\r\n                                >\r\n                                  {donationType.donationTypeName}\r\n                                </option>\r\n                              ))}\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                        </Form.Row>\r\n                      )\r\n                    )}\r\n\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} md='2'>\r\n                        <Form.Label>Donate Amount</Form.Label>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} md='10' controlId='donateAmount'>\r\n                        <Form.Control\r\n                          required\r\n                          type='number'\r\n                          min='5'\r\n                          placeholder='Please Enter Donation Amount'\r\n                          value={donateAmount}\r\n                          onChange={(e) => setDonateAmount(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  </Form>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Donation cause</Col>\r\n                        <Col>{donationTypeName}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Donation Amount</Col>\r\n                        <Col>${donateAmount}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      {loadingDonate && <Loader />}\r\n                      {!sdkReady ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={donateAmount}\r\n                          onSuccess={successDonationHandlerGuest}\r\n                        />\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DonateScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\TrainingScreen\\TrainingScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteesScreen.js",["739"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Media,\r\n  ListGroup,\r\n  Container,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  newCMember,\r\n  allCMembers,\r\n  deleteCMember,\r\n  getCMemberById,\r\n  updateCMemberById,\r\n} from '../../actions/committeeActions';\r\nimport {\r\n  COMMITTEE_MEMBER_BY_ID_RESET,\r\n  COMMITTEE_MEMBER_NEW_RESET,\r\n  COMMITTEE_MEMBER_UPDATE_BY_ID_RESET,\r\n} from '../../constants/committeeConstants';\r\nimport swal from 'sweetalert';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\n\r\nconst CommitteeScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addCMember, setAddCMember] = useState(false);\r\n  const [editCMember, setEditCMember] = useState(false);\r\n  const [cMemberId, setCMemberId] = useState('');\r\n  const [position, setPosition] = useState('');\r\n  // const [tenure, setTenure] = useState([]);\r\n  const [bio, setBio] = useState('');\r\n  const [tenureFrom, setTenureFrom] = useState('');\r\n  const [tenureTo, setTenureTo] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cMemberAll = useSelector((state) => state.cMemberAll);\r\n  const { loading, error, cMembers } = cMemberAll;\r\n\r\n  const cMemberNew = useSelector((state) => state.cMemberNew);\r\n  const {\r\n    loading: cMemberNewLoading,\r\n    error: cMemberNewError,\r\n    success,\r\n  } = cMemberNew;\r\n\r\n  const cMemberById = useSelector((state) => state.cMemberById);\r\n  const { success: cMemberByIdSuccess, cMember } = cMemberById;\r\n\r\n  const cMemberUpdate = useSelector((state) => state.cMemberUpdate);\r\n  const { success: cMemberUpdateSuccess, error: cMemberUpdateError } =\r\n    cMemberUpdate;\r\n\r\n  const cMemberDelete = useSelector((state) => state.cMemberDelete);\r\n  const { success: successDelete } = cMemberDelete;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      // setId(userInfo.memberId);\r\n      dispatch({ type: COMMITTEE_MEMBER_NEW_RESET });\r\n    }\r\n    dispatch(allCMembers(checkChapter));\r\n    // else {\r\n    //   history.push('/login');\r\n    // }\r\n    if (success || cMemberUpdateSuccess) {\r\n      setAddCMember(false);\r\n      setEditCMember(false);\r\n\r\n      setCMemberId('');\r\n      setPosition('');\r\n      // setTenure('');\r\n      setTenureFrom('');\r\n      setTenureTo('');\r\n      dispatch({ type: COMMITTEE_MEMBER_BY_ID_RESET });\r\n    }\r\n    if (cMemberNewError) {\r\n      // console.log(error);\r\n      swal('Error!', cMemberNewError, 'error');\r\n    }\r\n    if (cMemberUpdateError) {\r\n      swal('Error!', cMemberUpdateError, 'error');\r\n    }\r\n\r\n    if (cMemberByIdSuccess) {\r\n      setAddCMember(true);\r\n      setEditCMember(true);\r\n      setPosition(cMember.position);\r\n      setBio(cMember.bio);\r\n      setTenureFrom(cMember.tenure[0].value);\r\n      setTenureTo(cMember.tenure[1].value);\r\n      setCMemberId(cMember.memberId);\r\n\r\n      setId(cMember.cId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    cMemberNewError,\r\n    cMemberUpdateError,\r\n    cMemberByIdSuccess,\r\n    cMember,\r\n    cMemberUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editCMemberHandler = (id) => {\r\n    dispatch({ type: COMMITTEE_MEMBER_UPDATE_BY_ID_RESET });\r\n    console.log(id);\r\n    dispatch(getCMemberById(id));\r\n  };\r\n\r\n  const deleteCMemberHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteCMember(id));\r\n    }\r\n  };\r\n\r\n  const addNewCMember = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddCMember(!addCMember);\r\n    setPosition('');\r\n    setBio('');\r\n    setTenureFrom('');\r\n    setTenureTo('');\r\n    setCMemberId('');\r\n    setEditCMember(false);\r\n    dispatch({ type: COMMITTEE_MEMBER_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editCMember) {\r\n      const period = [tenureFrom, tenureTo];\r\n\r\n      // console.log(period);\r\n      // console.log(cMemberId);\r\n      // console.log(position);\r\n      // console.log(tenure);\r\n      console.log(bio);\r\n      dispatch(updateCMemberById(id, cMemberId, position, bio, period));\r\n    } else {\r\n      // setId(userInfo.memberId);\r\n      // setTenure(new Date(tenureFrom), new Date(tenureTo));\r\n      const period = [tenureFrom, tenureTo];\r\n      // setTenure(period);\r\n      // console.log(period);\r\n      // console.log(cMemberId);\r\n      // console.log(position);\r\n      // // console.log(tenure);\r\n      // console.log(bio);\r\n      dispatch(newCMember(cMemberId, position, period, bio));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className='content'>\r\n      {userInfo &&\r\n      (userInfo.userRole === 'admin' ||\r\n        userInfo.userRole === 'systemAdmin' ||\r\n        userInfo.userRole === 'member') ? (\r\n        <>\r\n          {/* Sidebar */}\r\n          <Col\r\n            md={{ span: 3, order: 1 }}\r\n            lg={{ span: 3, order: 1 }}\r\n            id='sidebar-wrapper'\r\n            className='m-0 p-1'\r\n          >\r\n            <Sidebar />\r\n          </Col>\r\n          {/* Sidebar End */}\r\n          <Col\r\n            md={{ span: 9, order: 12 }}\r\n            lg={{ span: 9, order: 12 }}\r\n            id='page-content-wrapper'\r\n            className='m-0 p-1'\r\n          >\r\n            <>\r\n              {/* <CardColumns> */}\r\n\r\n              <Row>\r\n                {userInfo &&\r\n                (userInfo.userRole === 'admin' ||\r\n                  userInfo.userRole === 'systemAdmin') ? (\r\n                  <>\r\n                    <Col\r\n                      md={{ span: 12, order: 1 }}\r\n                      lg={{ span: 12, order: 1 }}\r\n                      // style={{ padding: 0 }}\r\n                      className='mb-2 p-0'\r\n                    >\r\n                      <Card border='info'>\r\n                        <Card.Header className='text-center text-info' as='h3'>\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block rounded'\r\n                            // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                            onClick={addNewCMember}\r\n                          >\r\n                            New Committee Member\r\n                          </Link>\r\n                        </Card.Header>\r\n\r\n                        <Card.Body>\r\n                          {addCMember\r\n                            ? (cMemberNewError && (\r\n                                <Message variant='danger'>\r\n                                  {cMemberNewError}{' '}\r\n                                </Message>\r\n                              )) ||\r\n                              (cMemberNewLoading && <Loader />) ||\r\n                              (success ? (\r\n                                <Message variant='success'>{success}</Message>\r\n                              ) : (\r\n                                <Form onSubmit={submitHandler}>\r\n                                  <Form.Group controlId='postion'>\r\n                                    <Form.Label>Position</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='Please Enter Position'\r\n                                      value={position}\r\n                                      onChange={(e) =>\r\n                                        setPosition(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='cMemberId'>\r\n                                    <Form.Label>Member Id</Form.Label>\r\n                                    <Form.Control\r\n                                      type='number'\r\n                                      placeholder='Please Enter The Member Id'\r\n                                      value={cMemberId}\r\n                                      onChange={(e) =>\r\n                                        setCMemberId(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='tenureFrom'>\r\n                                    <Form.Label>From</Form.Label>\r\n                                    <Form.Control\r\n                                      type='date'\r\n                                      placeholder='Please Enter The Starting Date'\r\n                                      value={tenureFrom}\r\n                                      onChange={(e) =>\r\n                                        setTenureFrom(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='tenureTo'>\r\n                                    <Form.Label>To</Form.Label>\r\n                                    <Form.Control\r\n                                      type='date'\r\n                                      placeholder='Please Enter The Ending Date'\r\n                                      value={tenureTo}\r\n                                      onChange={(e) =>\r\n                                        setTenureTo(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='bio'>\r\n                                    <Form.Label>Bio</Form.Label>\r\n\r\n                                    <CKEditor\r\n                                      editor={ClassicEditor}\r\n                                      data={bio}\r\n                                      onChange={(e, editor) => {\r\n                                        const data = editor.getData();\r\n                                        setBio(data);\r\n                                      }}\r\n                                    />\r\n                                  </Form.Group>\r\n\r\n                                  {editCMember ? (\r\n                                    <Button type='submit' variant='info' block>\r\n                                      <i className='fas fa-plus' /> Update\r\n                                    </Button>\r\n                                  ) : (\r\n                                    <Button type='submit' variant='info' block>\r\n                                      <i className='fas fa-plus' /> Add\r\n                                    </Button>\r\n                                  )}\r\n                                </Form>\r\n                              ))\r\n                            : null}\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      md={{ span: 12, order: 12 }}\r\n                      lg={{ span: 12, order: 12 }}\r\n                      className='mb-2 p-0'\r\n                      id='all-chapter'\r\n                    >\r\n                      <Card border='info'>\r\n                        <Card.Header as='h3' className='text-center text-info'>\r\n                          Committee Members\r\n                        </Card.Header>\r\n\r\n                        <>\r\n                          {loading ? (\r\n                            <Loader />\r\n                          ) : error ? (\r\n                            <Message variant='danger'>{error}</Message>\r\n                          ) : (\r\n                            <Table\r\n                              striped\r\n                              bordered\r\n                              hover\r\n                              responsive\r\n                              className='table-sm'\r\n                            >\r\n                              <thead>\r\n                                <tr>\r\n                                  {/* <th>ID</th> */}\r\n                                  <th>Tenure</th>\r\n                                  <th>Position</th>\r\n                                  <th>Member Id</th>\r\n                                  <th>Name</th>\r\n                                  {/* <th>Bio</th> */}\r\n                                  {/* <th>CHAPTER ADDRESS</th> */}\r\n                                  {userInfo &&\r\n                                    (userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') && (\r\n                                      <th>EDIT/DELETE</th>\r\n                                    )}\r\n                                </tr>\r\n                              </thead>\r\n\r\n                              <tbody>\r\n                                {cMembers.map((cMember) => (\r\n                                  <tr key={cMember.cId}>\r\n                                    {/* // <td>{announcement.chapterId}</td> */}\r\n                                    {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                                    <td>\r\n                                      {' '}\r\n                                      {new Date(\r\n                                        cMember.tenure[0].value\r\n                                      ).getFullYear()}{' '}\r\n                                      -\r\n                                      {new Date(\r\n                                        cMember.tenure[1].value\r\n                                      ).getFullYear()}\r\n                                    </td>\r\n                                    <td> {cMember.position}</td>\r\n                                    <td> {cMember.memberId}</td>\r\n                                    <td>\r\n                                      {' '}\r\n                                      {cMember.member.firstName}{' '}\r\n                                      {cMember.member.lastName}\r\n                                    </td>\r\n                                    {/* <td> {cMember.bio}</td> */}\r\n\r\n                                    {userInfo &&\r\n                                      (userInfo.userRole === 'systemAdmin' ||\r\n                                        userInfo.userRole === 'admin') && (\r\n                                        <td>\r\n                                          {/* <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              editCMemberHandler(cMember.cId)\r\n                                            }\r\n                                          >\r\n                                            <i className='fas fa-edit'></i>\r\n                                          </Button> */}\r\n\r\n                                          <span\r\n                                            onClick={() =>\r\n                                              editCMemberHandler(cMember.cId)\r\n                                            }\r\n                                          >\r\n                                            <i\r\n                                              className='far fa-edit action'\r\n                                              style={{ color: '#4285F4' }}\r\n                                            ></i>\r\n                                          </span>\r\n\r\n                                          {/* <Button\r\n                                            variant='danger'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              deleteCMemberHandler(cMember.cId)\r\n                                            }\r\n                                          >\r\n                                            <i className='fas fa-trash'></i>\r\n                                          </Button> */}\r\n\r\n                                          <span\r\n                                            onClick={() =>\r\n                                              deleteCMemberHandler(cMember.cId)\r\n                                            }\r\n                                          >\r\n                                            <i\r\n                                              className='fas fa-trash action ml-2'\r\n                                              style={{ color: 'red' }}\r\n                                            ></i>\r\n                                          </span>\r\n                                        </td>\r\n                                      )}\r\n                                  </tr>\r\n                                ))}\r\n                              </tbody>\r\n                            </Table>\r\n                          )}\r\n                        </>\r\n                      </Card>\r\n                    </Col>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <ListGroup variant='flush'>\r\n                          {cMembers.map((cMember) => (\r\n                            <ListGroup.Item>\r\n                              <Media key={cMember.cId}>\r\n                                <img\r\n                                  width={164}\r\n                                  height={164}\r\n                                  className='mr-3'\r\n                                  src={cMember.member.profilePicture}\r\n                                  alt={cMember.member.firstName}\r\n                                />\r\n                                <Media.Body>\r\n                                  <h5>{cMember.position.toUpperCase()}</h5>\r\n                                  <p className='text-justify'>\r\n                                    {parse(cMember.bio.substring(0, 100))}...\r\n                                    <Link to={`/committee/${cMember.cId}`}>\r\n                                      Read more\r\n                                    </Link>\r\n                                  </p>\r\n                                </Media.Body>\r\n                              </Media>\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                        </ListGroup>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Row>\r\n            </>\r\n          </Col>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <Container>\r\n              <ListGroup variant='flush'>\r\n                {cMembers.map((cMember) => (\r\n                  <ListGroup.Item>\r\n                    <Media key={cMember.cId}>\r\n                      <img\r\n                        width={164}\r\n                        height={164}\r\n                        className='mr-3'\r\n                        src={cMember.member.profilePicture}\r\n                        alt={cMember.member.firstName}\r\n                      />\r\n                      <Media.Body>\r\n                        <h5>{cMember.position.toUpperCase()}</h5>\r\n                        <p className='text-justify'>\r\n                          {parse(cMember.bio.substring(0, 100))}...\r\n                          <Link to={`/committee/${cMember.cId}`}>\r\n                            Read more\r\n                          </Link>\r\n                        </p>\r\n                      </Media.Body>\r\n                    </Media>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Container>\r\n          )}\r\n        </>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CommitteeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\Routes.js",[],["740","741"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Navbar\\Navbar.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DashboardScreen\\DashboardScreen.Styles.js",[],["742","743"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\Header.js",["744"],"import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { logout } from '../../actions/userActions';\r\nimport { Link } from 'react-router-dom';\r\nimport PauseOnHover from '../ImageCarousel/PauseOnHover';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport { getChapterBySubDomain } from '../../actions/chapterActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterBySubDomain = useSelector((state) => state.chapterBySubDomain);\r\n  const { loading, error, chapterByDomain } = chapterBySubDomain;\r\n\r\n  const checkChapter = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    dispatch(getChapterBySubDomain(checkChapter)); //done\r\n  }, [dispatch]);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <header>\r\n      <Container>\r\n        <Row className='align-items-center'>\r\n          <Col xs={3} className='text-center'>\r\n            <Link to='/'>\r\n              <Image\r\n                src='/uploads/logoImage.png'\r\n                alt='logo'\r\n                // style={{ height: '135px' }}\r\n                fluid\r\n                className='logo'\r\n              />\r\n            </Link>\r\n          </Col>\r\n          <Col xs={6}>\r\n            <PauseOnHover />\r\n          </Col>\r\n          <Col xs={3} className='text-center'>\r\n            <span className='nav-chapterName text-info'>\r\n              {loading ? (\r\n                <Loader />\r\n              ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n              ) : (\r\n                chapterByDomain &&\r\n                chapterByDomain.length !== 0 && (\r\n                  <h2>{chapterByDomain.chapterName}</h2>\r\n                )\r\n              )}\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Navbar\r\n        bg='dark'\r\n        variant='dark'\r\n        expand='md'\r\n        sticky='top'\r\n        collapseOnSelect\r\n      >\r\n        <>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AABEA</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='mr-auto'>\r\n              {userInfo ? (\r\n                userInfo.userRole === 'admin' ||\r\n                userInfo.userRole === 'systemAdmin' ? (\r\n                  <>\r\n                    <LinkContainer to='/dashboard'>\r\n                      <Nav.Link>Admin Dashboard</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to='/blog'>\r\n                      <Nav.Link>Blog</Nav.Link>\r\n                    </LinkContainer>\r\n                  </>\r\n                ) : userInfo.userRole === 'member' ? (\r\n                  <>\r\n                    <LinkContainer to='/dashboard'>\r\n                      <Nav.Link>Dashboard</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    <LinkContainer to='/blog'>\r\n                      <Nav.Link>Blog</Nav.Link>\r\n                    </LinkContainer>\r\n                  </>\r\n                ) : null\r\n              ) : (\r\n                <LinkContainer to='/about'>\r\n                  <Nav.Link>About</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/committiees'>\r\n                <Nav.Link>Committiees</Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo && (\r\n                <>\r\n                  <LinkContainer to='/training'>\r\n                    <Nav.Link>Training</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                  </LinkContainer>\r\n                </>\r\n              )}\r\n\r\n              <LinkContainer to='/donate'>\r\n                <Nav.Link>Donation</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <>\r\n                  {' '}\r\n                  <NavDropdown\r\n                    title={userInfo.userName.toUpperCase()}\r\n                    id='userName'\r\n                  >\r\n                    {' '}\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LinkContainer to='/register'>\r\n                    <Nav.Link>Registration</Nav.Link>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link>\r\n                      <i className='fas fa-user'> </i> Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>{' '}\r\n                </>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\EmailActivationScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\Section.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\shared\\PageTitle.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailActivationScreen\\[hash].js",["745"],"import React from 'react';\r\n\r\nexport default async function verifyUserEmail(req, res) {\r\n  const hash = req.query.hash;\r\n  console.log(`hash: ${hash}`);\r\n  if (!hash) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: 'Cannot Validate The Email Address!' });\r\n  }\r\n\r\n  const response = await fetch(\r\n    `http://localhost:3000/api/users/activate/${hash}`\r\n  );\r\n  if (response.status >= 400) {\r\n    return res\r\n      .status(401)\r\n      .json({ message: 'Cannot Validate The Email Address!' });\r\n  } else {\r\n    res.writeHead(307, { Location: '/users/activated' });\r\n    res.end();\r\n  }\r\n}\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\chapterReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\chapterConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SystemAdminScreen\\SystemAdminScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\chapterActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\UserPendingApproveScreen\\UserPendingApproveScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\paymentTypeReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\paymentTypeConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.js",["746"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\nimport {\r\n  CHAPTER_DETAILS_RESET,\r\n  CHAPTER_REGISTER_REQUEST,\r\n  CHAPTER_UPDATE_RESET,\r\n} from '../../constants/chapterConstants';\r\nimport {\r\n  deleteChapter,\r\n  getChapterById,\r\n  listChapters,\r\n  registerChapter,\r\n  updateChapterById,\r\n} from '../../actions/chapterActions';\r\n\r\nconst ChapterScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addChapter, setAddChapter] = useState(false);\r\n  const [editChapter, setEditChapter] = useState(false);\r\n  const [chapterName, setChapterName] = useState('');\r\n  const [chapterEmail, setChapterEmail] = useState('');\r\n  const [chapterAddress, setChapterAddress] = useState('');\r\n  const [chapterPhone, setChapterPhone] = useState('');\r\n  const [subDomain, setSubDomain] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const chaptersRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterAll = useSelector((state) => state.chapterAll);\r\n  const { loading, error, chapters } = chapterAll;\r\n\r\n  chaptersRef.current = chapters;\r\n\r\n  const chapterRegister = useSelector((state) => state.chapterRegister);\r\n  const {\r\n    loading: chapterRegisterLoading,\r\n    error: chapterRegisterError,\r\n    success,\r\n  } = chapterRegister;\r\n\r\n  const chapterById = useSelector((state) => state.chapterById);\r\n  const { success: chapterByIdSuccess, chapter } = chapterById;\r\n\r\n  const chapterUpdate = useSelector((state) => state.chapterUpdate);\r\n  const { success: chapterUpdateSuccess } = chapterUpdate;\r\n\r\n  const chapterDelete = useSelector((state) => state.chapterDelete);\r\n  const { success: successDelete } = chapterDelete;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      dispatch(listChapters());\r\n      dispatch({ type: CHAPTER_REGISTER_REQUEST });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || chapterUpdateSuccess) {\r\n      setAddChapter(false);\r\n      setEditChapter(false);\r\n\r\n      setChapterName('');\r\n      setChapterEmail('');\r\n      setChapterAddress('');\r\n      setChapterPhone('');\r\n      setSubDomain('');\r\n      setId('');\r\n      dispatch({ type: CHAPTER_DETAILS_RESET });\r\n    }\r\n    if (chapterByIdSuccess) {\r\n      setAddChapter(true);\r\n      setEditChapter(true);\r\n      setChapterName(chapter.chapterName);\r\n      setChapterEmail(chapter.chapterEmail);\r\n      setChapterAddress(chapter.chapterAddress);\r\n      setChapterPhone(chapter.chapterPhone);\r\n      setSubDomain(chapter.subDomain);\r\n\r\n      setId(chapter.chapterId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    chapterByIdSuccess,\r\n    chapter,\r\n    chapterUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editChapterHandler = (rowIndex) => {\r\n    const id = chaptersRef.current[rowIndex].chapterId;\r\n    dispatch({ type: CHAPTER_UPDATE_RESET });\r\n    // console.log(rowIndex);\r\n    // console.log(id);\r\n    dispatch(getChapterById(id));\r\n  };\r\n\r\n  const deleteChapterHandler = (rowIndex) => {\r\n    const id = chaptersRef.current[rowIndex].chapterId;\r\n\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteChapter(id));\r\n    }\r\n  };\r\n\r\n  const addNewChapter = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddChapter(!addChapter);\r\n    setChapterName('');\r\n    setChapterEmail('');\r\n    setChapterAddress('');\r\n    setChapterPhone('');\r\n    setSubDomain('');\r\n    setEditChapter(false);\r\n    dispatch({ type: CHAPTER_DETAILS_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editChapter) {\r\n      dispatch(\r\n        updateChapterById(\r\n          id,\r\n          chapterName,\r\n          chapterAddress,\r\n          chapterEmail,\r\n          chapterPhone,\r\n          subDomain\r\n        )\r\n      );\r\n    } else {\r\n      // setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(\r\n        registerChapter(\r\n          chapterEmail,\r\n          chapterName,\r\n          chapterAddress,\r\n          chapterPhone,\r\n          subDomain\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'CHAPTER NAME',\r\n      accessor: 'chapterName',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'CHAPTER EMAIL',\r\n      accessor: 'chapterEmail',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'CHAPTER PHONE',\r\n      accessor: 'chapterPhone',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'SUBDOAMIN',\r\n      accessor: 'subDomain',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'CHAPTER ADDRESS',\r\n      accessor: 'chapterAddress',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <div>\r\n            <span onClick={() => editChapterHandler(rowIdx)}>\r\n              <i className='far fa-edit action mr-2'></i>\r\n            </span>\r\n\r\n            <span onClick={() => deleteChapterHandler(rowIdx)}>\r\n              <i className='fas fa-trash action'></i>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                      onClick={addNewChapter}\r\n                    >\r\n                      New Chapter\r\n                    </Link>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {addChapter\r\n                      ? (chapterRegisterError && (\r\n                          <Message variant='danger'>\r\n                            {chapterRegisterError}\r\n                          </Message>\r\n                        )) ||\r\n                        // (chapterRegisterLoading && <Loader />)\r\n                        //  ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='chapterName'>\r\n                              <Form.Label>Chapter Name</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A chapter name..'\r\n                                value={chapterName}\r\n                                onChange={(e) => setChapterName(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterPhone'>\r\n                              <Form.Label>Phone</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter phone number..'\r\n                                value={chapterPhone}\r\n                                onChange={(e) =>\r\n                                  setChapterPhone(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterEmail'>\r\n                              <Form.Label>Email</Form.Label>\r\n                              <Form.Control\r\n                                type='email'\r\n                                placeholder='Please Enter email address..'\r\n                                value={chapterEmail}\r\n                                onChange={(e) =>\r\n                                  setChapterEmail(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='subDomain'>\r\n                              <Form.Label>SubDomain</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter subdomain..'\r\n                                value={subDomain}\r\n                                onChange={(e) => setSubDomain(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='chapterAddress'>\r\n                              <Form.Label>Chapter Address</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter chapter address..'\r\n                                value={chapterAddress}\r\n                                onChange={(e) =>\r\n                                  setChapterAddress(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {editChapter ? (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    Chapters\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={chapters} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChapterScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ChapterScreen\\ChapterScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymenttypeScreen\\PaymentTypeScreen.js",["747","748","749","750","751","752","753","754","755","756","757","758","759","760","761"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\paymentTypeActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PaymentTypeScreen\\PaymentTypeScreen.js",["762"],"import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  deletePaymentType,\r\n  listPaymentTypes,\r\n  registerPaymentType,\r\n} from '../../actions/paymentTypeActions';\r\nimport {\r\n  PAYMENT_TYPE_LIST_RESET,\r\n  PAYMENT_TYPE_REGISTER_RESET,\r\n} from '../../constants/paymentTypeConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nconst PaymentTypeScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addPaymentType, setAddPaymentType] = useState(false);\r\n\r\n  const [paymentTypeName, setPaymentTypeName] = useState('');\r\n  const [paymentTypeAmount, setPaymentTypeAmount] = useState('');\r\n  const [paymentTypeDescription, setPaymentTypeDescription] = useState('');\r\n\r\n  const paymentTypeList = useSelector((state) => state.paymentTypeList);\r\n  const { loading, error, paymentTypes } = paymentTypeList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const paymentTypeDelete = useSelector((state) => state.paymentTypeDelete);\r\n  const { success: successPaymentTypeDelete } = paymentTypeDelete;\r\n\r\n  const paymentTypeRegister = useSelector((state) => state.paymentTypeRegister);\r\n  const {\r\n    loading: registerLoading,\r\n    error: registerError,\r\n    success,\r\n  } = paymentTypeRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listPaymentTypes());\r\n      dispatch({ type: PAYMENT_TYPE_LIST_RESET });\r\n      dispatch({ type: PAYMENT_TYPE_REGISTER_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddPaymentType((addPaymentType) => !addPaymentType);\r\n      setPaymentTypeName('');\r\n      setPaymentTypeAmount('');\r\n      setPaymentTypeDescription('');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successPaymentTypeDelete,\r\n    // paymentTypes,\r\n    success,\r\n  ]);\r\n\r\n  const deletePaymentTypeHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deletePaymentType(id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      registerPaymentType(\r\n        paymentTypeName,\r\n        paymentTypeAmount,\r\n        paymentTypeDescription\r\n      )\r\n    );\r\n  };\r\n  // console.log(addPaymentType);\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-0'\r\n        >\r\n          <>\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-1'\r\n              >\r\n                <>\r\n                  {/* Card Start */}\r\n                  <Card border='info'>\r\n                    <Card.Header className='text-center' as='h2'>\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => setAddPaymentType(!addPaymentType)}\r\n                      >\r\n                        Add New Payment Type\r\n                      </Link>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      {addPaymentType\r\n                        ? (registerError && (\r\n                            <Message variant='danger'>{registerError}</Message>\r\n                          )) ||\r\n                          (registerLoading && <Loader />) ||\r\n                          (success ? (\r\n                            <Message variant='success'>{success}</Message>\r\n                          ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                              <Form.Group controlId='firstName'>\r\n                                <Form.Label>Payment type</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeName'\r\n                                  placeholder='Please Enter Payment Type Name..'\r\n                                  value={paymentTypeName}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeName(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group controlId='lastName'>\r\n                                <Form.Label>Amount</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeAmount'\r\n                                  placeholder='Please Enter an amount for this payment type'\r\n                                  value={paymentTypeAmount}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeAmount(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group controlId='Description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                  type='paymentTypeDescription'\r\n                                  placeholder='Please Enter Description..'\r\n                                  value={paymentTypeDescription}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeDescription(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            </Form>\r\n                          ))\r\n                        : null}\r\n                    </Card.Body>\r\n                  </Card>\r\n                  {/* Card End */}\r\n                </>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              <Col\r\n                md={{ span: 6, order: 12 }}\r\n                lg={{ span: 6, order: 12 }}\r\n                className='mb-2 p-1'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    All Payment Types\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            {/* <th>ID</th> */}\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>NAME</th>\r\n                            <th>AMOUNT</th>\r\n\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>ACTION</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {paymentTypes.map((paymentType) => (\r\n                            <tr key={paymentType.paymentTypeId}>\r\n                              {/* <td>{paymentType.paymentTypeId}</td> */}\r\n\r\n                              <td> {paymentType.paymentTypeName}</td>\r\n\r\n                              <td> {paymentType.paymentTypeAmount}</td>\r\n\r\n                              {(userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <td>\r\n                                  {/* <LinkContainer\r\n                                    to={`/paymentType/${paymentType.paymentTypeId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer> */}\r\n\r\n                                  <span\r\n                                    onClick={() =>\r\n                                      deletePaymentTypeHandler(\r\n                                        paymentType.paymentTypeId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i\r\n                                      className='fas fa-trash action ml-2'\r\n                                      style={{ color: 'red' }}\r\n                                    ></i>\r\n                                  </span>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Chapter List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentTypeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\PaymentDropdown.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\PaymentDropdown\\DatePicker.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.js",["763"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport {\r\n  allAnnouncements,\r\n  deleteAnnouncement,\r\n  getAnnouncementById,\r\n  newAnnouncement,\r\n  updateAnnouncementById,\r\n} from '../../actions/announcementAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  ANNOUNCEMENT_BY_ID_RESET,\r\n  ANNOUNCEMENT_NEW_RESET,\r\n  ANNOUNCEMENT_UPDATE_BY_ID_RESET,\r\n} from '../../constants/announcementConstants';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\n\r\nconst AnnouncementScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addAnnouncement, setAddAnnouncement] = useState(false);\r\n  const [editAnnouncement, setEditAnnouncement] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const announcementsRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const announcementAll = useSelector((state) => state.announcementAll);\r\n  const { loading, error, announcements } = announcementAll;\r\n\r\n  announcementsRef.current = announcements;\r\n\r\n  const announcementNew = useSelector((state) => state.announcementNew);\r\n  const {\r\n    loading: announcementNewLoading,\r\n    error: announcementNewError,\r\n    success,\r\n  } = announcementNew;\r\n\r\n  const announcementById = useSelector((state) => state.announcementById);\r\n  const { success: announcementByIdSuccess, announcement } = announcementById;\r\n\r\n  const announcementUpdate = useSelector((state) => state.announcementUpdate);\r\n  const { success: announcementUpdateSuccess } = announcementUpdate;\r\n\r\n  const announcementDelete = useSelector((state) => state.announcementDelete);\r\n  const { success: successDelete } = announcementDelete;\r\n\r\n  const checkChapter = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      setId(userInfo.memberId);\r\n      dispatch(allAnnouncements(checkChapter));\r\n      dispatch({ type: ANNOUNCEMENT_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || announcementUpdateSuccess) {\r\n      setAddAnnouncement(false);\r\n      setEditAnnouncement(false);\r\n\r\n      setTitle('');\r\n      setBody('');\r\n      dispatch({ type: ANNOUNCEMENT_BY_ID_RESET });\r\n    }\r\n    if (announcementByIdSuccess) {\r\n      setAddAnnouncement(true);\r\n      setEditAnnouncement(true);\r\n      setTitle(announcement.title);\r\n      setBody(announcement.body);\r\n      setId(announcement.announcementId);\r\n\r\n      // setId(announcement.announcementId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    announcementByIdSuccess,\r\n    announcement,\r\n    announcementUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editAnnouncementHandler = (rowIndex) => {\r\n    const id = announcementsRef.current[rowIndex].announcementId;\r\n    dispatch({ type: ANNOUNCEMENT_UPDATE_BY_ID_RESET });\r\n    console.log(rowIndex);\r\n    console.log(id);\r\n    dispatch(getAnnouncementById(id));\r\n  };\r\n\r\n  const deleteAnnouncementHandler = (rowIndex) => {\r\n    const id = announcementsRef.current[rowIndex].announcementId;\r\n\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteAnnouncement(id));\r\n    }\r\n  };\r\n\r\n  const addNewAnnouncement = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddAnnouncement(!addAnnouncement);\r\n    setTitle('');\r\n    setBody('');\r\n    setEditAnnouncement(false);\r\n    dispatch({ type: ANNOUNCEMENT_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editAnnouncement) {\r\n      dispatch(updateAnnouncementById(id, title, body));\r\n    } else {\r\n      setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(newAnnouncement(title, body, id));\r\n    }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'Title',\r\n      accessor: 'title',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'Announcement',\r\n      accessor: 'body',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return parse(value);\r\n      },\r\n    },\r\n    {\r\n      Header: 'Date',\r\n      accessor: 'createdAt',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return format(new Date(value), 'dd/mm/yyyy');\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <div>\r\n            <span onClick={() => editAnnouncementHandler(rowIdx)}>\r\n              <i className='far fa-edit action mr-2'></i>\r\n            </span>\r\n\r\n            <span onClick={() => deleteAnnouncementHandler(rowIdx)}>\r\n              <i className='fas fa-trash action'></i>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                      onClick={addNewAnnouncement}\r\n                    >\r\n                      New Announcement\r\n                    </Link>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {addAnnouncement\r\n                      ? (announcementNewError && (\r\n                          <Message variant='danger'>\r\n                            {announcementNewError}\r\n                          </Message>\r\n                        )) ||\r\n                        (announcementNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='title'>\r\n                              <Form.Label>Title</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='body'>\r\n                              <Form.Label>Announcement</Form.Label>\r\n                              <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={body}\r\n                                onChange={(e, editor) => {\r\n                                  const data = editor.getData();\r\n                                  setBody(data);\r\n                                }}\r\n                              />\r\n                              {/* <Form.Control\r\n                                as='textarea'\r\n                                rows='3'\r\n                                placeholder='Please Enter The Announcement'\r\n                                value={body}\r\n                                onChange={(e) => setBody(e.target.value)}\r\n                              ></Form.Control> */}\r\n                            </Form.Group>\r\n\r\n                            {editAnnouncement ? (\r\n                              <Button\r\n                                type='submit'\r\n                                variant='info'\r\n                                block\r\n                                // onClick={() =>\r\n                                //   updateAnnouncementHandler(\r\n                                //     announcement.announcementId\r\n                                //   )\r\n                                // }\r\n                              >\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                    {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n                    {/* {registerError && (\r\n                        <Message variant='danger'>{registerError}</Message>\r\n                      )}\r\n                      {registerLoading && <Loader />}\r\n                      {} */}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    Announcements\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={announcements} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnnouncementScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\AnnouncementScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\VissionScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\HistoryScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\MissionScreen.Styles.js",[],["764","765"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegisterScreen.js",["766","767","768"],"import axios from 'axios';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../actions/userActions';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport { USER_REGISTER_RESET } from '../../constants/userConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  // const [username, setUsername] = useState('');\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('Mr');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [certificate, setCertificate] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, success } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      swal('Success!', success, 'success').then((value) => {\r\n        dispatch({ type: USER_REGISTER_RESET });\r\n        history.push(redirect);\r\n      });\r\n    } else if (error) {\r\n      console.log(error);\r\n      swal('Error!', error, 'error');\r\n    }\r\n  }, [dispatch, history, success, redirect, error]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setCertificate(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      if (password !== confirmPassword) {\r\n        setMessage('password do not match');\r\n        swal('Error!', message, 'error');\r\n      } else {\r\n        // Dispatch Register\r\n        dispatch(\r\n          register(\r\n            email,\r\n            password,\r\n            firstName,\r\n            mInit,\r\n            lastName,\r\n            address1,\r\n            city,\r\n            state,\r\n            zipcode,\r\n            primaryPhone,\r\n            degree,\r\n            degreeYear,\r\n            major,\r\n            collegeName,\r\n            certificate,\r\n            checkChapter\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {/* Card Start */}\r\n      <Card border='info'>\r\n        <Card.Header className='text-center text-info' as='h2'>\r\n          Sign Up\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <Message variant='success'>{success}</Message>\r\n          ) : (\r\n            <>\r\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\r\n                <Form.Row>\r\n                  {/* <Row> */}\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Name</Form.Label>\r\n                  </Form.Group>\r\n                  {/* <Col md={10}> */}\r\n                  {/* <Row> */}\r\n                  {/* <Col md={2}> */}\r\n                  <Form.Group as={Col} md='2' controlId='mInit'>\r\n                    <Form.Control\r\n                      required\r\n                      as='select'\r\n                      type='text'\r\n                      value={mInit}\r\n                      onChange={(e) => setMInit(e.target.value)}\r\n                    >\r\n                      <option value='Mr'>Mr</option>\r\n                      <option value='Mrs'>Mrs</option>\r\n                      <option value='Miss'>Ms</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  {/* </Col> */}\r\n                  {/* <Col md={5}> */}\r\n                  <Form.Group as={Col} md='4' controlId='firstName'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='First Name'\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  {/* </Col> */}\r\n                  {/* <Col md={5}> */}\r\n                  <Form.Group as={Col} md='4' controlId='lastName'>\r\n                    <Form.Control\r\n                      required\r\n                      placeholder='Last Name'\r\n                      type='text'\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  {/* </Col> */}\r\n                  {/* </Row> */}\r\n                  {/* </Col> */}\r\n                  {/* </Row> */}\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Address</Form.Label>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='10' controlId='address1'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='1234 Main St...'\r\n                      value={address1}\r\n                      onChange={(e) => setAddress1(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 10, offset: 2 }}\r\n                    controlId='state'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter State..'\r\n                      value={state}\r\n                      onChange={(e) => setState(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 10, offset: 2 }}\r\n                    controlId='city'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter City..'\r\n                      value={city}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 10, offset: 2 }}\r\n                    controlId='zipcode'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Zipcode..'\r\n                      value={zipcode}\r\n                      onChange={(e) => setZipcode(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='primaryPhone'>\r\n                    <Form.Control\r\n                      required\r\n                      type='number'\r\n                      placeholder='Enter Your Phone Number..'\r\n                      value={primaryPhone}\r\n                      onChange={(e) => setPrimaryPhone(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Education</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='5' controlId='degree'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Your Last Degree Received..'\r\n                      value={degree}\r\n                      onChange={(e) => setDegree(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='5' controlId='degreeYear'>\r\n                    <Form.Control\r\n                      required\r\n                      type='number'\r\n                      placeholder='Enter The Year of Degree Awarded..'\r\n                      value={degreeYear}\r\n                      onChange={(e) => setDegreeYear(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 5, offset: 2 }}\r\n                    controlId='major'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Your Major..'\r\n                      value={major}\r\n                      onChange={(e) => setMajor(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='5' controlId='collegeName'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      placeholder='Enter Your University/College Name..'\r\n                      value={collegeName}\r\n                      onChange={(e) => setCollegeName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Certificate</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='certificate'>\r\n                    <Form.Control\r\n                      required\r\n                      type='text'\r\n                      // placeholder='Enter your last certificate url..'\r\n                      value={certificate}\r\n                      onChange={(e) => setCertificate(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Form.File\r\n                      id='image-file'\r\n                      label='Choose File'\r\n                      custom\r\n                      onChange={uploadFileHandler}\r\n                    ></Form.File>\r\n                    {uploading && <Loader />}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} md='2'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='10' controlId='email'>\r\n                    <Form.Control\r\n                      required\r\n                      type='email'\r\n                      placeholder='Enter Email..'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value.toLowerCase())}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 5, offset: 2 }}\r\n                    controlId='password'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='password'\r\n                      placeholder='Enter password..'\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group\r\n                    as={Col}\r\n                    md={{ span: 5 }}\r\n                    controlId='confirmPassword'\r\n                  >\r\n                    <Form.Control\r\n                      required\r\n                      type='password'\r\n                      placeholder='Confirm password..'\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                      isInvalid={password !== confirmPassword}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col md={{ span: 10, offset: 2 }}>\r\n                    <Button type='submit' variant='info' block>\r\n                      Register\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n        <Card.Footer className='text-muted text-right'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              Have an Account?{' '}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                <span className='text-info'>Login</span>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer>\r\n      </Card>\r\n      {/* Card End */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\n// ///// Register attributes\r\n// {\r\n\r\n//   \"firstName\": \"jobayer\", done\r\n//   \"mInit\": \"Mr.\", done\r\n//   \"lastName\": \"Ahmad\", done\r\n//   \"address1\": \"30 long Island Steet, NY,USA\", Done\r\n//   \"address2\": \"31 long Island Steet, NY,USA\", //////////////// not in from register\r\n//   \"city\": \"Newyork\", Done\r\n//   \"state\": \"NY\",\r\n//   \"zipcode\": \"123456\",\r\n//   \"email\": \"jobayer@example.com\",\r\n//   \"password\": \"123456\",\r\n//   \"alternateEmail\": \"jobayer_alter@example.com\",\r\n//   \"primaryPhone\": \"1234567890\",\r\n//   \"alternatePhone\": \"1234567890\",\r\n//   \"degree\": \"B.Sc\",\r\n//   \"degreeYear\": \"2000\",\r\n//   \"major\": \"EEE\",\r\n//   \"collegeName\": \"AIUB\",\r\n//   \"status\": \"active\",\r\n//   \"balance\": \"10000.05\"\r\n\r\n// state,\r\n// zipcode,\r\n//\r\n//\r\n// primaryPhone,\r\n//  degree,\r\n//   degreeYear,\r\n//   major,\r\n//   collegeName\r\n\r\n// }\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordResetScreen\\PasswordResetScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\PasswordUpdateScreen\\PasswordUpdateScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\vissionReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\announcementReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\missionReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\historyReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\historyConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\vissionConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\missionConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\announcementConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\announcementAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\missionActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\ProfileScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\vissionActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\historyActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\imageReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\imageConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.js",["769","770","771"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Image,\r\n  ListGroup,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\n\r\nimport {\r\n  allImage,\r\n  deleteImage,\r\n  getHomeScreenImage,\r\n  getImageByEvent,\r\n  newImage,\r\n} from '../../actions/imageActions';\r\nimport * as S from './ImagesScreen.Styles';\r\nimport {\r\n  IMAGE_BY_ID_RESET,\r\n  IMAGE_NEW_RESET,\r\n} from '../../constants/imageConstants';\r\nimport { allEvents } from '../../actions/eventActions';\r\n\r\nconst ImagesScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const checkChapter = window.location.host;\r\n\r\n  const [addImage, setAddImage] = useState(false);\r\n  const [imageName, setImageName] = useState('');\r\n  const [imageDescription, setImageDescription] = useState('');\r\n  const [eventId, setEventId] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const imageHomeScreen = useSelector((state) => state.imageHomeScreen);\r\n  const {\r\n    loading: homeScreenImagesLoading,\r\n    error: homeScreenImagesError,\r\n    homeScreenImages,\r\n  } = imageHomeScreen;\r\n\r\n  const imageByEvent = useSelector((state) => state.imageByEvent);\r\n  const {\r\n    loading: imageByEventLoading,\r\n    error: imageByEventError,\r\n    images: imageByEventImages,\r\n  } = imageByEvent;\r\n\r\n  const imageAll = useSelector((state) => state.imageAll);\r\n  const { loading, error, images } = imageAll;\r\n\r\n  const imageNew = useSelector((state) => state.imageNew);\r\n  const { loading: imageNewLoading, error: imageNewError, success } = imageNew;\r\n\r\n  const imageDelete = useSelector((state) => state.imageDelete);\r\n  const { success: successDelete } = imageDelete;\r\n\r\n  const eventAll = useSelector((state) => state.eventAll);\r\n  const { loading: eventAllLoading, error: eventAllError, events } = eventAll;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      dispatch(allImage(checkChapter));\r\n      dispatch(getHomeScreenImage(checkChapter));\r\n      dispatch(getImageByEvent(checkChapter));\r\n      dispatch(allEvents(checkChapter));\r\n      dispatch({ type: IMAGE_NEW_RESET });\r\n      dispatch({ type: IMAGE_BY_ID_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddImage((addImage) => !addImage);\r\n      setImageName('');\r\n      setImageDescription('');\r\n      setEventId('');\r\n      setImage('');\r\n      dispatch({ type: IMAGE_BY_ID_RESET });\r\n    }\r\n  }, [dispatch, history, userInfo, success, successDelete]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      console.log(data);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const deleteImageHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteImage(id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      newImage(imageName, imageDescription, eventId, image, checkChapter)\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <S.CardDeck>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      onClick={() => setAddImage(!addImage)}\r\n                    >\r\n                      Add Image\r\n                    </Link>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {addImage\r\n                      ? (imageNewError && (\r\n                          <Message variant='danger'>{imageNewError}</Message>\r\n                        )) ||\r\n                        (imageNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='imageName'>\r\n                              <Form.Label>Image Type</Form.Label>\r\n                              <Form.Control\r\n                                as='select'\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={imageName}\r\n                                onChange={(e) => setImageName(e.target.value)}\r\n                              >\r\n                                <option>Please Select an image type</option>\r\n\r\n                                {/* <option value='logo'>Logo</option> */}\r\n                                <option value='navbarImage'>\r\n                                  Events photo\r\n                                </option>\r\n                                <option value='homeScreenImage'>\r\n                                  Chapter iconic image\r\n                                </option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {imageName && imageName === 'navbarImage' ? (\r\n                              <Form.Group controlId='imageName'>\r\n                                <Form.Label>Event</Form.Label>\r\n                                <Form.Control\r\n                                  as='select'\r\n                                  onChange={(e) => setEventId(e.target.value)}\r\n                                >\r\n                                  <option>Select event</option>\r\n                                  {events.map((event, index) => (\r\n                                    <option key={index} value={event.eventId}>\r\n                                      {event.eventName}\r\n                                    </option>\r\n                                  ))}\r\n                                </Form.Control>\r\n                              </Form.Group>\r\n                            ) : null}\r\n\r\n                            <Form.Group controlId='imageDescription'>\r\n                              <Form.Label>Image Description</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter image description'\r\n                                value={imageDescription}\r\n                                onChange={(e) =>\r\n                                  setImageDescription(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                              <Form.Label>Image</Form.Label>\r\n                              <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder='Enter image url..'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                              ></Form.Control>\r\n                              <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                              ></Form.File>\r\n                              {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='info' block>\r\n                              <i className='fas fa-plus' /> Load\r\n                            </Button>\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                {/* Chapter Iconic Images */}\r\n                <Card className='text-center mb-2' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    Chapter Iconic Images\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {homeScreenImagesLoading ? (\r\n                      <Loader />\r\n                    ) : homeScreenImagesError ? (\r\n                      <Message variant='danger'>\r\n                        {homeScreenImagesError}\r\n                      </Message>\r\n                    ) : (\r\n                      homeScreenImages && (\r\n                        <ListGroup variant='flush'>\r\n                          <ListGroup.Item>\r\n                            <Row className='justify-content-between'>\r\n                              {homeScreenImages.map((image, index) => (\r\n                                <Col md={2} key={index} className='m-1 p-0'>\r\n                                  <Link to={`/image/${image.imageId}`}>\r\n                                    <Image\r\n                                      src={image.image}\r\n                                      alt={image.imageName}\r\n                                      fluid\r\n                                      rounded\r\n                                      style={{ height: '100%', width: '100%' }}\r\n                                    />\r\n                                  </Link>\r\n                                </Col>\r\n                              ))}\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </ListGroup>\r\n                      )\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                {/* Event Images */}\r\n                <Card className='text-center mb-2' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    Event Images\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {imageByEventLoading ? (\r\n                      <Loader />\r\n                    ) : imageByEventError ? (\r\n                      <Message variant='danger'>{imageByEventError}</Message>\r\n                    ) : (\r\n                      imageByEventImages && (\r\n                        <ListGroup variant='flush'>\r\n                          {imageByEventImages.map((event, index) => (\r\n                            <ListGroup.Item key={index} className='mb-2'>\r\n                              <Card.Title className='text-info'>\r\n                                {event.eventName}\r\n                              </Card.Title>\r\n                              <Row className='justify-content-center'>\r\n                                {event.eventImageGalleries &&\r\n                                event.eventImageGalleries.length !== 0 ? (\r\n                                  event.eventImageGalleries.map(\r\n                                    (evetImage, index) => (\r\n                                      <Col\r\n                                        md={3}\r\n                                        key={index}\r\n                                        className='m-1 p-0'\r\n                                      >\r\n                                        <Link\r\n                                          to={`/image/${evetImage.imageId}`}\r\n                                        >\r\n                                          <Image\r\n                                            src={evetImage.image}\r\n                                            alt={evetImage.imageName}\r\n                                            fluid\r\n                                            rounded\r\n                                            style={{\r\n                                              height: '100%',\r\n                                              width: '100%',\r\n                                            }}\r\n                                          />\r\n                                        </Link>{' '}\r\n                                      </Col>\r\n                                    )\r\n                                  )\r\n                                ) : (\r\n                                  <h5>No Image</h5>\r\n                                )}\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                        </ListGroup>\r\n                      )\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                {/* All Images */}\r\n                <Card className='text-center mb-2' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    All Images\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image Type</th>\r\n                            <th>Description</th>\r\n                            <th>Image</th>\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>DELETE</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {images.map((image) => (\r\n                            <tr key={image.imageId}>\r\n                              {/* // <td>{announcement.chapterId}</td> */}\r\n                              {/* <td>\r\n                                {' '}\r\n                                <Image src={user.image} thumbnail />\r\n                              </td> */}\r\n                              <td> {image.imageName}</td>\r\n                              <td> {image.imageDescription}</td>\r\n                              <td>\r\n                                {' '}\r\n                                <Image\r\n                                  src={image.image}\r\n                                  alt={image.image}\r\n                                  fluid\r\n                                  rounded\r\n                                  style={{ height: '165px', width: '200px' }}\r\n                                />\r\n                                {/* <Card.Img src={image.image} variant='top' /> */}\r\n                              </td>\r\n                              {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <td>\r\n                                    {/* <Button\r\n                                      variant='danger'\r\n                                      className='btn-sm'\r\n                                      onClick={() =>\r\n                                        deleteImageHandler(image.imageId)\r\n                                      }\r\n                                    >\r\n                                      <i className='fas fa-trash'></i>\r\n                                    </Button> */}\r\n\r\n                                    <span\r\n                                      onClick={() =>\r\n                                        deleteImageHandler(image.imageId)\r\n                                      }\r\n                                    >\r\n                                      <i\r\n                                        className='fas fa-trash action ml-2'\r\n                                        style={{ color: 'red' }}\r\n                                      ></i>\r\n                                    </span>\r\n                                  </td>\r\n                                )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </S.CardDeck>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImagesScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImagesScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\imageActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.js",["772","773","774","775"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  listUsers,\r\n  deleteUser,\r\n  listPendingUsers,\r\n  deletePendingUser,\r\n  createAdminUser,\r\n  deleteAdminUser,\r\n  getUserProfile,\r\n} from '../../actions/userActions';\r\nimport { listChapters } from '../../actions/chapterActions';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\n// import { COLUMNS } from './MemberColumns';\r\nimport RTable from '../../components/Table/RTable';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { USER_DELETE_RESET } from '../../constants/userConstants';\r\n\r\nconst MembersScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [columnsAdmin, setColumnsAdmin] = useState([]);\r\n  const usersRef = useRef();\r\n\r\n  // const chapterList = useSelector((state) => state.chapterList);\r\n  // const { loading, error, chapters } = chapterList;\r\n\r\n  const userPendingList = useSelector((state) => state.userPendingList);\r\n  const {\r\n    loading: pendingUsersLoading,\r\n    error: pendingUsersError,\r\n    pendingUsers,\r\n  } = userPendingList;\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading: userListLoading, error: userListError, users } = userList;\r\n\r\n  usersRef.current = users;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { error: errorDelete, success: successDelete } = userDelete;\r\n\r\n  const userPendingDelete = useSelector((state) => state.userPendingDelete);\r\n  const { error: errorUserPendingDelete, success: successUserPendingDelete } =\r\n    userPendingDelete;\r\n\r\n  const userCreateAdmin = useSelector((state) => state.userCreateAdmin);\r\n  const { success: successAdmin } = userCreateAdmin;\r\n\r\n  const userDeleteAdmin = useSelector((state) => state.userDeleteAdmin);\r\n  const { success: successDeleteAdmin } = userDeleteAdmin;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(getUserProfile());\r\n      // dispatch(listChapters());\r\n      dispatch(listPendingUsers(checkChapter));\r\n      dispatch(listUsers(checkChapter));\r\n\r\n      if (\r\n        userInfo.userRole === 'admin' ||\r\n        userInfo.userRole === 'systemAdmin'\r\n      ) {\r\n        setColumnsAdmin([\r\n          {\r\n            Header: 'Id',\r\n            accessor: 'memberId',\r\n            Filter: ColumnFilter,\r\n          },\r\n          // {\r\n          //   Header: 'Name',\r\n          //   accessor: 'userName',\r\n          // },\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'member.firstName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'member.lastName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'City',\r\n            accessor: 'member.city',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'State',\r\n            accessor: 'member.state',\r\n            Filter: ColumnFilter,\r\n          },\r\n\r\n          {\r\n            Header: 'Actions',\r\n            accessor: 'actions',\r\n            Cell: (props) => {\r\n              const rowIdx = props.row.id;\r\n              return (\r\n                <>\r\n                  <span onClick={() => editUserHandler(rowIdx)}>\r\n                    <i\r\n                      className='far fa-edit action'\r\n                      style={{ color: '#4285F4' }}\r\n                    ></i>\r\n                  </span>\r\n\r\n                  <Link\r\n                    className='btn btn-outline-warning btn-sm ml-2 rounded'\r\n                    onClick={() => createAdminHandler(rowIdx)}\r\n                  >\r\n                    Make admin\r\n                  </Link>\r\n\r\n                  <span onClick={() => deleteUserHandler(rowIdx)}>\r\n                    <i\r\n                      className='fas fa-trash action ml-2'\r\n                      style={{ color: 'red' }}\r\n                    ></i>\r\n                  </span>\r\n                </>\r\n              );\r\n            },\r\n          },\r\n        ]);\r\n      } else {\r\n        setColumnsAdmin([\r\n          {\r\n            Header: 'Id',\r\n            accessor: 'memberId',\r\n            Filter: ColumnFilter,\r\n          },\r\n          // {\r\n          //   Header: 'Name',\r\n          //   accessor: 'userName',\r\n          // },\r\n          {\r\n            Header: 'First Name',\r\n            accessor: 'member.firstName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'Last Name',\r\n            accessor: 'member.lastName',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'City',\r\n            accessor: 'member.city',\r\n            Filter: ColumnFilter,\r\n          },\r\n          {\r\n            Header: 'State',\r\n            accessor: 'member.state',\r\n            Filter: ColumnFilter,\r\n          },\r\n        ]);\r\n      }\r\n\r\n      if (successDelete) {\r\n        swal('Success!', successDelete, 'success').then((value) => {\r\n          dispatch({ type: USER_DELETE_RESET });\r\n        });\r\n      }\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successUserPendingDelete,\r\n    successAdmin,\r\n    successDeleteAdmin,\r\n  ]);\r\n  const editUserHandler = (rowIndex) => {\r\n    const id = usersRef.current[rowIndex].memberId;\r\n    // console.log(rowIndex);\r\n\r\n    history.push(`/admin/users/${id}/edit`);\r\n    // props.history.push(\"/tutorials/\" + id);\r\n    console.log(id);\r\n  };\r\n\r\n  const deleteUserHandler = (rowIndex) => {\r\n    const id = usersRef.current[rowIndex].memberId;\r\n    if (window.confirm('Are you sure about deleting this User?')) {\r\n      dispatch(deleteUser(id));\r\n      // console.log(`User deleted: with id: ${id}`);\r\n    }\r\n  };\r\n\r\n  const deletePendingUserHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deletePendingUser(id));\r\n      // console.log('pending user deleted');\r\n    }\r\n  };\r\n\r\n  const createAdminHandler = (rowIndex) => {\r\n    const id = usersRef.current[rowIndex].memberId;\r\n    if (window.confirm('Are you sure about making this user as Admin?')) {\r\n      dispatch(createAdminUser(id));\r\n    }\r\n  };\r\n\r\n  const deleteAdminHandler = (userId) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteAdminUser(userId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n            <Row>\r\n              {/* 5th card section : All Email Verified Pending User List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {userInfo &&\r\n              (userInfo.userRole === 'admin' ||\r\n                userInfo.userRole === 'systemAdmin') ? (\r\n                pendingUsersLoading ? (\r\n                  <Loader />\r\n                ) : pendingUsersError ? (\r\n                  <Message variant='danger'>{pendingUsersError}</Message>\r\n                ) : pendingUsers && pendingUsers.length !== 0 ? (\r\n                  <Col\r\n                    md={{ span: 12, order: 1 }}\r\n                    lg={{ span: 12, order: 1 }}\r\n                    className='mb-2 p-0'\r\n                    id='all-chapter'\r\n                  >\r\n                    <Card className='text-center' border='info'>\r\n                      <Card.Header as='h3' className='text-info'>\r\n                        Member Pending List\r\n                      </Card.Header>\r\n\r\n                      <>\r\n                        <Table\r\n                          striped\r\n                          bordered\r\n                          hover\r\n                          responsive\r\n                          className='table-sm'\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              {/* <th>ID</th> */}\r\n                              {/* <th>IMAGE</th> */}\r\n                              <th>NAME</th>\r\n                              <th>EMAIL</th>\r\n                              <th>EMAIL VERIFIED</th>\r\n                              <th>PHONE</th>\r\n                              {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <>\r\n                                    <th>APPROVE</th>\r\n                                    <th>DELETE</th>\r\n                                  </>\r\n                                )}\r\n                            </tr>\r\n                          </thead>\r\n\r\n                          <tbody>\r\n                            {pendingUsers.map((pendingUser) => (\r\n                              <tr key={pendingUser.pendingId}>\r\n                                {/* <td>{pendingUser.pendingId}</td> */}\r\n                                {/* <td>\r\n                                  {' '}\r\n                                  <Image src={user.image} thumbnail />\r\n                                </td> */}\r\n                                <td>\r\n                                  {pendingUser.firstName} {pendingUser.lastName}\r\n                                </td>\r\n                                <td>\r\n                                  <a href={`mailto: ${pendingUser.email}`}>\r\n                                    {' '}\r\n                                    {pendingUser.email}\r\n                                  </a>\r\n                                </td>\r\n                                <td>\r\n                                  {pendingUser.emailVerified === true ? (\r\n                                    <i\r\n                                      className='fas fa-check'\r\n                                      style={{ color: 'green' }}\r\n                                    ></i>\r\n                                  ) : (\r\n                                    <i\r\n                                      className='fas fa-times'\r\n                                      style={{ color: 'red' }}\r\n                                    ></i>\r\n                                  )}\r\n                                </td>\r\n                                <td> {pendingUser.primaryPhone}</td>\r\n\r\n                                {(userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') && (\r\n                                  <>\r\n                                    <td>\r\n                                      <LinkContainer\r\n                                        to={`/users/${pendingUser.pendingId}/pending`}\r\n                                      >\r\n                                        {/* <Button\r\n                                          variant='light'\r\n                                          className='btn-sm'\r\n                                        >\r\n                                          <i className='fas fa-edit'></i>\r\n                                        </Button> */}\r\n                                        <span>\r\n                                          <i\r\n                                            className='far fa-edit action'\r\n                                            style={{ color: '#4285F4' }}\r\n                                          ></i>\r\n                                        </span>\r\n                                      </LinkContainer>\r\n                                    </td>\r\n                                    <td>\r\n                                      {/* <Button\r\n                                        variant='danger'\r\n                                        className='btn-sm'\r\n                                        onClick={() =>\r\n                                          deletePendingUserHandler(\r\n                                            pendingUser.pendingId\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <i\r\n                                          className='fas fa-trash action ml-2'\r\n                                          style={{ color: 'red' }}\r\n                                        ></i>\r\n                                      </Button> */}\r\n\r\n                                      <span\r\n                                        onClick={() =>\r\n                                          deletePendingUserHandler(\r\n                                            pendingUser.pendingId\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <i\r\n                                          className='fas fa-trash action ml-2'\r\n                                          style={{ color: 'red' }}\r\n                                        ></i>\r\n                                      </span>\r\n                                    </td>\r\n                                  </>\r\n                                )}\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </Table>\r\n                      </>\r\n                    </Card>\r\n                  </Col>\r\n                ) : null\r\n              ) : null}\r\n\r\n              {/* 5th card section : All Email Verified Pending User List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 6th card section : Admin List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-member'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    Admins\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {userListLoading ? (\r\n                      <Loader />\r\n                    ) : userListError ? (\r\n                      <Message variant='danger'>{userListError}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            {/* <th>Last Name</th> */}\r\n                            <th>EMAIL</th>\r\n                            <th>Phone</th>\r\n\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <>\r\n                                  {/* <th>EDIT/DELETE</th> */}\r\n                                  <th>Action</th>\r\n                                </>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {users &&\r\n                            users.map((user, index) => (\r\n                              <tr key={index}>\r\n                                {(user.userRole === 'admin' ||\r\n                                  user.userRole === 'systemAdmin') && (\r\n                                  <>\r\n                                    <td>{user.memberId}</td>\r\n                                    {/* <td>\r\n                                      {' '}\r\n                                      <Image src={user.member.firstName} />\r\n                                    </td> */}\r\n                                    <td> {user.userName}</td>\r\n                                    <td>\r\n                                      <a href={`mailto: ${user.email}`}>\r\n                                        {' '}\r\n                                        {user.email}\r\n                                      </a>\r\n                                    </td>\r\n                                    <td>{user.member.primaryPhone}</td>\r\n                                    {/* {(userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') && (\r\n                                      <td>\r\n                                        <LinkContainer\r\n                                          to={`/users/${user.memberId}/edit`}\r\n                                        >\r\n                                          <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                          >\r\n                                            <i className='fas fa-edit'></i>\r\n                                          </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button\r\n                                          variant='danger'\r\n                                          className='btn-sm'\r\n                                          onClick={() =>\r\n                                            deleteUserHandler(user.memberId)\r\n                                          }\r\n                                        >\r\n                                          <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                      </td>\r\n                                    )} */}\r\n                                    {(userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') &&\r\n                                      (user.userRole === 'member' ? (\r\n                                        <td>\r\n                                          <Button\r\n                                            variant='warning'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              createAdminHandler(user.memberId)\r\n                                            }\r\n                                          >\r\n                                            {' '}\r\n                                            Make ADMIN\r\n                                            {/* <i className='fas fa-trash'></i> */}\r\n                                          </Button>{' '}\r\n                                        </td>\r\n                                      ) : (\r\n                                        <td>\r\n                                          <Button\r\n                                            variant='success'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                              deleteAdminHandler(user.memberId)\r\n                                            }\r\n                                          >\r\n                                            {' '}\r\n                                            Remove Admin\r\n                                            {/* <i className='fas fa-trash'></i> */}\r\n                                          </Button>\r\n                                        </td>\r\n                                      ))}\r\n                                  </>\r\n                                )}\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n              {/* 6th card section : Admin List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* 7th card section : All Member List ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-member'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    Chapter Members\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {userListLoading ? (\r\n                      <Loader />\r\n                    ) : userListError ? (\r\n                      <Message variant='danger'>{userListError}</Message>\r\n                    ) : (\r\n                      <>\r\n                        {users && users.length !== 0 && (\r\n                          <RTable users={users} COLUMNS={columnsAdmin} />\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n              {/* 7th card section : All Member List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MembersScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MembersScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\ImageCarousel.js",["776","777"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport { getHomeScreenImage } from '../../actions/imageActions';\r\n\r\nconst ImageCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const imageHomeScreen = useSelector((state) => state.imageHomeScreen);\r\n  const { loading, error, homeScreenImages } = imageHomeScreen;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHomeScreenImage(checkChapter));\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel\r\n      pause='hover'\r\n      className='bg-dark'\r\n      controls={false}\r\n      indicators={false}\r\n      fade\r\n    >\r\n      {homeScreenImages &&\r\n        homeScreenImages.map((image, index) => (\r\n          <Carousel.Item key={index}>\r\n            {/* <Link to={`/image/${image.imageId}`}> */}\r\n            <Image\r\n              src={image.image}\r\n              alt={image.imageDescription}\r\n              fluid\r\n              style={{ height: '500px', width: '100%' }}\r\n              className='chapterIconicImage'\r\n            />\r\n            {/* </Link> */}\r\n          </Carousel.Item>\r\n        ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Header\\HeaderCarousel.js",["778"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport { allImage, getNavbarImage } from '../../actions/imageActions';\r\n\r\nconst HeaderCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const imageNavbar = useSelector((state) => state.imageNavbar);\r\n  const { loading, error, images } = imageNavbar;\r\n\r\n  useEffect(() => {\r\n    dispatch(getNavbarImage());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel\r\n      pause='hover'\r\n      className='bg-dark'\r\n      controls={false}\r\n      indicators={false}\r\n    >\r\n      {images &&\r\n        images.map((image, index) => (\r\n          <Carousel.Item key={index}>\r\n            <Link to={`/image/${image.imageId}`}>\r\n              <Image\r\n                src={image.image}\r\n                alt={image.imageDescription}\r\n                fluid\r\n                style={{ height: '100px' }}\r\n              />\r\n\r\n              {/* <Carousel.Caption className='carousel-caption'>\r\n              <h2>{image.imageName}</h2>\r\n            </Carousel.Caption> */}\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default HeaderCarousel;\r\n",["779","780"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\committeeReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\committeeConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeScreen.Styles.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\committeeActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MembersScreen\\MemberColumns.js",[],["781","782"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\GlobalFilter.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\ColumnFilter.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\RTable.js",["783","784"],"import React, { useMemo } from 'react';\r\nimport { Button, Col, Row, Table } from 'react-bootstrap';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  useFilters,\r\n  usePagination,\r\n  useRowSelect,\r\n} from 'react-table';\r\nimport { Checkbox } from './CheckBox';\r\nimport GlobalFilter from './GlobalFilter';\r\n\r\nconst RTable = ({ users, COLUMNS }) => {\r\n  const data = useMemo(() => users, []);\r\n  const columns = useMemo(() => COLUMNS, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    // rows,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    selectedFlatRows,\r\n  } = useTable(\r\n    {\r\n      data: data,\r\n      columns: columns,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: 'selection',\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n            ),\r\n            Cell: ({ row }) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    }\r\n  );\r\n  console.log({\r\n    selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n  });\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <Table\r\n        {...getTableProps()}\r\n        striped\r\n        bordered\r\n        hover\r\n        responsive\r\n        className='table-sm'\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? '  ▼'\r\n                        : '  ▲'\r\n                      : ''}\r\n                  </span>\r\n                  {/* <div>{column.canFilter ? column.render('Filter') : null}</div> */}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        {/* <pre>\r\n          <code>\r\n            {JSON.stringify({\r\n              selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n            })}\r\n          </code>\r\n        </pre> */}\r\n      </Table>\r\n      <Row className='justify-content-md-center'>\r\n        <Col>\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {'<<'}\r\n          </Button>\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            {' '}\r\n            Previous\r\n            {/* <i className='fas fa-trash'></i> */}\r\n          </Button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span>\r\n            | Go to page:{' '}\r\n            <input\r\n              type='number'\r\n              defaultValue={pageIndex + 1}\r\n              onChange={(e) => {\r\n                const pageNumber = e.target.value\r\n                  ? Number(e.target.value) - 1\r\n                  : 0;\r\n                gotoPage(pageNumber);\r\n              }}\r\n              style={{ width: '50px' }}\r\n              min={1}\r\n            />\r\n          </span>\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => setPageSize(Number(e.target.value))}\r\n          >\r\n            {[2, 5, 10, 25, 50, 100].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            {' '}\r\n            Next\r\n            {/* <i className='fas fa-trash'></i> */}\r\n          </Button>\r\n          <Button\r\n            variant=''\r\n            className='btn-sm'\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            {'>>'}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RTable;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\Table\\CheckBox.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\SearchBar\\SearchBar.js",[],["785","786"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AnnouncementScreen\\Announcement.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\MissionScreen\\Mission.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\VissionScreen\\Vission.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HistoryScreen\\History.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\ImageCarousel\\PauseOnHover.js",["787"],"import React, { useEffect } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport { getNavbarImage } from '../../actions/imageActions';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\n\r\nconst PauseOnHover = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const imageNavbar = useSelector((state) => state.imageNavbar);\r\n  const { loading, error, images } = imageNavbar;\r\n\r\n  const checkChapter = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    dispatch(getNavbarImage(checkChapter));\r\n  }, [dispatch]);\r\n\r\n  var settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    arrows: false,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    pauseOnHover: true,\r\n    adaptiveHeight: true,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1300,\r\n        settings: {\r\n          slidesToShow: 4,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          dots: false,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          dots: false,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 1,\r\n          initialSlide: 2,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Slider {...settings}>\r\n          {images &&\r\n            images.map((image, index) => (\r\n              <div key={index}>\r\n                <Link to={`/image/${image.imageId}`}>\r\n                  <Image\r\n                    src={image.image}\r\n                    alt={image.imageDescription}\r\n                    fluid\r\n                    style={{ width: '100%', padding: '0.2px' }}\r\n                    className='navbarEventImage'\r\n                  />\r\n\r\n                  {/* <Carousel.Caption className='carousel-caption'>\r\n              <h2>{image.imageName}</h2>\r\n            </Carousel.Caption> */}\r\n                </Link>\r\n              </div>\r\n            ))}\r\n        </Slider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default PauseOnHover;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ProfileScreen\\EditProfileScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\CommitteesScreen\\CommitteeMemberScreens.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\AboutScreen\\About.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventScreen.js",["788"],"import React, { useEffect, useRef } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport parse from 'html-react-parser';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\nimport { allEvents, deleteEvent } from '../../actions/eventActions';\r\nimport { EVENT_UPDATE_BY_ID_RESET } from '../../constants/eventConstants';\r\n\r\nconst EventScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const eventsRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const eventAll = useSelector((state) => state.eventAll);\r\n  const { loading, error, events } = eventAll;\r\n\r\n  eventsRef.current = events;\r\n\r\n  const eventNew = useSelector((state) => state.eventNew);\r\n  const { success } = eventNew;\r\n\r\n  // const eventById = useSelector((state) => state.eventById);\r\n  // const { success: eventByIdSuccess, event } = eventById;\r\n\r\n  // const eventUpdate = useSelector((state) => state.eventUpdate);\r\n  // const { success: eventUpdateSuccess } = eventUpdate;\r\n\r\n  const eventDelete = useSelector((state) => state.eventDelete);\r\n  const { success: successDelete } = eventDelete;\r\n\r\n  const checkChapter = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      // setId(userInfo.memberId);\r\n      dispatch(allEvents(checkChapter));\r\n      // dispatch({ type: EVENT_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    // if (success || eventUpdateSuccess) {\r\n    //   setAddEvent(false);\r\n    //   setEditEvent(false);\r\n\r\n    //   setTitle('');\r\n    //   setBody('');\r\n    //   dispatch({ type: ANNOUNCEMENT_BY_ID_RESET });\r\n    // }\r\n    // if (announcementByIdSuccess) {\r\n    //   setAddAnnouncement(true);\r\n    //   setEditAnnouncement(true);\r\n    //   setTitle(announcement.title);\r\n    //   setBody(announcement.body);\r\n    //   setId(announcement.announcementId);\r\n\r\n    //   // setId(announcement.announcementId);\r\n    // }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    // announcementByIdSuccess,\r\n    // announcement,\r\n    // announcementUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editEventHandler = (rowIndex) => {\r\n    const id = eventsRef.current[rowIndex].eventId;\r\n    dispatch({ type: EVENT_UPDATE_BY_ID_RESET });\r\n    console.log(rowIndex);\r\n    console.log(id);\r\n    history.push(`/event/${id}`);\r\n    // dispatch(getEventById(id));\r\n  };\r\n\r\n  const deleteEventHandler = (rowIndex) => {\r\n    const id = eventsRef.current[rowIndex].eventId;\r\n\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteEvent(id));\r\n    }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'Title',\r\n      accessor: 'eventName',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'Event Description',\r\n      accessor: 'eventDescription',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return parse(value);\r\n      },\r\n    },\r\n    {\r\n      Header: 'Event Start Date',\r\n      accessor: 'eventDate[0].value',\r\n      Filter: ColumnFilter,\r\n      // Cell: ({ value }) => {\r\n      //   const startDate = new Date(value);\r\n      //   return [startDate];\r\n      // },\r\n    },\r\n\r\n    {\r\n      Header: 'Event End Date',\r\n      accessor: 'eventDate[1].value',\r\n      Filter: ColumnFilter,\r\n      // Cell: ({ value }) => {\r\n      //   return format(new Date(value));\r\n      // },\r\n    },\r\n\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <div>\r\n            <span onClick={() => editEventHandler(rowIdx)}>\r\n              <i className='far fa-edit action mr-2'></i>\r\n            </span>\r\n\r\n            <span onClick={() => deleteEventHandler(rowIdx)}>\r\n              <i className='fas fa-trash action'></i>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h5'>\r\n                    {/* <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                      onClick={addNewEvent}\r\n                    >\r\n                      New Event\r\n                    </Link> */}\r\n\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                      to='/eventsnew'\r\n                    >\r\n                      Create New Event\r\n                    </Link>\r\n                  </Card.Header>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    Events\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={events} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\SettingScreen\\SettingScreen.js",["789"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Card, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  getChapterSettings,\r\n  newChapterSettings,\r\n  updateChapterSettings,\r\n} from '../../actions/chapterActions';\r\nimport {\r\n  CHAPTER_SETTINGS_NEW_RESET,\r\n  CHAPTER_SETTINGS_UPDATE_RESET,\r\n} from '../../constants/chapterConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst SettingScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [newSettings, setNewSettings] = useState(false);\r\n  const [editSettings, setEditSettings] = useState(false);\r\n  const [chapterAddress, setChapterAddress] = useState('');\r\n  const [chapterEmail, setChapterEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [chapterName, setChapterName] = useState('');\r\n  const [chapterPhone, setChapterPhone] = useState('');\r\n  const [chapterPaymentId, setChapterPaymentId] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const chapterSettingsNew = useSelector((state) => state.chapterSettingsNew);\r\n  const { success: chapterSettingsNewSuccess, error: chapterSettingsNewError } =\r\n    chapterSettingsNew;\r\n\r\n  const chapterSettingsAll = useSelector((state) => state.chapterSettingsAll);\r\n  const {\r\n    loading: chapterSettingsLoading,\r\n    error: chapterSettingsError,\r\n    chapterSettings,\r\n  } = chapterSettingsAll;\r\n\r\n  const chapterSettingsUpdate = useSelector(\r\n    (state) => state.chapterSettingsUpdate\r\n  );\r\n  const {\r\n    success: chapterSettingsUpdateSuccess,\r\n    error: chapterSettingsUpdateError,\r\n  } = chapterSettingsUpdate;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      dispatch(getChapterSettings(checkChapter));\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (chapterSettingsNewSuccess || chapterSettingsUpdateSuccess) {\r\n      swal(\r\n        'Success!',\r\n        chapterSettingsNewSuccess || chapterSettingsUpdateSuccess,\r\n        'success'\r\n      ).then(() => {\r\n        dispatch({ type: CHAPTER_SETTINGS_NEW_RESET });\r\n        dispatch({ type: CHAPTER_SETTINGS_UPDATE_RESET });\r\n\r\n        setNewSettings(false);\r\n        setEditSettings(false);\r\n      });\r\n    } else if (chapterSettingsNewError || chapterSettingsUpdateError) {\r\n      swal(\r\n        'Error!',\r\n        chapterSettingsNewError || chapterSettingsUpdateError,\r\n        'error'\r\n      );\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    chapterSettingsNewSuccess,\r\n    chapterSettingsUpdateSuccess,\r\n    chapterSettingsNewError,\r\n    chapterSettingsUpdateError,\r\n  ]);\r\n\r\n  const addNewSettings = (e) => {\r\n    e.preventDefault();\r\n\r\n    setNewSettings(!newSettings);\r\n  };\r\n\r\n  const editSettingsHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditSettings(!editSettings);\r\n    setChapterName(chapterSettings.chapterName);\r\n    setChapterAddress(chapterSettings.chapterAddress);\r\n    setChapterEmail(chapterSettings.chapterEmail);\r\n    setPassword(chapterSettings.password);\r\n    setChapterPhone(chapterSettings.chapterPhone);\r\n    setChapterPaymentId(chapterSettings.chapterPayment);\r\n  };\r\n\r\n  const cancelHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditSettings(!editSettings);\r\n  };\r\n\r\n  const updateSettingsHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      updateChapterSettings(\r\n        checkChapter,\r\n        chapterEmail,\r\n        password,\r\n        chapterName,\r\n        chapterAddress,\r\n        chapterPhone,\r\n        chapterPaymentId\r\n      )\r\n    );\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(chapterAddress);\r\n\r\n    dispatch(\r\n      newChapterSettings(\r\n        chapterEmail,\r\n        password,\r\n        chapterName,\r\n        chapterAddress,\r\n        chapterPhone,\r\n        chapterPaymentId,\r\n        checkChapter\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Card>\r\n            <Card.Header as='h3' className='text-center text-info'>\r\n              Chapter Settings\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {chapterSettingsLoading ? (\r\n                <Loader />\r\n              ) : chapterSettingsError ? (\r\n                <Message variant='danger'>{chapterSettingsError}</Message>\r\n              ) : (chapterSettings && chapterSettings.length !== 0) ||\r\n                newSettings ? (\r\n                <Form onSubmit={submitHandler}>\r\n                  <ListGroup variant='flush'>\r\n                    {chapterSettings && chapterSettings.length !== 0 && (\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col md={3}>Chapter Name:</Col>\r\n                          {/*  */}\r\n                          {chapterSettings &&\r\n                          chapterSettings.length !== 0 &&\r\n                          !editSettings ? (\r\n                            <Col>{chapterSettings.chapterName}</Col>\r\n                          ) : newSettings || editSettings ? (\r\n                            <>\r\n                              <Form.Group as={Col} controlId='chapterName'>\r\n                                <Form.Control\r\n                                  required\r\n                                  type='text'\r\n                                  placeholder='Name'\r\n                                  value={chapterName}\r\n                                  onChange={(e) =>\r\n                                    setChapterName(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n                            </>\r\n                          ) : null}\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    )}\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Chapter Address:</Col>\r\n                        {chapterSettings &&\r\n                        chapterSettings.length !== 0 &&\r\n                        !editSettings ? (\r\n                          <Col>{chapterSettings.chapterAddress}</Col>\r\n                        ) : newSettings || editSettings ? (\r\n                          <>\r\n                            <Form.Group as={Col} controlId='chapterAddress'>\r\n                              <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder='Address'\r\n                                value={chapterAddress}\r\n                                onChange={(e) =>\r\n                                  setChapterAddress(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n                          </>\r\n                        ) : null}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Chapter Phone:</Col>\r\n                        {chapterSettings &&\r\n                        chapterSettings.length !== 0 &&\r\n                        !editSettings ? (\r\n                          <Col>{chapterSettings.chapterPhone}</Col>\r\n                        ) : newSettings || editSettings ? (\r\n                          <>\r\n                            <Form.Group as={Col} controlId='chapterPhone'>\r\n                              <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder='Phone number..'\r\n                                value={chapterPhone}\r\n                                onChange={(e) =>\r\n                                  setChapterPhone(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n                          </>\r\n                        ) : null}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Chapter Email:</Col>\r\n                        {chapterSettings &&\r\n                        chapterSettings.length !== 0 &&\r\n                        !editSettings ? (\r\n                          <Col>{chapterSettings.chapterEmail}</Col>\r\n                        ) : newSettings || editSettings ? (\r\n                          <>\r\n                            <Form.Group as={Col} controlId='chapterEmail'>\r\n                              <Form.Control\r\n                                required\r\n                                type='email'\r\n                                placeholder='Email..'\r\n                                value={chapterEmail}\r\n                                onChange={(e) =>\r\n                                  setChapterEmail(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n                          </>\r\n                        ) : null}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {newSettings || editSettings ? (\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <>\r\n                            <Col md={3}>Password:</Col>\r\n                            <Form.Group as={Col} controlId='password'>\r\n                              <Form.Control\r\n                                required\r\n                                type='password'\r\n                                placeholder='password...'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n                          </>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ) : null}\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>PayPal Client Id:</Col>\r\n                        {chapterSettings &&\r\n                        chapterSettings.length !== 0 &&\r\n                        !editSettings ? (\r\n                          <Col>{chapterSettings.chapterPayment}</Col>\r\n                        ) : newSettings || editSettings ? (\r\n                          <>\r\n                            <Form.Group as={Col} controlId='chapterPaymentId'>\r\n                              <Form.Control\r\n                                required\r\n                                type='text'\r\n                                placeholder='PayPal Client Id'\r\n                                value={chapterPaymentId}\r\n                                onChange={(e) =>\r\n                                  setChapterPaymentId(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n                          </>\r\n                        ) : null}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    {newSettings ? (\r\n                      <Row>\r\n                        <Col className='m-0 p-1'>\r\n                          {/* <Link\r\n                            className='btn btn-outline-info btn-sm btn-block rounded'\r\n                            onClick={submitHandler}\r\n                          >\r\n                            Submit\r\n                          </Link> */}\r\n                          <Button\r\n                            type='submit'\r\n                            variant='info'\r\n                            className='btn  btn-sm btn-block rounded'\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </Col>\r\n                        <Col className='m-0 p-1'>\r\n                          <Link\r\n                            className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                            onClick={addNewSettings}\r\n                          >\r\n                            Cancel\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    ) : editSettings ? (\r\n                      <Row>\r\n                        <Col className='m-0 p-1'>\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={updateSettingsHandler}\r\n                          >\r\n                            Update\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col className='m-0 p-1'>\r\n                          <Link\r\n                            className='btn btn-outline-danger btn-sm btn-block  rounded'\r\n                            onClick={cancelHandler}\r\n                          >\r\n                            Cancel\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    ) : (\r\n                      <Row>\r\n                        <Col className='m-0 p-1'>\r\n                          <Link\r\n                            className='btn btn-outline-warning btn-sm btn-block  rounded'\r\n                            onClick={editSettingsHandler}\r\n                          >\r\n                            Edit\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    )}\r\n                  </ListGroup>\r\n                </Form>\r\n              ) : (\r\n                <>\r\n                  <Link\r\n                    className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                    onClick={addNewSettings}\r\n                  >\r\n                    Chapter settings has not been created yet. Please create\r\n                    chapter settings. To create settings click here.\r\n                  </Link>\r\n                </>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\eventReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\eventConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\eventActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventNewScreen.js",["790"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col, Card, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport swal from 'sweetalert';\r\nimport { newEvent } from '../../actions/eventActions';\r\nimport { EVENT_NEW_RESET } from '../../constants/eventConstants';\r\n\r\nconst EventNewScreen = ({ location, history }) => {\r\n  // const [username, setUsername] = useState('');\r\n\r\n  // const [message, setMessage] = useState(null);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n  const [eventStartDate, setEventStartDate] = useState('');\r\n  const [eventEndDate, setEventEndDate] = useState('');\r\n  const [eventStartTime, setEventStartTime] = useState('');\r\n  const [eventEndTime, setEventEndTime] = useState('');\r\n  const [eventAddress, setEventAddress] = useState('');\r\n  const [adultFee, setAdultFee] = useState(0);\r\n  const [minorFee, setMinorFee] = useState(0);\r\n  const [cap, setCap] = useState(0);\r\n  // const [startDate, setStartDate] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const eventNew = useSelector((state) => state.eventNew);\r\n  const { loading, error, success, newCreatedEvent } = eventNew;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      !(userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      swal('Success!', 'New event createed successfully', 'success').then(\r\n        (value) => {\r\n          history.push(`/event/${newCreatedEvent.eventId}`);\r\n          dispatch({ type: EVENT_NEW_RESET });\r\n        }\r\n      );\r\n    } else if (error) {\r\n      console.log(error);\r\n      swal('Error!', error, 'error');\r\n    }\r\n  }, [dispatch, userInfo, history, success, error]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    } else {\r\n      const eventDate = [\r\n        { value: new Date(eventStartDate + 'T' + eventStartTime) },\r\n        { value: new Date(eventEndDate + 'T' + eventEndTime) },\r\n      ];\r\n\r\n      console.log(eventStartDate);\r\n      console.log(eventStartTime);\r\n      console.log(eventDate);\r\n\r\n      dispatch(\r\n        newEvent(\r\n          eventName,\r\n          eventDescription,\r\n          eventDate,\r\n          eventAddress,\r\n          adultFee,\r\n          minorFee,\r\n          cap\r\n        )\r\n      );\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Link className='btn btn-light my-3 btn-sm btn-outline-info' to='/events'>\r\n        Cancel\r\n      </Link>\r\n      {/* Card Start */}\r\n      <Card border='info'>\r\n        <Card.Header className='text-center text-info' as='h5'>\r\n          New Event\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {/* {message && <Message variant='danger'>{message}</Message>} */}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {loading && <Loader />}\r\n          {success ? (\r\n            <Message variant='success'>{success}</Message>\r\n          ) : (\r\n            <>\r\n              <Form noValidate validated={validated} onSubmit={submitHandler}>\r\n                <>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Event Name</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId='eventName'>\r\n                      <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Event Name'\r\n                        value={eventName}\r\n                        onChange={(e) => setEventName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Description</Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId='eventDescription'>\r\n                      <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Event Description'\r\n                        value={eventDescription}\r\n                        onChange={(e) => setEventDescription(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Date</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='5' controlId='eventStartDate'>\r\n                      <Form.Label>Start Date:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='date'\r\n                        placeholder='Enter Your Start Date'\r\n                        value={eventStartDate}\r\n                        onChange={(e) => setEventStartDate(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md='5' controlId='eventEndDate'>\r\n                      <Form.Label>End Date:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='date'\r\n                        placeholder='Enter The End Date'\r\n                        value={eventEndDate}\r\n                        onChange={(e) => setEventEndDate(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group\r\n                      as={Col}\r\n                      md={{ span: 5, offset: 2 }}\r\n                      controlId='eventStartTime'\r\n                    >\r\n                      <Form.Label>Start Time:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='time'\r\n                        placeholder='Enter Start time'\r\n                        value={eventStartTime}\r\n                        onChange={(e) => setEventStartTime(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} md='5' controlId='eventEndTime'>\r\n                      <Form.Label>Start Time:</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type='time'\r\n                        placeholder='Enter End time'\r\n                        value={eventEndTime}\r\n                        onChange={(e) => setEventEndTime(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Event Location</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='eventAddress'>\r\n                      <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Location Address'\r\n                        value={eventAddress}\r\n                        onChange={(e) => setEventAddress(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Adult Fee</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='adultFee'>\r\n                      <Form.Control\r\n                        required\r\n                        type='number'\r\n                        min='0'\r\n                        placeholder='Set Audult Fee'\r\n                        value={adultFee}\r\n                        onChange={(e) => setAdultFee(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Minor Fee</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='minorFee'>\r\n                      <Form.Control\r\n                        required\r\n                        type='number'\r\n                        min='0'\r\n                        placeholder='Set Minor Fee'\r\n                        value={minorFee}\r\n                        onChange={(e) => setMinorFee(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} md='2'>\r\n                      <Form.Label>Cap</Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} md='10' controlId='cap'>\r\n                      <Form.Control\r\n                        required\r\n                        type='number'\r\n                        min='0'\r\n                        placeholder='Set cap'\r\n                        value={cap}\r\n                        onChange={(e) => setCap(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                </>\r\n\r\n                <Form.Group as={Row}>\r\n                  <Col md={{ span: 10, offset: 2 }}>\r\n                    <Button type='submit' variant='info' block>\r\n                      Create Event\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n        {/* <Card.Footer className='text-muted text-right'>\r\n          <Row className='py-3'>\r\n            <Col>\r\n              Have an Account?{' '}\r\n              <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                <span className='text-info'>Login</span>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Card.Footer> */}\r\n      </Card>\r\n      {/* Card End */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventNewScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventByIdScreen.js",["791"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  eventAllContact,\r\n  getEventById,\r\n  getEventContactById,\r\n  newEventContact,\r\n  publishEvent,\r\n  unpublishEvent,\r\n  updateEventContactById,\r\n  deleteEventContact,\r\n  updateEventById,\r\n} from '../../actions/eventActions';\r\nimport {\r\n  EVENT_CONTACT_BY_ID_RESET,\r\n  EVENT_CONTACT_NEW_RESET,\r\n  EVENT_CONTACT_UPDATE_BY_ID_RESET,\r\n  EVENT_PUBLISH_RESET,\r\n  EVENT_UNPUBLISH_RESET,\r\n} from '../../constants/eventConstants';\r\nimport swal from 'sweetalert';\r\n\r\nconst EventByIdScreen = ({ history, match }) => {\r\n  const id = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [addEventContact, setAddEventContact] = useState(false);\r\n  const [editEventContact, setEditEventContact] = useState(false);\r\n  const [eventContactId, setEventContactId] = useState('');\r\n  const [memberId, setMemberId] = useState('');\r\n  const [positionName, setPositionName] = useState('');\r\n  const [contactEmail, setContactEmail] = useState('');\r\n  const [contactPhone, setContactPhone] = useState('');\r\n  // const [id, setId] = useState('');\r\n\r\n  const [editEvent, setEditEvent] = useState(false);\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n  const [eventStartDate, setEventStartDate] = useState('');\r\n  const [eventEndDate, setEventEndDate] = useState('');\r\n  // const [eventStartTime, setEventStartTime] = useState('');\r\n  // const [eventEndTime, setEventEndTime] = useState('');\r\n  const [eventAddress, setEventAddress] = useState('');\r\n  const [adultFee, setAdultFee] = useState(0);\r\n  const [minorFee, setMinorFee] = useState(0);\r\n  const [cap, setCap] = useState(0);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const eventById = useSelector((state) => state.eventById);\r\n  const { loading, error, event } = eventById;\r\n\r\n  const eventUpdate = useSelector((state) => state.eventUpdate);\r\n  const { success: eventUpdateSuccess } = eventUpdate;\r\n\r\n  const eventContactNew = useSelector((state) => state.eventContactNew);\r\n  const {\r\n    loading: eventContactNewLoading,\r\n    error: eventContactNewError,\r\n    success,\r\n  } = eventContactNew;\r\n\r\n  const eventContactAll = useSelector((state) => state.eventContactAll);\r\n  const {\r\n    loading: eventContactsLoading,\r\n    error: eventContactsError,\r\n    eventContacts,\r\n  } = eventContactAll;\r\n\r\n  const eventContactById = useSelector((state) => state.eventContactById);\r\n  const { success: eventContactByIdSuccess, eventContact } = eventContactById;\r\n\r\n  const eventContactUpdate = useSelector((state) => state.eventContactUpdate);\r\n  const { success: eventContactUpdateSuccess } = eventContactUpdate;\r\n\r\n  const eventContactDelete = useSelector((state) => state.eventContactDelete);\r\n  const { success: successDelete } = eventContactDelete;\r\n\r\n  const eventPublish = useSelector((state) => state.eventPublish);\r\n  const { error: eventPublishError, success: eventPublishSuccess } =\r\n    eventPublish;\r\n\r\n  const eventUnpublish = useSelector((state) => state.eventUnpublish);\r\n  const { error: eventUnpublishError, success: eventUnpublishSuccess } =\r\n    eventUnpublish;\r\n\r\n  useEffect(() => {\r\n    dispatch(getEventById(id));\r\n    dispatch(eventAllContact(id));\r\n\r\n    if (userInfo) {\r\n      dispatch({ type: EVENT_CONTACT_NEW_RESET });\r\n    }\r\n\r\n    if (success || eventContactUpdateSuccess) {\r\n      setAddEventContact(false);\r\n      setEditEventContact(false);\r\n\r\n      setEventContactId('');\r\n      setMemberId('');\r\n      setPositionName('');\r\n      setContactEmail('');\r\n      setContactPhone('');\r\n      dispatch({ type: EVENT_CONTACT_BY_ID_RESET });\r\n    }\r\n\r\n    if (eventPublishSuccess || eventUnpublishSuccess) {\r\n      swal(\r\n        'Success!',\r\n        eventPublishSuccess || eventUnpublishSuccess,\r\n        'success'\r\n      ).then(() => {\r\n        history.push('/events');\r\n        dispatch({ type: EVENT_PUBLISH_RESET });\r\n        dispatch({ type: EVENT_UNPUBLISH_RESET });\r\n      });\r\n    } else if (eventPublishError || eventUnpublishError) {\r\n      swal('Error!', eventPublishError || eventUnpublishError, 'error');\r\n    }\r\n\r\n    if (eventContactByIdSuccess) {\r\n      setAddEventContact(true);\r\n      setEditEventContact(true);\r\n      setEventContactId(eventContact.eventContactId);\r\n      setMemberId(eventContact.memberId);\r\n      setPositionName(eventContact.positionName);\r\n      setContactEmail(eventContact.contactEmail);\r\n      setContactPhone(eventContact.contactPhone);\r\n\r\n      // setId(announcement.announcementId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    id,\r\n    success,\r\n    eventUpdateSuccess,\r\n    eventContactByIdSuccess,\r\n    eventContactUpdateSuccess,\r\n    successDelete,\r\n    eventPublishSuccess,\r\n    eventUnpublishSuccess,\r\n    eventUnpublishSuccess,\r\n    eventUnpublishError,\r\n  ]);\r\n\r\n  const addNewEventContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddEventContact(!addEventContact);\r\n    setMemberId('');\r\n    setPositionName('');\r\n    setContactEmail('');\r\n    setContactPhone('');\r\n    setEditEventContact(false);\r\n    dispatch({ type: EVENT_CONTACT_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editEventContact) {\r\n      dispatch(\r\n        updateEventContactById(\r\n          eventContactId,\r\n          memberId,\r\n          positionName,\r\n          contactEmail,\r\n          contactPhone\r\n        )\r\n      );\r\n    } else {\r\n      // setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(\r\n        newEventContact(id, memberId, positionName, contactEmail, contactPhone)\r\n      );\r\n    }\r\n  };\r\n\r\n  const editEventContactHandler = (id) => {\r\n    dispatch({ type: EVENT_CONTACT_UPDATE_BY_ID_RESET });\r\n    // console.log(rowIndex);\r\n    console.log(id);\r\n    dispatch(getEventContactById(id));\r\n  };\r\n\r\n  const deleteEventContactHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteEventContact(id));\r\n    }\r\n  };\r\n\r\n  const editEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditEvent(!editEvent);\r\n\r\n    setEventName(event.eventName);\r\n    setEventDescription(event.eventDescription);\r\n    setEventStartDate(new Date(event.eventDate[0].value));\r\n    setEventEndDate(new Date(event.eventDate[1].value));\r\n    // setEventStartTime();\r\n    // setEventEndTime();\r\n    setEventAddress(event.eventAddress);\r\n    setAdultFee(event.adultFee);\r\n    setMinorFee(event.minorFee);\r\n    setCap(event.cap);\r\n    // dispatch({ type: EVENT_CONTACT_UPDATE_BY_ID_RESET });\r\n    // console.log(rowIndex);\r\n    // console.log(id);\r\n    // dispatch(getEventContactById(id));\r\n  };\r\n\r\n  const updateEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditEvent(!editEvent);\r\n    console.log(eventName);\r\n    const eventDate = [\r\n      { value: new Date(eventStartDate) },\r\n      { value: new Date(eventEndDate) },\r\n    ];\r\n    console.log(eventDate);\r\n\r\n    dispatch(\r\n      updateEventById(\r\n        id,\r\n        eventName,\r\n        eventDescription,\r\n        // eventStartDate,\r\n        // eventEndDate,\r\n        // eventStartTime,\r\n        // eventEndTime,\r\n        eventDate,\r\n        eventAddress,\r\n        adultFee,\r\n        minorFee,\r\n        cap\r\n      )\r\n    );\r\n  };\r\n\r\n  const publishEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(publishEvent(id));\r\n  };\r\n\r\n  const unpublishEventHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(unpublishEvent(id));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin') ? (\r\n        <Link\r\n          className='btn btn-light my-3 btn-sm btn-outline-info'\r\n          to='/events'\r\n        >\r\n          Go Back\r\n        </Link>\r\n      ) : (\r\n        <Link className='btn btn-light my-3 btn-sm btn-outline-info' to='/'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : event ? (\r\n        event && (\r\n          <>\r\n            <Row>\r\n              <Col md={8} className='m-0 p-1'>\r\n                <Card>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Event Name:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='eventName'>\r\n                            <Form.Control\r\n                              required\r\n                              type='text'\r\n                              placeholder='Event Name'\r\n                              value={eventName}\r\n                              onChange={(e) => setEventName(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>{event.eventName}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Description:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='eventDescription'>\r\n                            <Form.Control\r\n                              required\r\n                              type='text'\r\n                              placeholder='Event Description'\r\n                              value={eventDescription}\r\n                              onChange={(e) =>\r\n                                setEventDescription(e.target.value)\r\n                              }\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>{event.eventDescription}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Date:</Col>\r\n                        <Col>\r\n                          <ListGroup variant='flush'>\r\n                            <ListGroup.Item className='p-0'>\r\n                              <Row>\r\n                                {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') &&\r\n                                editEvent ? (\r\n                                  <Form.Group\r\n                                    as={Col}\r\n                                    // md='5'\r\n                                    controlId='eventStartDate'\r\n                                  >\r\n                                    <Form.Label>Start Date:</Form.Label>\r\n                                    <Form.Control\r\n                                      required\r\n                                      type='text'\r\n                                      placeholder='Enter Your Start Date'\r\n                                      value={eventStartDate}\r\n                                      onChange={(e) =>\r\n                                        setEventStartDate(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                ) : (\r\n                                  <>\r\n                                    <Col md={4}>Start Date :</Col>\r\n                                    {event.eventDate &&\r\n                                    event.eventDate.length !== 0 &&\r\n                                    event.eventDate[0].value ? (\r\n                                      <Col>\r\n                                        {event.eventDate[0].value.substring(\r\n                                          0,\r\n                                          10\r\n                                        )}\r\n                                      </Col>\r\n                                    ) : null}\r\n                                  </>\r\n                                )}\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className='p-0'>\r\n                              <Row>\r\n                                {userInfo &&\r\n                                (userInfo.userRole === 'systemAdmin' ||\r\n                                  userInfo.userRole === 'admin') &&\r\n                                editEvent ? (\r\n                                  <Form.Group\r\n                                    as={Col}\r\n                                    // md='5'\r\n                                    controlId='eventEndDate'\r\n                                  >\r\n                                    <Form.Label>End Date:</Form.Label>\r\n                                    <Form.Control\r\n                                      required\r\n                                      type='text'\r\n                                      placeholder='Enter The End Date'\r\n                                      value={eventEndDate}\r\n                                      onChange={(e) =>\r\n                                        setEventEndDate(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n                                ) : (\r\n                                  <>\r\n                                    <Col md={4}>End Date :</Col>\r\n                                    {event.eventDate &&\r\n                                    event.eventDate.length !== 0 &&\r\n                                    event.eventDate[1].value ? (\r\n                                      <Col>\r\n                                        {event.eventDate[1].value.substring(\r\n                                          0,\r\n                                          10\r\n                                        )}\r\n                                      </Col>\r\n                                    ) : null}\r\n                                  </>\r\n                                )}\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          </ListGroup>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Event Location:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='eventAddress'>\r\n                            <Form.Control\r\n                              required\r\n                              type='text'\r\n                              placeholder='Enter Location Address'\r\n                              value={eventAddress}\r\n                              onChange={(e) => setEventAddress(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>{event.eventAddress}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Adult Fee:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='adultFee'>\r\n                            <Form.Control\r\n                              required\r\n                              type='number'\r\n                              min='0'\r\n                              placeholder='Set Audult Fee'\r\n                              value={adultFee}\r\n                              onChange={(e) => setAdultFee(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>$ {event.adultFee}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col md={3}>Minor Fee:</Col>\r\n                        {userInfo &&\r\n                        (userInfo.userRole === 'systemAdmin' ||\r\n                          userInfo.userRole === 'admin') &&\r\n                        editEvent ? (\r\n                          <Form.Group as={Col} controlId='minorFee'>\r\n                            <Form.Control\r\n                              required\r\n                              type='number'\r\n                              min='0'\r\n                              placeholder='Set Minor Fee'\r\n                              value={minorFee}\r\n                              onChange={(e) => setMinorFee(e.target.value)}\r\n                            ></Form.Control>\r\n                          </Form.Group>\r\n                        ) : (\r\n                          <Col>$ {event.minorFee}</Col>\r\n                        )}\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {userInfo &&\r\n                      (userInfo.userRole === 'systemAdmin' ||\r\n                        userInfo.userRole === 'admin') && (\r\n                        <>\r\n                          <ListGroup.Item>\r\n                            <Row>\r\n                              <Col md={3}>Cap:</Col>\r\n                              {editEvent ? (\r\n                                <Form.Group as={Col} controlId='cap'>\r\n                                  <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    min='0'\r\n                                    placeholder='Set cap'\r\n                                    value={cap}\r\n                                    onChange={(e) => setCap(e.target.value)}\r\n                                  ></Form.Control>\r\n                                </Form.Group>\r\n                              ) : (\r\n                                <Col>{event.cap}</Col>\r\n                              )}\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        </>\r\n                      )}\r\n                  </ListGroup>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col md={4} className='m-0 p-1'>\r\n                <Card>\r\n                  {userInfo &&\r\n                    (userInfo.userRole === 'systemAdmin' ||\r\n                      userInfo.userRole === 'admin') && (\r\n                      <>\r\n                        <Card.Header className='text-center' as='h5'>\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={addNewEventContact}\r\n                          >\r\n                            Create new contact for event\r\n                          </Link>\r\n                        </Card.Header>\r\n\r\n                        <Card.Body>\r\n                          {addEventContact\r\n                            ? (eventContactNewError && (\r\n                                <Message variant='danger'>\r\n                                  {eventContactNewError}\r\n                                </Message>\r\n                              )) ||\r\n                              (eventContactNewLoading && <Loader />) ||\r\n                              (success ? (\r\n                                <Message variant='success'>{success}</Message>\r\n                              ) : (\r\n                                <Form onSubmit={submitHandler}>\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Position Name</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='Position Name'\r\n                                      value={positionName}\r\n                                      onChange={(e) =>\r\n                                        setPositionName(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Member Id</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='ID'\r\n                                      value={memberId}\r\n                                      onChange={(e) =>\r\n                                        setMemberId(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Contact Email</Form.Label>\r\n                                    <Form.Control\r\n                                      type='email'\r\n                                      placeholder='Email'\r\n                                      value={contactEmail}\r\n                                      onChange={(e) =>\r\n                                        setContactEmail(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  <Form.Group controlId='title'>\r\n                                    <Form.Label>Contact Phone</Form.Label>\r\n                                    <Form.Control\r\n                                      type='text'\r\n                                      placeholder='Phone Number'\r\n                                      value={contactPhone}\r\n                                      onChange={(e) =>\r\n                                        setContactPhone(e.target.value)\r\n                                      }\r\n                                    ></Form.Control>\r\n                                  </Form.Group>\r\n\r\n                                  {editEventContact ? (\r\n                                    <Button\r\n                                      type='submit'\r\n                                      variant='info'\r\n                                      block\r\n                                      // onClick={() =>\r\n                                      //   updateAnnouncementHandler(\r\n                                      //     announcement.announcementId\r\n                                      //   )\r\n                                      // }\r\n                                    >\r\n                                      <i className='fas fa-plus' /> Update\r\n                                    </Button>\r\n                                  ) : (\r\n                                    <Button type='submit' variant='info' block>\r\n                                      <i className='fas fa-plus' /> Add\r\n                                    </Button>\r\n                                  )}\r\n                                </Form>\r\n                              ))\r\n                            : null}\r\n                        </Card.Body>\r\n                      </>\r\n                    )}\r\n\r\n                  <Card.Header className='text-info text-center'>\r\n                    Contacts:\r\n                  </Card.Header>\r\n\r\n                  {eventContactsLoading ? (\r\n                    <Loader />\r\n                  ) : eventContactsError ? (\r\n                    <Message variant='danger'>{eventContactsError}</Message>\r\n                  ) : (\r\n                    <>\r\n                      <ListGroup variant='flush'>\r\n                        {eventContacts && eventContacts.length !== 0\r\n                          ? eventContacts.map((eventContact, index) => (\r\n                              <>\r\n                                <ListGroup.Item key={index}>\r\n                                  <Row>\r\n                                    <Col md={4}>Position :</Col>\r\n                                    <Col>{eventContact.positionName}</Col>\r\n                                  </Row>\r\n\r\n                                  <Row>\r\n                                    <Col md={4}>Name :</Col>\r\n                                    <Col>{eventContact.contactName}</Col>\r\n                                  </Row>\r\n\r\n                                  <Row>\r\n                                    <Col md={4}>Email :</Col>\r\n                                    <Col>{eventContact.contactEmail}</Col>\r\n                                  </Row>\r\n\r\n                                  <Row>\r\n                                    <Col md={4}>Phone :</Col>\r\n                                    <Col>\r\n                                      <a\r\n                                        href={`tel: ${eventContact.contactPhone}`}\r\n                                      >\r\n                                        {eventContact.contactPhone}\r\n                                      </a>\r\n                                    </Col>\r\n                                  </Row>\r\n\r\n                                  {userInfo &&\r\n                                    (userInfo.userRole === 'systemAdmin' ||\r\n                                      userInfo.userRole === 'admin') && (\r\n                                      <div className='text-center'>\r\n                                        <span\r\n                                          onClick={() =>\r\n                                            editEventContactHandler(\r\n                                              eventContact.eventContactId\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <i className='far fa-edit action mr-2'></i>\r\n                                        </span>\r\n\r\n                                        <span\r\n                                          onClick={() =>\r\n                                            deleteEventContactHandler(\r\n                                              eventContact.eventContactId\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <i className='fas fa-trash action'></i>\r\n                                        </span>\r\n                                      </div>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                              </>\r\n                            ))\r\n                          : null}{' '}\r\n                      </ListGroup>\r\n                    </>\r\n                  )}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={8}>\r\n                <Row>\r\n                  {userInfo &&\r\n                  (userInfo.userRole === 'systemAdmin' ||\r\n                    userInfo.userRole === 'admin') ? (\r\n                    <>\r\n                      <Col className='m-0 p-1'>\r\n                        {/* <Card.Footer className='text-muted'> */}\r\n                        {editEvent ? (\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={updateEventHandler}\r\n                          >\r\n                            Update\r\n                          </Link>\r\n                        ) : (\r\n                          <Link\r\n                            className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                            onClick={editEventHandler}\r\n                          >\r\n                            Edit\r\n                          </Link>\r\n                        )}\r\n\r\n                        {/* </Card.Footer> */}\r\n                      </Col>\r\n                      <Col className='m-0 p-1'>\r\n                        {/* <Card.Footer className='text-muted'> */}\r\n                        {editEvent ? (\r\n                          <Link\r\n                            className='btn btn-outline-danger btn-sm btn-block  rounded'\r\n                            onClick={editEventHandler}\r\n                          >\r\n                            Cancel\r\n                          </Link>\r\n                        ) : !event.eventStatus ? (\r\n                          <Link\r\n                            className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                            onClick={publishEventHandler}\r\n                          >\r\n                            Publish\r\n                          </Link>\r\n                        ) : (\r\n                          <Link\r\n                            className='btn btn-outline-warning btn-sm btn-block rounded'\r\n                            onClick={unpublishEventHandler}\r\n                          >\r\n                            Un-Publish\r\n                          </Link>\r\n                        )}\r\n\r\n                        {/* </Card.Footer> */}\r\n                      </Col>\r\n                    </>\r\n                  ) : event && event.eventStatus ? (\r\n                    <Col className='m-0 p-1'>\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block  rounded'\r\n                        to={`/event/register/${event.eventId}`}\r\n                      >\r\n                        Register\r\n                      </Link>\r\n                    </Col>\r\n                  ) : null}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )\r\n      ) : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventByIdScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventRegistrationScreen.js",["792","793","794","795","796","797"],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EmailScreen\\EmailScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\emailReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\emailConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\emailActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\categoryReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\blogReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\categoryConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\blogConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\commentReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\replyReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\replyConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\commentConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreen.js",["798"],"import React, { useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\n\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { allblogs } from '../../actions/blogAction';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport { BLOG_BY_ID_RESET } from '../../constants/blogConstants';\r\nimport SearchBox from '../../components/SearchBox/SearchBox';\r\n\r\nconst BlogScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const blogAll = useSelector((state) => state.blogAll);\r\n  const { loading, error, blogs } = blogAll;\r\n\r\n  const checkChapter = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(allblogs(checkChapter));\r\n      dispatch({ type: BLOG_BY_ID_RESET });\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  const newBlogHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // console.log('Edit clicked');\r\n    history.push(`/blog/new`);\r\n\r\n    // dispatch(approveUser(pendingId));\r\n    // history.push('/systemAdmin');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        <Col md={{ span: 8, order: 1 }} className='m-0 p-1'>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : blogs && blogs.length !== 0 ? (\r\n            <>\r\n              {blogs.map((blog) => (\r\n                <>\r\n                  <Row key={blog.blogId}>\r\n                    <Col md={6}>\r\n                      {/* Preview Image */}\r\n                      <Card.Img variant='top' src={blog.photoId} alt='pic' />\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                      {/* Title */}\r\n                      <h1>{blog.title}</h1>\r\n\r\n                      {/* Author */}\r\n                      <p class='lead'>\r\n                        by <span>{blog.userName}</span>\r\n                      </p>\r\n\r\n                      <hr />\r\n\r\n                      {/* Date/Time */}\r\n                      <p>\r\n                        <span class='glyphicon glyphicon-time'></span> Posted on{' '}\r\n                        {blog.createdAt.substring(0, 10)}\r\n                      </p>\r\n\r\n                      <hr />\r\n\r\n                      {/* Post Content */}\r\n                      <p class='lead'>\r\n                        {parse(blog.body.substring(0, 100))}...\r\n                        <Link to={`/blogs/${blog.blogId}`}>read more</Link>\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                </>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <p>No Blog Available!</p>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={{ span: 4, order: 12 }} className='m-0 p-1'>\r\n          <Card className='mb-2'>\r\n            <Card.Header className='text-center' as='h2'>\r\n              <Link\r\n                className='btn btn-outline-info btn-sm btn-block rounded'\r\n                // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                onClick={newBlogHandler}\r\n              >\r\n                Create new Blog\r\n              </Link>\r\n            </Card.Header>\r\n          </Card>\r\n\r\n          <>\r\n            {/* <!-- Blog Search Well --> */}\r\n            <SearchBox />\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\CreateBlogScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\blogAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\BlogScreen\\BlogScreenById.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\commentAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\replyAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\SearchBox\\SearchBox.js",["799"],"import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // if (keyword.trim()) {\r\n    //   history.push(`/search/${keyword}`);\r\n    // } else {\r\n    //   history.push('/blog');\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Row>\r\n        <Form.Group as={Col} md='10'>\r\n          <Form.Control\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search..'\r\n            // className='mr-sm-2 ml-sm-5'\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group as={Col} md='2'>\r\n          <Button type='submit' variant='outline-info'>\r\n            Search\r\n          </Button>\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\donationTypeReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\donationTypeConstant.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\DonationTypeScreen\\DonationTypeScreen.js",["800","801","802","803","804","805"],"import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {\r\n  deletePaymentType,\r\n  listPaymentTypes,\r\n  registerPaymentType,\r\n} from '../../actions/paymentTypeActions';\r\nimport {\r\n  PAYMENT_TYPE_LIST_RESET,\r\n  PAYMENT_TYPE_REGISTER_RESET,\r\n} from '../../constants/paymentTypeConstants';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport {\r\n  deleteDonationType,\r\n  listDonationTypes,\r\n  registerDonationType,\r\n} from '../../actions/donationTypeAction';\r\nimport {\r\n  DONATION_TYPE_LIST_RESET,\r\n  DONATION_TYPE_REGISTER_RESET,\r\n} from '../../constants/donationTypeConstant';\r\n\r\nconst DonationTypeScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addDonationType, setAddDonationType] = useState(false);\r\n\r\n  const [donationTypeName, setDonationTypeName] = useState('');\r\n  // const [donationTypeAmount, setDonationTypeAmount] = useState('');\r\n  const [donationTypeDescription, setDonationTypeDescription] = useState('');\r\n\r\n  const donationTypeList = useSelector((state) => state.donationTypeList);\r\n  const { loading, error, donationTypes } = donationTypeList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const donationTypeDelete = useSelector((state) => state.donationTypeDelete);\r\n  const { success: successDonationTypeDelete } = donationTypeDelete;\r\n\r\n  const donationTypeRegister = useSelector(\r\n    (state) => state.donationTypeRegister\r\n  );\r\n  const {\r\n    loading: registerLoading,\r\n    error: registerError,\r\n    success,\r\n  } = donationTypeRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listDonationTypes());\r\n      dispatch({ type: DONATION_TYPE_LIST_RESET });\r\n      dispatch({ type: DONATION_TYPE_REGISTER_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success) {\r\n      setAddDonationType((addDonationType) => !addDonationType);\r\n      setDonationTypeName('');\r\n      // setDonationTypeAmount('');\r\n      setDonationTypeDescription('');\r\n    }\r\n  }, [dispatch, history, userInfo, successDonationTypeDelete, success]);\r\n\r\n  const deleteDonationTypeHandler = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteDonationType(id));\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      registerDonationType(\r\n        donationTypeName,\r\n        // donationTypeAmount,\r\n        donationTypeDescription\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-0'\r\n        >\r\n          <>\r\n            <Row>\r\n              <Col\r\n                md={{ span: 6, order: 1 }}\r\n                lg={{ span: 6, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-1'\r\n              >\r\n                <>\r\n                  {/* Card Start */}\r\n                  <Card border='info'>\r\n                    <Card.Header className='text-center' as='h2'>\r\n                      <Link\r\n                        className='btn btn-outline-info btn-sm btn-block rounded'\r\n                        onClick={() => setAddDonationType(!addDonationType)}\r\n                      >\r\n                        Add New Donation Type\r\n                      </Link>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      {addDonationType\r\n                        ? (registerError && (\r\n                            <Message variant='danger'>{registerError}</Message>\r\n                          )) ||\r\n                          (registerLoading && <Loader />) ||\r\n                          (success ? (\r\n                            <Message variant='success'>{success}</Message>\r\n                          ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                              <Form.Group controlId='donationType'>\r\n                                <Form.Label>Donation type</Form.Label>\r\n                                <Form.Control\r\n                                  type='text'\r\n                                  placeholder='Please Enter donation cause..'\r\n                                  value={donationTypeName}\r\n                                  onChange={(e) =>\r\n                                    setDonationTypeName(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              {/* <Form.Group controlId='amount'>\r\n                                <Form.Label>Amount</Form.Label>\r\n                                <Form.Control\r\n                                  type='number'\r\n                                  placeholder='Please Enter an amount for this payment type'\r\n                                  value={paymentTypeAmount}\r\n                                  onChange={(e) =>\r\n                                    setPaymentTypeAmount(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group> */}\r\n\r\n                              <Form.Group controlId='Description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                  type='text'\r\n                                  placeholder='Please Enter Description..'\r\n                                  value={donationTypeDescription}\r\n                                  onChange={(e) =>\r\n                                    setDonationTypeDescription(e.target.value)\r\n                                  }\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            </Form>\r\n                          ))\r\n                        : null}\r\n                    </Card.Body>\r\n                  </Card>\r\n                  {/* Card End */}\r\n                </>\r\n              </Col>\r\n              {/* 1st card section end~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              <Col\r\n                md={{ span: 6, order: 12 }}\r\n                lg={{ span: 6, order: 12 }}\r\n                className='mb-2 p-1'\r\n                id='all-chapter'\r\n              >\r\n                <Card className='text-center' border='info'>\r\n                  <Card.Header as='h5' className='text-info'>\r\n                    All Donation Causes\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                      >\r\n                        <thead>\r\n                          <tr>\r\n                            {/* <th>ID</th> */}\r\n                            {/* <th>IMAGE</th> */}\r\n                            <th>NAME</th>\r\n                            <th>DESCRIPTION</th>\r\n\r\n                            {userInfo &&\r\n                              (userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <th>ACTION</th>\r\n                              )}\r\n                          </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                          {donationTypes.map((donationType) => (\r\n                            <tr key={donationType.donationTypeId}>\r\n                              {/* <td>{donationType.donationTypeId}</td> */}\r\n\r\n                              <td> {donationType.donationTypeName}</td>\r\n\r\n                              <td> {donationType.donationTypeDescription}</td>\r\n\r\n                              {(userInfo.userRole === 'systemAdmin' ||\r\n                                userInfo.userRole === 'admin') && (\r\n                                <td>\r\n                                  {/* <LinkContainer\r\n                                    to={`/donationType/${donationType.donationTypeId}/edit`}\r\n                                  >\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                      <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                  </LinkContainer> */}\r\n\r\n                                  <span\r\n                                    onClick={() =>\r\n                                      deleteDonationTypeHandler(\r\n                                        donationType.donationTypeId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i\r\n                                      className='fas fa-trash action ml-2'\r\n                                      style={{ color: 'red' }}\r\n                                    ></i>\r\n                                  </span>\r\n                                </td>\r\n                              )}\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              {/* 5th card section : All Chapter List End~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */}\r\n\r\n              {/* </CardColumns> */}\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DonationTypeScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\donationTypeAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\RegistrationScreen\\RegistrationScreen_New.js",["806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838"],"import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../components/MyTexyInput';\r\nimport MySelect from '../../components/MySelect';\r\nimport MyCheckbox from '../../components/MyCheckbox';\r\nimport {\r\n  Button,\r\n  Col,\r\n  FormFile,\r\n  FormGroup,\r\n  FormLabel,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport Loader from '../../components/Loader';\r\nimport axios from 'axios';\r\n\r\n// And now we can use these\r\nconst RegisterScreen_New = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [mInit, setMInit] = useState('Mr');\r\n  const [lastName, setLastName] = useState('');\r\n  const [address1, setAddress1] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [zipcode, setZipcode] = useState('');\r\n  const [primaryPhone, setPrimaryPhone] = useState('');\r\n  const [degree, setDegree] = useState('');\r\n  const [degreeYear, setDegreeYear] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [collegeName, setCollegeName] = useState('');\r\n  const [certificate, setCertificate] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const phoneRegExp =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config);\r\n      setCertificate(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('firstName:' + firstName);\r\n    // alert(JSON.stringify(values, null, 2));\r\n    // Dispatch Register\r\n    // dispatch(\r\n    //   register(\r\n    //     email,\r\n    //     password,\r\n    //     firstName,\r\n    //     mInit,\r\n    //     lastName,\r\n    //     address1,\r\n    //     city,\r\n    //     state,\r\n    //     zipcode,\r\n    //     primaryPhone,\r\n    //     degree,\r\n    //     degreeYear,\r\n    //     major,\r\n    //     collegeName,\r\n    //     certificate,\r\n    //     checkChapter\r\n    //   )\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Subscribe!</h1>\r\n      <Formik\r\n        initialValues={{\r\n          mInit: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          address1: '',\r\n          state: '',\r\n          city: '',\r\n          zipcode: '',\r\n          primaryPhone: '',\r\n          degree: '',\r\n          degreeYear: '',\r\n          major: '',\r\n          collegeName: '',\r\n          certificate: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n          acceptedTerms: false, // added for our checkbox\r\n          // jobType: '', // added for our select\r\n        }}\r\n        validationSchema={Yup.object({\r\n          mInit: Yup.string()\r\n            .oneOf(['Mr', 'Mrs', 'Ms'], 'Invalid Initial Type')\r\n            .required('Required'),\r\n          firstName: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n          lastName: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n          address1: Yup.string()\r\n            .max(50, 'Must be 50 characters or less')\r\n            .required('Required'),\r\n\r\n          state: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .required('Required'),\r\n          city: Yup.string()\r\n            .max(30, 'Must be 30 characters or less')\r\n            .required('Required'),\r\n          zipcode: Yup.string()\r\n            .max(15, 'Must be 15 characters or less')\r\n            .required('Required'),\r\n          primaryPhone: Yup.string()\r\n            .max(20, 'Must be 20 characters or less')\r\n            .matches(phoneRegExp, 'Phone number is not valid')\r\n            .required('Required'),\r\n          degree: Yup.string()\r\n            .max(50, 'Must be 50 characters or less')\r\n            .required('Required'),\r\n          degreeYear: Yup.number()\r\n            .test(\r\n              'len',\r\n              'Must be exactly 4 characters',\r\n              (val) => val && val.toString().length === 4\r\n            )\r\n            .max(new Date().getFullYear())\r\n            .required('Required'),\r\n          major: Yup.string()\r\n            .max(30, 'Must be 30 characters or less')\r\n            .required('Required'),\r\n          collegeName: Yup.string()\r\n            .max(50, 'Must be 50 characters or less')\r\n            .required('Required'),\r\n          certificates: Yup.string().required('Required'),\r\n\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .min(8, 'Password is too short - should be 8 chars minimum.')\r\n            .required('Password is required'),\r\n          confirmPassword: Yup.string().oneOf(\r\n            [Yup.ref('password'), null],\r\n            'Passwords must match'\r\n          ),\r\n          acceptedTerms: Yup.boolean()\r\n            .required('Required')\r\n            .oneOf([true], 'You must accept the terms and conditions.'),\r\n          // jobType: Yup.string()\r\n          //   .oneOf(\r\n          //     ['designer', 'development', 'product', 'other'],\r\n          //     'Invalid Job Type'\r\n          //   )\r\n          //   .required('Required'),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          // await new Promise((r) => setTimeout(r, 500));\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }}\r\n        // onSubmit={submitHandler}\r\n      >\r\n        <Form>\r\n          <Row>\r\n            <FormGroup as={Col} md='2'>\r\n              <FormLabel>Name</FormLabel>\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='2'>\r\n              <MySelect name='mInit' className='form-control'>\r\n                <option value=''>Select</option>\r\n                <option value='Mr'>Mr</option>\r\n                <option value='Mrs'>Mrs</option>\r\n                <option value='Ms'>Ms</option>\r\n              </MySelect>\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='4'>\r\n              <MyTextInput\r\n                name='firstName'\r\n                type='text'\r\n                placeholder='First Name'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='4'>\r\n              <MyTextInput\r\n                name='lastName'\r\n                type='text'\r\n                placeholder='Last Name'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='2'>\r\n              <FormLabel>Address</FormLabel>\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='10' controlId='address1'>\r\n              <MyTextInput\r\n                name='address1'\r\n                type='text'\r\n                placeholder='1234 Main St...'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md={{ span: 10, offset: 2 }} controlId='state'>\r\n              <MyTextInput\r\n                name='state'\r\n                type='text'\r\n                placeholder='Enter State..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md={{ span: 10, offset: 2 }} controlId='city'>\r\n              <MyTextInput\r\n                name='city'\r\n                type='text'\r\n                placeholder='Enter City..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup\r\n              as={Col}\r\n              md={{ span: 10, offset: 2 }}\r\n              controlId='zipcode'\r\n            >\r\n              <MyTextInput\r\n                name='zipcode'\r\n                type='text'\r\n                placeholder='Enter Zipcode..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='2'>\r\n              <FormLabel>Phone Number</FormLabel>\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='10' controlId='primaryPhone'>\r\n              <MyTextInput\r\n                name='primaryPhone'\r\n                type='text'\r\n                placeholder='Enter Your Phone Number..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='2'>\r\n              <FormLabel>Education</FormLabel>\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='5' controlId='degree'>\r\n              <MyTextInput\r\n                name='degree'\r\n                type='text'\r\n                placeholder='Enter Your Last Degree Received..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='5' controlId='degreeYear'>\r\n              <MyTextInput\r\n                name='degreeYear'\r\n                type='number'\r\n                placeholder='xxxx'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md={{ span: 5, offset: 2 }} controlId='major'>\r\n              <MyTextInput\r\n                name='major'\r\n                type='text'\r\n                placeholder='Enter Your Major..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='5' controlId='collegeName'>\r\n              <MyTextInput\r\n                name='collegeName'\r\n                type='text'\r\n                placeholder='Enter Your University/College Name..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='2'>\r\n              <FormLabel>Certificate</FormLabel>\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='10' controlId='certificate'>\r\n              <FormFile\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></FormFile>\r\n              {uploading && <Loader />}\r\n              <MyTextInput\r\n                name='certificate'\r\n                type='text'\r\n                className='form-control'\r\n                value={certificate}\r\n                onChange={(e) => setCertificate(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md='2'>\r\n              <FormLabel>Email Address</FormLabel>\r\n            </FormGroup>\r\n            <FormGroup as={Col} md='10' controlId='email'>\r\n              <MyTextInput\r\n                name='email'\r\n                type='email'\r\n                placeholder='Enter email..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup\r\n              as={Col}\r\n              md={{ span: 5, offset: 2 }}\r\n              controlId='password'\r\n            >\r\n              <MyTextInput\r\n                name='password'\r\n                type='password'\r\n                placeholder='Enter password..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup as={Col} md={{ span: 5 }} controlId='confirmPassword'>\r\n              <MyTextInput\r\n                name='confirmPassword'\r\n                type='password'\r\n                placeholder='Confirm password..'\r\n                className='form-control'\r\n              />\r\n            </FormGroup>\r\n\r\n            {/* <MyCheckbox name='acceptedTerms'>\r\n              I accept the terms and conditions\r\n            </MyCheckbox> */}\r\n          </Row>\r\n\r\n          <FormGroup as={Row}>\r\n            <Col md={{ span: 10, offset: 2 }}>\r\n              <Button type='submit' variant='info' block>\r\n                Register\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n\r\n          {/* <button type='submit'>Submit</button> */}\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen_New;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImageByEventScreen\\ImageByEventScreen.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\HelpContactScreen\\HelpContactScreen.js",["839","840","841","842"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport parse from 'html-react-parser';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\nimport {\r\n  allHelps,\r\n  newHelp,\r\n  getHelpById,\r\n  updateHelpById,\r\n  deleteHelp,\r\n} from '../../actions/helpActions';\r\nimport {\r\n  HELP_CONTACT_BY_ID_RESET,\r\n  HELP_CONTACT_NEW_RESET,\r\n  HELP_CONTACT_UPDATE_BY_ID_RESET,\r\n} from '../../constants/helpContactConstants';\r\n\r\nconst HelpContactScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addHelp, setAddHelp] = useState(false);\r\n  const [editHelp, setEditHelp] = useState(false);\r\n  const [memberId, setMemberId] = useState('');\r\n  const [helpFor, setHelpFor] = useState('');\r\n  const [contactEmail, setContactEmail] = useState('');\r\n  const [contactPhone, setContactPhone] = useState('');\r\n  const [profilePicture, setProfilePicture] = useState('');\r\n  const [isTrue, setIsTrue] = useState(true);\r\n  const [id, setId] = useState('');\r\n\r\n  const helpContactsRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const helpAll = useSelector((state) => state.helpAll);\r\n  const { loading, error, helpContacts } = helpAll;\r\n\r\n  helpContactsRef.current = helpContacts;\r\n\r\n  const helpNew = useSelector((state) => state.helpNew);\r\n  const { loading: helpNewLoading, error: helpNewError, success } = helpNew;\r\n\r\n  const helpById = useSelector((state) => state.helpById);\r\n  const { success: helpByIdSuccess, help } = helpById;\r\n\r\n  const helpUpdate = useSelector((state) => state.helpUpdate);\r\n  const { success: helpUpdateSuccess } = helpUpdate;\r\n\r\n  const helpDelete = useSelector((state) => state.helpDelete);\r\n  const { success: successDelete } = helpDelete;\r\n\r\n  const checkChapter = window.location.host.split('.')[0];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      // setId(userInfo.memberId);\r\n      dispatch(allHelps(checkChapter));\r\n      dispatch({ type: HELP_CONTACT_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || helpUpdateSuccess) {\r\n      setAddHelp(false);\r\n      setEditHelp(false);\r\n\r\n      setMemberId('');\r\n      setHelpFor('');\r\n      setContactEmail('');\r\n      setContactPhone('');\r\n      setIsTrue(false);\r\n      setId('');\r\n      dispatch({ type: HELP_CONTACT_BY_ID_RESET });\r\n    }\r\n    if (helpByIdSuccess) {\r\n      setAddHelp(true);\r\n      setEditHelp(true);\r\n\r\n      setMemberId(help.memberId);\r\n      setHelpFor(help.helpFor);\r\n      setContactEmail(help.contactEmail);\r\n      setContactPhone(help.contactPhone);\r\n      setIsTrue(help.isTrue);\r\n      setId(help.helpConatctId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    helpByIdSuccess,\r\n    help,\r\n    helpUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editHelpHandler = (rowIndex) => {\r\n    const id = helpContactsRef.current[rowIndex].helpContactId;\r\n    dispatch({ type: HELP_CONTACT_UPDATE_BY_ID_RESET });\r\n    // console.log(rowIndex);\r\n    // console.log(id);\r\n    dispatch(getHelpById(id));\r\n  };\r\n\r\n  const deleteHelpHandler = (rowIndex) => {\r\n    const id = helpContactsRef.current[rowIndex].helpContactId;\r\n\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteHelp(id));\r\n    }\r\n  };\r\n\r\n  const addNewHelp = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddHelp(!addHelp);\r\n    setMemberId('');\r\n    setHelpFor('');\r\n    setContactEmail('');\r\n    setContactPhone('');\r\n    setIsTrue(false);\r\n    setEditHelp(false);\r\n    dispatch({ type: HELP_CONTACT_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editHelp) {\r\n      dispatch(\r\n        updateHelpById(\r\n          memberId,\r\n          helpFor,\r\n          contactEmail,\r\n          contactPhone,\r\n          profilePicture,\r\n          isTrue,\r\n          id\r\n        )\r\n      );\r\n    } else {\r\n      // setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(newHelp(memberId, helpFor, contactEmail, contactPhone, isTrue));\r\n    }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'Member Id',\r\n      accessor: 'memberId',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'For',\r\n      accessor: 'helpFor',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return parse(value);\r\n      },\r\n    },\r\n    {\r\n      Header: 'Email',\r\n      accessor: 'contactEmail',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'Phone',\r\n      accessor: 'contactPhone',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'Available',\r\n      accessor: 'isTrue',\r\n      Filter: ColumnFilter,\r\n    },\r\n\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <div>\r\n            <span onClick={() => editHelpHandler(rowIdx)}>\r\n              <i className='far fa-edit action mr-2'></i>\r\n            </span>\r\n\r\n            <span onClick={() => deleteHelpHandler(rowIdx)}>\r\n              <i className='fas fa-trash action'></i>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      onClick={addNewHelp}\r\n                    >\r\n                      New contact for help\r\n                    </Link>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {addHelp\r\n                      ? (helpNewError && (\r\n                          <Message variant='danger'>{helpNewError}</Message>\r\n                        )) ||\r\n                        (helpNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='memberId'>\r\n                              <Form.Label>Member Id</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please enter member id..'\r\n                                value={memberId}\r\n                                onChange={(e) => setMemberId(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='helpFor'>\r\n                              <Form.Label>For</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                // placeholder='Pl'\r\n                                value={helpFor}\r\n                                onChange={(e) => setHelpFor(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='helpFor'>\r\n                              <Form.Label>For</Form.Label>\r\n                              <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={helpFor}\r\n                                onChange={(e, editor) => {\r\n                                  const data = editor.getData();\r\n                                  setHelpFor(data);\r\n                                }}\r\n                              />\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='contactEmail'>\r\n                              <Form.Label>Email</Form.Label>\r\n                              <Form.Control\r\n                                type='email'\r\n                                placeholder='Please enter email address..'\r\n                                value={contactEmail}\r\n                                onChange={(e) =>\r\n                                  setContactEmail(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='contactPhone'>\r\n                              <Form.Label>Phone</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please enter phone number..'\r\n                                value={contactPhone}\r\n                                onChange={(e) =>\r\n                                  setContactPhone(e.target.value)\r\n                                }\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='memberId'>\r\n                              <Form.Label>Member Id</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please enter member id..'\r\n                                value={memberId}\r\n                                onChange={(e) => setMemberId(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group> */}\r\n\r\n                            {editHelp ? (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    All contacts for help\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={helpContacts} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpContactScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\QuickLinkScreen\\QuickLinkScreen.js",["843"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport ColumnFilter from '../../components/Table/ColumnFilter';\r\nimport RTable from '../../components/Table/RTable';\r\nimport {\r\n  newLink,\r\n  deleteLink,\r\n  getLinkById,\r\n  updateLinkById,\r\n  allLinks,\r\n} from '../../actions/linkActions';\r\nimport {\r\n  QUICK_LINK_BY_ID_RESET,\r\n  QUICK_LINK_NEW_RESET,\r\n  QUICK_LINK_UPDATE_BY_ID_RESET,\r\n} from '../../constants/quickLinkConstants';\r\n\r\nconst QuickLinkScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [addLink, setAddLink] = useState(false);\r\n  const [editLink, setEditLink] = useState(false);\r\n  const [linkTitle, setLinkTitle] = useState('');\r\n  const [linkAddress, setLinkAddress] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const linksRef = useRef();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const linkAll = useSelector((state) => state.linkAll);\r\n  const { loading, error, links } = linkAll;\r\n\r\n  linksRef.current = links;\r\n\r\n  const linkNew = useSelector((state) => state.linkNew);\r\n  const { loading: linkNewLoading, error: linkNewError, success } = linkNew;\r\n\r\n  const linkById = useSelector((state) => state.linkById);\r\n  const { success: linkByIdSuccess, link } = linkById;\r\n\r\n  const linkUpdate = useSelector((state) => state.linkUpdate);\r\n  const { success: linkUpdateSuccess } = linkUpdate;\r\n\r\n  const linkDelete = useSelector((state) => state.linkDelete);\r\n  const { success: successDelete } = linkDelete;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userInfo &&\r\n      (userInfo.userRole === 'systemAdmin' || userInfo.userRole === 'admin')\r\n    ) {\r\n      // setId(userInfo.memberId);\r\n      dispatch(allLinks(checkChapter));\r\n      dispatch({ type: QUICK_LINK_NEW_RESET });\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n    if (success || linkUpdateSuccess) {\r\n      setAddLink(false);\r\n      setEditLink(false);\r\n\r\n      setLinkTitle('');\r\n      setLinkAddress('');\r\n      dispatch({ type: QUICK_LINK_BY_ID_RESET });\r\n    }\r\n    if (linkByIdSuccess) {\r\n      setAddLink(true);\r\n      setEditLink(true);\r\n      setLinkTitle(link.title);\r\n      setLinkAddress(link.link);\r\n      setId(link.linkId);\r\n\r\n      // setId(announcement.announcementId);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    success,\r\n    linkByIdSuccess,\r\n    link,\r\n    linkUpdateSuccess,\r\n    successDelete,\r\n  ]);\r\n\r\n  const editLinkHandler = (rowIndex) => {\r\n    const id = linksRef.current[rowIndex].linkId;\r\n    dispatch({ type: QUICK_LINK_UPDATE_BY_ID_RESET });\r\n    // console.log(rowIndex);\r\n    // console.log(id);\r\n    dispatch(getLinkById(id));\r\n  };\r\n\r\n  const deleteLinkHandler = (rowIndex) => {\r\n    const id = linksRef.current[rowIndex].linkId;\r\n\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteLink(id));\r\n    }\r\n  };\r\n\r\n  const addNewLink = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddLink(!addLink);\r\n    setLinkTitle('');\r\n    setLinkAddress('');\r\n    setEditLink(false);\r\n    dispatch({ type: QUICK_LINK_BY_ID_RESET });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (editLink) {\r\n      dispatch(updateLinkById(id, linkTitle, linkAddress));\r\n    } else {\r\n      setId(userInfo.memberId);\r\n      // console.log(id);\r\n      dispatch(newLink(linkTitle, linkAddress));\r\n    }\r\n  };\r\n\r\n  const columnsAdmin = [\r\n    {\r\n      Header: 'Title',\r\n      accessor: 'linkTitle',\r\n      Filter: ColumnFilter,\r\n    },\r\n    // {\r\n    //   Header: 'Name',\r\n    //   accessor: 'userName',\r\n    // },\r\n    {\r\n      Header: 'Link Address',\r\n      accessor: 'link',\r\n      Filter: ColumnFilter,\r\n    },\r\n    {\r\n      Header: 'Created At',\r\n      accessor: 'createdAt',\r\n      Filter: ColumnFilter,\r\n      Cell: ({ value }) => {\r\n        return format(new Date(value), 'dd/mm/yyyy');\r\n      },\r\n    },\r\n\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      Cell: (props) => {\r\n        const rowIdx = props.row.id;\r\n        return (\r\n          <div>\r\n            <span onClick={() => editLinkHandler(rowIdx)}>\r\n              <i className='far fa-edit action mr-2'></i>\r\n            </span>\r\n\r\n            <span onClick={() => deleteLinkHandler(rowIdx)}>\r\n              <i className='fas fa-trash action'></i>\r\n            </span>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row className='content'>\r\n        {/* Sidebar */}\r\n        <Col\r\n          md={{ span: 3, order: 1 }}\r\n          lg={{ span: 3, order: 1 }}\r\n          id='sidebar-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <Sidebar />\r\n        </Col>\r\n        {/* Sidebar End */}\r\n        <Col\r\n          md={{ span: 9, order: 12 }}\r\n          lg={{ span: 9, order: 12 }}\r\n          id='page-content-wrapper'\r\n          className='m-0 p-1'\r\n        >\r\n          <>\r\n            {/* <CardColumns> */}\r\n\r\n            <Row>\r\n              <Col\r\n                md={{ span: 12, order: 1 }}\r\n                lg={{ span: 12, order: 1 }}\r\n                // style={{ padding: 0 }}\r\n                className='mb-2 p-0'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header className='text-center' as='h2'>\r\n                    <Link\r\n                      className='btn btn-outline-info btn-sm btn-block rounded'\r\n                      // onClick={() => setAddAnnouncement(!addAnnouncement)}\r\n                      onClick={addNewLink}\r\n                    >\r\n                      New Link\r\n                    </Link>\r\n                  </Card.Header>\r\n\r\n                  <Card.Body>\r\n                    {addLink\r\n                      ? (linkNewError && (\r\n                          <Message variant='danger'>{linkNewError}</Message>\r\n                        )) ||\r\n                        (linkNewLoading && <Loader />) ||\r\n                        (success ? (\r\n                          <Message variant='success'>{success}</Message>\r\n                        ) : (\r\n                          <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='linkTitle'>\r\n                              <Form.Label>Title</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please Enter A Title..'\r\n                                value={linkTitle}\r\n                                onChange={(e) => setLinkTitle(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='linkAddress'>\r\n                              <Form.Label>Address</Form.Label>\r\n                              <Form.Control\r\n                                type='text'\r\n                                placeholder='Please enter an address..'\r\n                                value={linkAddress}\r\n                                onChange={(e) => setLinkAddress(e.target.value)}\r\n                              ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {editLink ? (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Update\r\n                              </Button>\r\n                            ) : (\r\n                              <Button type='submit' variant='info' block>\r\n                                <i className='fas fa-plus' /> Add\r\n                              </Button>\r\n                            )}\r\n                          </Form>\r\n                        ))\r\n                      : null}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col\r\n                md={{ span: 12, order: 12 }}\r\n                lg={{ span: 12, order: 12 }}\r\n                className='mb-2 p-0'\r\n                id='all-chapter'\r\n              >\r\n                <Card border='info'>\r\n                  <Card.Header as='h5' className='text-center text-info'>\r\n                    Links\r\n                  </Card.Header>\r\n\r\n                  <>\r\n                    {loading ? (\r\n                      <Loader />\r\n                    ) : error ? (\r\n                      <Message variant='danger'>{error}</Message>\r\n                    ) : (\r\n                      <>\r\n                        <RTable users={links} COLUMNS={columnsAdmin} />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuickLinkScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\helpContactReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\quickLinkReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\helpContactConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\quickLinkConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\helpActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\linkActions.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\MyTexyInput.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\MySelect.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\components\\MyCheckbox.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\ImagesScreen\\ImageByIdScreen.js",["844","845","846"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Carousel, Col, Image, ListGroup, Row } from 'react-bootstrap';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport {\r\n  getHomeScreenImage,\r\n  getImageByEvent,\r\n  getImageById,\r\n} from '../../actions/imageActions';\r\n\r\nconst ImageByIdScreen = ({ match, history }) => {\r\n  const id = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const imageById = useSelector((state) => state.imageById);\r\n  const { loading, error, image } = imageById;\r\n\r\n  const imageByEvent = useSelector((state) => state.imageByEvent);\r\n  const {\r\n    loading: imageByEventLoading,\r\n    error: imageByEventError,\r\n    images: imageByEventImages,\r\n  } = imageByEvent;\r\n\r\n  const checkChapter = window.location.host;\r\n\r\n  useEffect(() => {\r\n    dispatch(getImageById(id));\r\n    dispatch(getImageByEvent(checkChapter));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <>\r\n      <Card className='text-center mb-2' border='info'>\r\n        <Card.Body>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <>\r\n              {image && (\r\n                <>\r\n                  <Card.Header as='h3' className='text-info'>\r\n                    {image.imageDescription}\r\n                  </Card.Header>\r\n                  <Image\r\n                    src={image.image}\r\n                    alt={image.image}\r\n                    fluid\r\n                    rounded\r\n                    style={{ height: '80vh', width: '80%' }}\r\n                  />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {/* Event Images */}\r\n      <Card className='text-center mb-2' border='info'>\r\n        <Card.Header as='h3' className='text-info'>\r\n          Event Images\r\n        </Card.Header>\r\n\r\n        <Card.Body>\r\n          {imageByEventLoading ? (\r\n            <Loader />\r\n          ) : imageByEventError ? (\r\n            <Message variant='danger'>{imageByEventError}</Message>\r\n          ) : (\r\n            imageByEventImages && (\r\n              <ListGroup variant='flush'>\r\n                {imageByEventImages.map((event, index) => (\r\n                  <ListGroup.Item key={index} className='mb-2'>\r\n                    <Card.Title className='text-info'>\r\n                      {event.eventName}\r\n                    </Card.Title>\r\n                    <Row className='justify-content-center'>\r\n                      {event.eventImageGalleries &&\r\n                      event.eventImageGalleries.length !== 0 ? (\r\n                        event.eventImageGalleries.map((evetImage, index) => (\r\n                          <Col md={3} key={index} className='m-1 p-0'>\r\n                            <Link to={`/image/${evetImage.imageId}`}>\r\n                              <Image\r\n                                src={evetImage.image}\r\n                                alt={evetImage.imageName}\r\n                                fluid\r\n                                rounded\r\n                                style={{\r\n                                  height: '100%',\r\n                                  width: '100%',\r\n                                }}\r\n                              />\r\n                            </Link>{' '}\r\n                          </Col>\r\n                        ))\r\n                      ) : (\r\n                        <h5>No Image</h5>\r\n                      )}\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageByIdScreen;\r\n","F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\actions\\cartAction.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\constants\\cartConstants.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\aabea\\project\\aabea_v4_CJS\\aabea\\frontend\\src\\screens\\EventScreen\\EventRegistrationPayment.js",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866"],{"ruleId":"867","replacedBy":"868"},{"ruleId":"869","replacedBy":"870"},{"ruleId":"871","severity":1,"message":"872","line":9,"column":8,"nodeType":"873","messageId":"874","endLine":9,"endColumn":23},{"ruleId":"871","severity":1,"message":"875","line":6,"column":3,"nodeType":"873","messageId":"874","endLine":6,"endColumn":16},{"ruleId":"871","severity":1,"message":"876","line":7,"column":3,"nodeType":"873","messageId":"874","endLine":7,"endColumn":12},{"ruleId":"871","severity":1,"message":"877","line":8,"column":3,"nodeType":"873","messageId":"874","endLine":8,"endColumn":9},{"ruleId":"871","severity":1,"message":"878","line":11,"column":3,"nodeType":"873","messageId":"874","endLine":11,"endColumn":8},{"ruleId":"879","severity":1,"message":"880","line":38,"column":37,"nodeType":"881","messageId":"882","endLine":38,"endColumn":39},{"ruleId":"867","replacedBy":"883"},{"ruleId":"869","replacedBy":"884"},{"ruleId":"871","severity":1,"message":"885","line":297,"column":7,"nodeType":"873","messageId":"874","endLine":297,"endColumn":27},{"ruleId":"886","severity":1,"message":"887","line":90,"column":6,"nodeType":"888","endLine":100,"endColumn":4,"suggestions":"889"},{"ruleId":"886","severity":1,"message":"887","line":72,"column":6,"nodeType":"888","endLine":72,"endColumn":16,"suggestions":"890"},{"ruleId":"891","severity":1,"message":"892","line":147,"column":25,"nodeType":"893","endLine":153,"endColumn":27},{"ruleId":"867","replacedBy":"894"},{"ruleId":"869","replacedBy":"895"},{"ruleId":"871","severity":1,"message":"896","line":4,"column":3,"nodeType":"873","messageId":"874","endLine":4,"endColumn":9},{"ruleId":"871","severity":1,"message":"878","line":10,"column":3,"nodeType":"873","messageId":"874","endLine":10,"endColumn":8},{"ruleId":"871","severity":1,"message":"897","line":11,"column":3,"nodeType":"873","messageId":"874","endLine":11,"endColumn":14},{"ruleId":"871","severity":1,"message":"898","line":28,"column":10,"nodeType":"873","messageId":"874","endLine":28,"endColumn":22},{"ruleId":"886","severity":1,"message":"887","line":101,"column":6,"nodeType":"888","endLine":101,"endColumn":57,"suggestions":"899"},{"ruleId":"886","severity":1,"message":"887","line":113,"column":6,"nodeType":"888","endLine":113,"endColumn":63,"suggestions":"900"},{"ruleId":"886","severity":1,"message":"887","line":113,"column":6,"nodeType":"888","endLine":124,"endColumn":4,"suggestions":"901"},{"ruleId":"867","replacedBy":"902"},{"ruleId":"869","replacedBy":"903"},{"ruleId":"867","replacedBy":"904"},{"ruleId":"869","replacedBy":"905"},{"ruleId":"886","severity":1,"message":"887","line":34,"column":6,"nodeType":"888","endLine":34,"endColumn":16,"suggestions":"906"},{"ruleId":"871","severity":1,"message":"907","line":1,"column":8,"nodeType":"873","messageId":"874","endLine":1,"endColumn":13},{"ruleId":"871","severity":1,"message":"908","line":48,"column":14,"nodeType":"873","messageId":"874","endLine":48,"endColumn":36},{"ruleId":"871","severity":1,"message":"878","line":6,"column":3,"nodeType":"873","messageId":"874","endLine":6,"endColumn":8},{"ruleId":"871","severity":1,"message":"909","line":10,"column":3,"nodeType":"873","messageId":"874","endLine":10,"endColumn":14},{"ruleId":"871","severity":1,"message":"910","line":11,"column":3,"nodeType":"873","messageId":"874","endLine":11,"endColumn":6},{"ruleId":"871","severity":1,"message":"911","line":14,"column":10,"nodeType":"873","messageId":"874","endLine":14,"endColumn":14},{"ruleId":"871","severity":1,"message":"912","line":19,"column":3,"nodeType":"873","messageId":"874","endLine":19,"endColumn":12},{"ruleId":"871","severity":1,"message":"913","line":20,"column":3,"nodeType":"873","messageId":"874","endLine":20,"endColumn":13},{"ruleId":"871","severity":1,"message":"914","line":21,"column":3,"nodeType":"873","messageId":"874","endLine":21,"endColumn":19},{"ruleId":"871","severity":1,"message":"915","line":22,"column":3,"nodeType":"873","messageId":"874","endLine":22,"endColumn":20},{"ruleId":"871","severity":1,"message":"916","line":23,"column":3,"nodeType":"873","messageId":"874","endLine":23,"endColumn":18},{"ruleId":"871","severity":1,"message":"917","line":24,"column":3,"nodeType":"873","messageId":"874","endLine":24,"endColumn":18},{"ruleId":"871","severity":1,"message":"918","line":27,"column":10,"nodeType":"873","messageId":"874","endLine":27,"endColumn":23},{"ruleId":"871","severity":1,"message":"919","line":27,"column":25,"nodeType":"873","messageId":"874","endLine":27,"endColumn":37},{"ruleId":"871","severity":1,"message":"920","line":34,"column":8,"nodeType":"873","messageId":"874","endLine":34,"endColumn":21},{"ruleId":"871","severity":1,"message":"921","line":58,"column":14,"nodeType":"873","messageId":"874","endLine":58,"endColumn":29},{"ruleId":"871","severity":1,"message":"922","line":59,"column":12,"nodeType":"873","messageId":"874","endLine":59,"endColumn":25},{"ruleId":"871","severity":1,"message":"923","line":2,"column":10,"nodeType":"873","messageId":"874","endLine":2,"endColumn":23},{"ruleId":"886","severity":1,"message":"887","line":93,"column":6,"nodeType":"888","endLine":102,"endColumn":4,"suggestions":"924"},{"ruleId":"867","replacedBy":"925"},{"ruleId":"869","replacedBy":"926"},{"ruleId":"871","severity":1,"message":"927","line":2,"column":17,"nodeType":"873","messageId":"874","endLine":2,"endColumn":26},{"ruleId":"871","severity":1,"message":"928","line":3,"column":10,"nodeType":"873","messageId":"874","endLine":3,"endColumn":16},{"ruleId":"871","severity":1,"message":"929","line":4,"column":13,"nodeType":"873","messageId":"874","endLine":4,"endColumn":16},{"ruleId":"871","severity":1,"message":"930","line":72,"column":20,"nodeType":"873","messageId":"874","endLine":72,"endColumn":35},{"ruleId":"871","severity":1,"message":"931","line":72,"column":44,"nodeType":"873","messageId":"874","endLine":72,"endColumn":57},{"ruleId":"886","severity":1,"message":"887","line":96,"column":6,"nodeType":"888","endLine":96,"endColumn":59,"suggestions":"932"},{"ruleId":"871","severity":1,"message":"919","line":16,"column":10,"nodeType":"873","messageId":"874","endLine":16,"endColumn":22},{"ruleId":"871","severity":1,"message":"933","line":49,"column":18,"nodeType":"873","messageId":"874","endLine":49,"endColumn":29},{"ruleId":"871","severity":1,"message":"934","line":52,"column":18,"nodeType":"873","messageId":"874","endLine":52,"endColumn":40},{"ruleId":"886","severity":1,"message":"935","line":179,"column":6,"nodeType":"888","endLine":187,"endColumn":4,"suggestions":"936"},{"ruleId":"871","severity":1,"message":"911","line":3,"column":10,"nodeType":"873","messageId":"874","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"887","line":19,"column":6,"nodeType":"888","endLine":19,"endColumn":16,"suggestions":"937"},{"ruleId":"871","severity":1,"message":"938","line":7,"column":10,"nodeType":"873","messageId":"874","endLine":7,"endColumn":18},{"ruleId":"867","replacedBy":"939"},{"ruleId":"869","replacedBy":"940"},{"ruleId":"867","replacedBy":"941"},{"ruleId":"869","replacedBy":"942"},{"ruleId":"886","severity":1,"message":"943","line":15,"column":37,"nodeType":"888","endLine":15,"endColumn":39,"suggestions":"944"},{"ruleId":"886","severity":1,"message":"945","line":16,"column":42,"nodeType":"888","endLine":16,"endColumn":44,"suggestions":"946"},{"ruleId":"867","replacedBy":"947"},{"ruleId":"869","replacedBy":"948"},{"ruleId":"886","severity":1,"message":"887","line":20,"column":6,"nodeType":"888","endLine":20,"endColumn":16,"suggestions":"949"},{"ruleId":"886","severity":1,"message":"887","line":70,"column":6,"nodeType":"888","endLine":79,"endColumn":4,"suggestions":"950"},{"ruleId":"886","severity":1,"message":"887","line":84,"column":6,"nodeType":"888","endLine":92,"endColumn":4,"suggestions":"951"},{"ruleId":"886","severity":1,"message":"952","line":55,"column":6,"nodeType":"888","endLine":55,"endColumn":51,"suggestions":"953"},{"ruleId":"886","severity":1,"message":"954","line":146,"column":6,"nodeType":"888","endLine":159,"endColumn":4,"suggestions":"955"},{"ruleId":"871","severity":1,"message":"956","line":16,"column":10,"nodeType":"873","messageId":"874","endLine":16,"endColumn":22},{"ruleId":"871","severity":1,"message":"957","line":17,"column":10,"nodeType":"873","messageId":"874","endLine":17,"endColumn":23},{"ruleId":"871","severity":1,"message":"958","line":24,"column":10,"nodeType":"873","messageId":"874","endLine":24,"endColumn":18},{"ruleId":"871","severity":1,"message":"959","line":46,"column":20,"nodeType":"873","messageId":"874","endLine":46,"endColumn":29},{"ruleId":"886","severity":1,"message":"887","line":95,"column":6,"nodeType":"888","endLine":103,"endColumn":4,"suggestions":"960"},{"ruleId":"871","severity":1,"message":"961","line":109,"column":9,"nodeType":"873","messageId":"874","endLine":109,"endColumn":30},{"ruleId":"886","severity":1,"message":"887","line":32,"column":6,"nodeType":"888","endLine":32,"endColumn":35,"suggestions":"962"},{"ruleId":"871","severity":1,"message":"963","line":5,"column":10,"nodeType":"873","messageId":"874","endLine":5,"endColumn":17},{"ruleId":"871","severity":1,"message":"923","line":2,"column":10,"nodeType":"873","messageId":"874","endLine":2,"endColumn":23},{"ruleId":"871","severity":1,"message":"964","line":9,"column":3,"nodeType":"873","messageId":"874","endLine":9,"endColumn":20},{"ruleId":"871","severity":1,"message":"965","line":10,"column":3,"nodeType":"873","messageId":"874","endLine":10,"endColumn":19},{"ruleId":"871","severity":1,"message":"966","line":11,"column":3,"nodeType":"873","messageId":"874","endLine":11,"endColumn":22},{"ruleId":"871","severity":1,"message":"967","line":14,"column":3,"nodeType":"873","messageId":"874","endLine":14,"endColumn":26},{"ruleId":"871","severity":1,"message":"968","line":15,"column":3,"nodeType":"873","messageId":"874","endLine":15,"endColumn":30},{"ruleId":"871","severity":1,"message":"969","line":2,"column":8,"nodeType":"873","messageId":"874","endLine":2,"endColumn":16},{"ruleId":"871","severity":1,"message":"970","line":3,"column":24,"nodeType":"873","messageId":"874","endLine":3,"endColumn":32},{"ruleId":"871","severity":1,"message":"971","line":7,"column":8,"nodeType":"873","messageId":"874","endLine":7,"endColumn":18},{"ruleId":"871","severity":1,"message":"972","line":21,"column":21,"nodeType":"873","messageId":"874","endLine":21,"endColumn":33},{"ruleId":"871","severity":1,"message":"973","line":22,"column":10,"nodeType":"873","messageId":"874","endLine":22,"endColumn":15},{"ruleId":"871","severity":1,"message":"974","line":22,"column":17,"nodeType":"873","messageId":"874","endLine":22,"endColumn":25},{"ruleId":"871","severity":1,"message":"975","line":23,"column":10,"nodeType":"873","messageId":"874","endLine":23,"endColumn":18},{"ruleId":"871","severity":1,"message":"976","line":23,"column":20,"nodeType":"873","messageId":"874","endLine":23,"endColumn":31},{"ruleId":"871","severity":1,"message":"977","line":24,"column":10,"nodeType":"873","messageId":"874","endLine":24,"endColumn":18},{"ruleId":"871","severity":1,"message":"978","line":24,"column":20,"nodeType":"873","messageId":"874","endLine":24,"endColumn":31},{"ruleId":"871","severity":1,"message":"979","line":25,"column":10,"nodeType":"873","messageId":"874","endLine":25,"endColumn":14},{"ruleId":"871","severity":1,"message":"980","line":25,"column":16,"nodeType":"873","messageId":"874","endLine":25,"endColumn":23},{"ruleId":"871","severity":1,"message":"981","line":26,"column":10,"nodeType":"873","messageId":"874","endLine":26,"endColumn":15},{"ruleId":"871","severity":1,"message":"982","line":26,"column":17,"nodeType":"873","messageId":"874","endLine":26,"endColumn":25},{"ruleId":"871","severity":1,"message":"983","line":27,"column":10,"nodeType":"873","messageId":"874","endLine":27,"endColumn":17},{"ruleId":"871","severity":1,"message":"984","line":27,"column":19,"nodeType":"873","messageId":"874","endLine":27,"endColumn":29},{"ruleId":"871","severity":1,"message":"985","line":28,"column":10,"nodeType":"873","messageId":"874","endLine":28,"endColumn":22},{"ruleId":"871","severity":1,"message":"986","line":28,"column":24,"nodeType":"873","messageId":"874","endLine":28,"endColumn":39},{"ruleId":"871","severity":1,"message":"987","line":29,"column":10,"nodeType":"873","messageId":"874","endLine":29,"endColumn":16},{"ruleId":"871","severity":1,"message":"988","line":29,"column":18,"nodeType":"873","messageId":"874","endLine":29,"endColumn":27},{"ruleId":"871","severity":1,"message":"989","line":30,"column":10,"nodeType":"873","messageId":"874","endLine":30,"endColumn":20},{"ruleId":"871","severity":1,"message":"990","line":30,"column":22,"nodeType":"873","messageId":"874","endLine":30,"endColumn":35},{"ruleId":"871","severity":1,"message":"991","line":31,"column":10,"nodeType":"873","messageId":"874","endLine":31,"endColumn":15},{"ruleId":"871","severity":1,"message":"992","line":31,"column":17,"nodeType":"873","messageId":"874","endLine":31,"endColumn":25},{"ruleId":"871","severity":1,"message":"993","line":32,"column":10,"nodeType":"873","messageId":"874","endLine":32,"endColumn":21},{"ruleId":"871","severity":1,"message":"994","line":32,"column":23,"nodeType":"873","messageId":"874","endLine":32,"endColumn":37},{"ruleId":"871","severity":1,"message":"995","line":34,"column":10,"nodeType":"873","messageId":"874","endLine":34,"endColumn":15},{"ruleId":"871","severity":1,"message":"996","line":34,"column":17,"nodeType":"873","messageId":"874","endLine":34,"endColumn":25},{"ruleId":"871","severity":1,"message":"997","line":35,"column":10,"nodeType":"873","messageId":"874","endLine":35,"endColumn":18},{"ruleId":"871","severity":1,"message":"998","line":35,"column":20,"nodeType":"873","messageId":"874","endLine":35,"endColumn":31},{"ruleId":"871","severity":1,"message":"999","line":36,"column":10,"nodeType":"873","messageId":"874","endLine":36,"endColumn":25},{"ruleId":"871","severity":1,"message":"1000","line":36,"column":27,"nodeType":"873","messageId":"874","endLine":36,"endColumn":45},{"ruleId":"871","severity":1,"message":"1001","line":64,"column":9,"nodeType":"873","messageId":"874","endLine":64,"endColumn":22},{"ruleId":"871","severity":1,"message":"1002","line":4,"column":10,"nodeType":"873","messageId":"874","endLine":4,"endColumn":18},{"ruleId":"871","severity":1,"message":"1003","line":5,"column":8,"nodeType":"873","messageId":"874","endLine":5,"endColumn":21},{"ruleId":"871","severity":1,"message":"1004","line":36,"column":26,"nodeType":"873","messageId":"874","endLine":36,"endColumn":43},{"ruleId":"886","severity":1,"message":"887","line":98,"column":6,"nodeType":"888","endLine":107,"endColumn":4,"suggestions":"1005"},{"ruleId":"886","severity":1,"message":"887","line":86,"column":6,"nodeType":"888","endLine":95,"endColumn":4,"suggestions":"1006"},{"ruleId":"871","severity":1,"message":"1007","line":4,"column":16,"nodeType":"873","messageId":"874","endLine":4,"endColumn":24},{"ruleId":"871","severity":1,"message":"1008","line":8,"column":3,"nodeType":"873","messageId":"874","endLine":8,"endColumn":21},{"ruleId":"886","severity":1,"message":"887","line":32,"column":6,"nodeType":"888","endLine":32,"endColumn":20,"suggestions":"1009"},{"ruleId":"871","severity":1,"message":"877","line":10,"column":3,"nodeType":"873","messageId":"874","endLine":10,"endColumn":9},{"ruleId":"871","severity":1,"message":"1010","line":17,"column":25,"nodeType":"873","messageId":"874","endLine":17,"endColumn":37},{"ruleId":"871","severity":1,"message":"1011","line":18,"column":10,"nodeType":"873","messageId":"874","endLine":18,"endColumn":19},{"ruleId":"871","severity":1,"message":"1012","line":25,"column":10,"nodeType":"873","messageId":"874","endLine":25,"endColumn":19},{"ruleId":"871","severity":1,"message":"972","line":25,"column":21,"nodeType":"873","messageId":"874","endLine":25,"endColumn":33},{"ruleId":"871","severity":1,"message":"975","line":26,"column":10,"nodeType":"873","messageId":"874","endLine":26,"endColumn":18},{"ruleId":"871","severity":1,"message":"976","line":26,"column":20,"nodeType":"873","messageId":"874","endLine":26,"endColumn":31},{"ruleId":"871","severity":1,"message":"1013","line":28,"column":10,"nodeType":"873","messageId":"874","endLine":28,"endColumn":18},{"ruleId":"871","severity":1,"message":"1014","line":28,"column":20,"nodeType":"873","messageId":"874","endLine":28,"endColumn":31},{"ruleId":"871","severity":1,"message":"1015","line":29,"column":10,"nodeType":"873","messageId":"874","endLine":29,"endColumn":18},{"ruleId":"871","severity":1,"message":"1016","line":29,"column":20,"nodeType":"873","messageId":"874","endLine":29,"endColumn":31},{"ruleId":"871","severity":1,"message":"995","line":30,"column":10,"nodeType":"873","messageId":"874","endLine":30,"endColumn":15},{"ruleId":"871","severity":1,"message":"996","line":30,"column":17,"nodeType":"873","messageId":"874","endLine":30,"endColumn":25},{"ruleId":"871","severity":1,"message":"1017","line":31,"column":10,"nodeType":"873","messageId":"874","endLine":31,"endColumn":15},{"ruleId":"871","severity":1,"message":"1018","line":31,"column":17,"nodeType":"873","messageId":"874","endLine":31,"endColumn":25},{"ruleId":"871","severity":1,"message":"1019","line":32,"column":10,"nodeType":"873","messageId":"874","endLine":32,"endColumn":24},{"ruleId":"871","severity":1,"message":"1020","line":32,"column":26,"nodeType":"873","messageId":"874","endLine":32,"endColumn":43},{"ruleId":"871","severity":1,"message":"1021","line":33,"column":10,"nodeType":"873","messageId":"874","endLine":33,"endColumn":24},{"ruleId":"871","severity":1,"message":"1022","line":33,"column":26,"nodeType":"873","messageId":"874","endLine":33,"endColumn":43},{"ruleId":"886","severity":1,"message":"887","line":100,"column":6,"nodeType":"888","endLine":108,"endColumn":4,"suggestions":"1023"},"no-native-reassign",["1024"],"no-negated-in-lhs",["1025"],"no-unused-vars","'DashboardScreen' is defined but never used.","Identifier","unusedVar","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["1024"],["1025"],"'cartItemsFromStorage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkChapter'. Either include it or remove the dependency array.","ArrayExpression",["1026"],["1027"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["1024"],["1025"],"'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'totalPayment' is assigned a value but never used.",["1028"],["1029"],["1030"],["1024"],["1025"],["1024"],["1025"],["1031"],"'React' is defined but never used.","'chapterRegisterLoading' is assigned a value but never used.","'CardColumns' is defined but never used.","'Nav' is defined but never used.","'Link' is defined but never used.","'listUsers' is defined but never used.","'deleteUser' is defined but never used.","'listPendingUsers' is defined but never used.","'deletePendingUser' is defined but never used.","'createAdminUser' is defined but never used.","'deleteAdminUser' is defined but never used.","'deleteChapter' is defined but never used.","'listChapters' is defined but never used.","'FormContainer' is defined but never used.","'registerLoading' is assigned a value but never used.","'registerError' is assigned a value but never used.","'LinkContainer' is defined but never used.",["1032"],["1024"],["1025"],"'Component' is defined but never used.","'Formik' is defined but never used.","'Yup' is defined but never used.","'eventAllLoading' is assigned a value but never used.","'eventAllError' is assigned a value but never used.",["1033"],"'errorDelete' is assigned a value but never used.","'errorUserPendingDelete' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkChapter', 'createAdminHandler', 'deleteUserHandler', and 'editUserHandler'. Either include them or remove the dependency array.",["1034"],["1035"],"'allImage' is defined but never used.",["1024"],["1025"],["1024"],["1025"],"React Hook useMemo has a missing dependency: 'users'. Either include it or remove the dependency array.",["1036"],"React Hook useMemo has a missing dependency: 'COLUMNS'. Either include it or remove the dependency array.",["1037"],["1024"],["1025"],["1038"],["1039"],["1040"],"React Hook useEffect has a missing dependency: 'newCreatedEvent.eventId'. Either include it or remove the dependency array.",["1041"],"React Hook useEffect has missing dependencies: 'eventContact.contactEmail', 'eventContact.contactPhone', 'eventContact.eventContactId', 'eventContact.memberId', 'eventContact.positionName', 'eventPublishError', and 'userInfo'. Either include them or remove the dependency array.",["1042"],"'PayPalButton' is defined but never used.","'registerEvent' is defined but never used.","'sdkReady' is assigned a value but never used.","'cartItems' is assigned a value but never used.",["1043"],"'successPaymentHandler' is assigned a value but never used.",["1044"],"'keyword' is assigned a value but never used.","'deletePaymentType' is defined but never used.","'listPaymentTypes' is defined but never used.","'registerPaymentType' is defined but never used.","'PAYMENT_TYPE_LIST_RESET' is defined but never used.","'PAYMENT_TYPE_REGISTER_RESET' is defined but never used.","'ReactDOM' is defined but never used.","'useField' is defined but never used.","'MyCheckbox' is defined but never used.","'setFirstName' is assigned a value but never used.","'mInit' is assigned a value but never used.","'setMInit' is assigned a value but never used.","'lastName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'address1' is assigned a value but never used.","'setAddress1' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'zipcode' is assigned a value but never used.","'setZipcode' is assigned a value but never used.","'primaryPhone' is assigned a value but never used.","'setPrimaryPhone' is assigned a value but never used.","'degree' is assigned a value but never used.","'setDegree' is assigned a value but never used.","'degreeYear' is assigned a value but never used.","'setDegreeYear' is assigned a value but never used.","'major' is assigned a value but never used.","'setMajor' is assigned a value but never used.","'collegeName' is assigned a value but never used.","'setCollegeName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'CKEditor' is defined but never used.","'ClassicEditor' is defined but never used.","'setProfilePicture' is assigned a value but never used.",["1045"],["1046"],"'Carousel' is defined but never used.","'getHomeScreenImage' is defined but never used.",["1047"],"'getEventById' is defined but never used.","'addToCart' is defined but never used.","'firstName' is assigned a value but never used.","'isMember' is assigned a value but never used.","'setIsMember' is assigned a value but never used.","'memberId' is assigned a value but never used.","'setMemberId' is assigned a value but never used.","'phone' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'numberOfAdults' is assigned a value but never used.","'setNumberOfAdults' is assigned a value but never used.","'numberOfMinors' is assigned a value but never used.","'setNumberOfMinors' is assigned a value but never used.",["1048"],"no-global-assign","no-unsafe-negation",{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1051","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"1051","fix":"1066"},{"desc":"1067","fix":"1068"},{"desc":"1069","fix":"1070"},{"desc":"1051","fix":"1071"},{"desc":"1062","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1075","fix":"1076"},{"desc":"1077","fix":"1078"},{"desc":"1079","fix":"1080"},{"desc":"1081","fix":"1082"},{"desc":"1083","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},"Update the dependencies array to be: [dispatch, history, userInfo, success, email, password, redirect, errorLogin, veResendError, checkChapter]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [checkChapter, dispatch]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [history, dispatch, userInfo, successPay, errorPay, checkChapter]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [history, dispatch, userInfo, addDonation, donateResulte, checkChapter]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [dispatch, history, userInfo, success, cMemberNewError, cMemberUpdateError, cMemberByIdSuccess, cMember, cMemberUpdateSuccess, successDelete, checkChapter]",{"range":"1099","text":"1100"},{"range":"1101","text":"1094"},"Update the dependencies array to be: [dispatch, history, userInfo, success, announcementByIdSuccess, announcement, announcementUpdateSuccess, successDelete, checkChapter]",{"range":"1102","text":"1103"},"Update the dependencies array to be: [dispatch, history, userInfo, success, successDelete, checkChapter]",{"range":"1104","text":"1105"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successUserPendingDelete, successAdmin, successDeleteAdmin, checkChapter, editUserHandler, createAdminHandler, deleteUserHandler]",{"range":"1106","text":"1107"},{"range":"1108","text":"1094"},"Update the dependencies array to be: [users]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [COLUMNS]",{"range":"1111","text":"1112"},{"range":"1113","text":"1094"},{"range":"1114","text":"1105"},"Update the dependencies array to be: [dispatch, history, userInfo, chapterSettingsNewSuccess, chapterSettingsUpdateSuccess, chapterSettingsNewError, chapterSettingsUpdateError, checkChapter]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [dispatch, userInfo, history, success, error, newCreatedEvent.eventId]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [dispatch, history, id, success, eventUpdateSuccess, eventContactByIdSuccess, eventContactUpdateSuccess, successDelete, eventPublishSuccess, eventUnpublishSuccess, eventUnpublishError, userInfo, eventPublishError, eventContact.eventContactId, eventContact.memberId, eventContact.positionName, eventContact.contactEmail, eventContact.contactPhone]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [dispatch, id, history, eventRegisterSuccess, eventRegisterError, success, cartError, checkChapter]",{"range":"1121","text":"1122"},"Update the dependencies array to be: [checkChapter, dispatch, history, userInfo]",{"range":"1123","text":"1124"},"Update the dependencies array to be: [dispatch, history, userInfo, success, helpByIdSuccess, help, helpUpdateSuccess, successDelete, checkChapter]",{"range":"1125","text":"1126"},"Update the dependencies array to be: [dispatch, history, userInfo, success, linkByIdSuccess, link, linkUpdateSuccess, successDelete, checkChapter]",{"range":"1127","text":"1128"},"Update the dependencies array to be: [checkChapter, dispatch, id]",{"range":"1129","text":"1130"},"Update the dependencies array to be: [dispatch, history, eventRegisterSuccess, eventRegisterError, success, cartError, checkChapter]",{"range":"1131","text":"1132"},[2804,2947],"[dispatch, history, userInfo, success, email, password, redirect, errorLogin, veResendError, checkChapter]",[2776,2786],"[checkChapter, dispatch]",[3175,3226],"[history, dispatch, userInfo, successPay, errorPay, checkChapter]",[3377,3434],"[history, dispatch, userInfo, addDonation, donateResulte, checkChapter]",[3380,3577],"[dispatch, history, userInfo, success, cMemberNewError, cMemberUpdateError, cMemberByIdSuccess, cMember, cMemberUpdateSuccess, successDelete, checkChapter]",[1022,1032],[3210,3375],"[dispatch, history, userInfo, success, announcementByIdSuccess, announcement, announcementUpdateSuccess, successDelete, checkChapter]",[2929,2982],"[dispatch, history, userInfo, success, successDelete, checkChapter]",[5541,5686],"[dispatch, history, userInfo, successDelete, successUserPendingDelete, successAdmin, successDeleteAdmin, checkChapter, editUserHandler, createAdminHandler, deleteUserHandler]",[662,672],[395,397],"[users]",[442,444],"[COLUMNS]",[670,680],[2386,2560],[2830,3010],"[dispatch, history, userInfo, chapterSettingsNewSuccess, chapterSettingsUpdateSuccess, chapterSettingsNewError, chapterSettingsUpdateError, checkChapter]",[2087,2132],"[dispatch, userInfo, history, success, error, newCreatedEvent.eventId]",[4902,5175],"[dispatch, history, id, success, eventUpdateSuccess, eventContactByIdSuccess, eventContactUpdateSuccess, successDelete, eventPublishSuccess, eventUnpublishSuccess, eventUnpublishError, userInfo, eventPublishError, eventContact.eventContactId, eventContact.memberId, eventContact.positionName, eventContact.contactEmail, eventContact.contactPhone]",[2981,3107],"[dispatch, id, history, eventRegisterSuccess, eventRegisterError, success, cartError, checkChapter]",[1048,1077],"[checkChapter, dispatch, history, userInfo]",[3254,3395],"[dispatch, history, userInfo, success, helpByIdSuccess, help, helpUpdateSuccess, successDelete, checkChapter]",[2690,2831],"[dispatch, history, userInfo, success, linkByIdSuccess, link, linkUpdateSuccess, successDelete, checkChapter]",[1012,1026],"[checkChapter, dispatch, id]",[3148,3277],"[dispatch, history, eventRegisterSuccess, eventRegisterError, success, cartError, checkChapter]"]